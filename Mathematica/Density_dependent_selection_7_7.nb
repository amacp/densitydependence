(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    734000,      14896]
NotebookOptionsPosition[    717286,      14387]
NotebookOutlinePosition[    717670,      14404]
CellTagsIndexPosition[    717627,      14401]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Preliminaries", "Title",
 CellChangeTimes->{{3.741711985343645*^9, 3.741711987449339*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nMax", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Ceiling", "[", 
    RowBox[{
     RowBox[{"1.2", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "s", "+", 
          RowBox[{"r0", " ", "s"}]}], ")"}], " ", "\[Gamma]0"}], 
       RowBox[{"r0", " ", "s"}]]}], "/.", "pars"}], "]"}], "/.", 
   "pars"}]}]], "Input",
 CellChangeTimes->{{3.736855209782083*^9, 3.736855214414249*^9}, {
   3.736855255920123*^9, 3.736855259255724*^9}, {3.736855319857791*^9, 
   3.7368553242645617`*^9}, {3.73685853570481*^9, 3.736858566229143*^9}, 
   3.73728463503832*^9, 3.7384992995351686`*^9, 3.73849970858731*^9, {
   3.738500571689981*^9, 3.7385005728386393`*^9}, {3.738510921787362*^9, 
   3.738510926875494*^9}, 3.7386025554283857`*^9, {3.738604463918737*^9, 
   3.738604464489728*^9}, {3.7386046382945004`*^9, 3.738604639456394*^9}, {
   3.738609381704523*^9, 3.738609382918947*^9}, {3.738610184864867*^9, 
   3.738610187087503*^9}, {3.739129714423993*^9, 3.7391297273431187`*^9}, {
   3.7392003718463163`*^9, 3.739200377004829*^9}, 3.739200562068241*^9, 
   3.739201107283271*^9, 3.739202648817267*^9, {3.7392027149229107`*^9, 
   3.73920271847295*^9}, {3.7398929772158213`*^9, 3.739892978361923*^9}, {
   3.739893174506076*^9, 3.7398931850732117`*^9}, {3.740331065416954*^9, 
   3.740331125845111*^9}, {3.7404958520650473`*^9, 3.740495856969738*^9}, {
   3.740496424040285*^9, 3.740496427898738*^9}, {3.740497456311153*^9, 
   3.740497458383856*^9}, 3.7417127442239532`*^9, {3.741713395274797*^9, 
   3.741713396056095*^9}, {3.74171679981573*^9, 3.7417168050282583`*^9}, 
   3.741716844610215*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", 
   RowBox[{"i1_", ",", "i2_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"i1", "-", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"nMax", "[", "pars", "]"}], ")"}]}], "+", "i2"}]}]], "Input",
 CellChangeTimes->{{3.736857653111795*^9, 3.736857696034358*^9}, {
  3.7368580349364977`*^9, 3.736858035819002*^9}, {3.736858306375016*^9, 
  3.736858312526959*^9}, {3.739994028210256*^9, 3.7399940299105463`*^9}, {
  3.740335936577663*^9, 3.7403359399121733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r0", "\[Rule]", "0.2"}], ",", 
     RowBox[{"\[Gamma]0", "\[Rule]", "10"}], ",", 
     RowBox[{"s", "\[Rule]", "0.95"}], ",", 
     RowBox[{"\[Sigma]", "\[Rule]", "0.00"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7372083025020027`*^9, 3.737208302802949*^9}, {
   3.737208461840138*^9, 3.7372084621792383`*^9}, {3.7372157235446568`*^9, 
   3.737215727727324*^9}, {3.737285049958247*^9, 3.7372850588734627`*^9}, {
   3.737287324881892*^9, 3.737287325143168*^9}, 3.738498445130323*^9, 
   3.738500833541526*^9, {3.738602695499476*^9, 3.7386027129224777`*^9}, {
   3.738602761405912*^9, 3.738602766987995*^9}, {3.738603057021617*^9, 
   3.738603068556573*^9}, {3.7386042059697313`*^9, 3.73860420739253*^9}, {
   3.738604244710699*^9, 3.7386042734488363`*^9}, {3.738604851286499*^9, 
   3.738604852814423*^9}, {3.7386050688181467`*^9, 3.7386050696341887`*^9}, 
   3.738605227809945*^9, 3.738605329033855*^9, 3.738605669534161*^9, 
   3.738606128642763*^9, 3.738606433805314*^9, 3.7386084169924927`*^9, 
   3.738610182048574*^9, 3.73861049226514*^9, {3.738611966571117*^9, 
   3.738611968070735*^9}, {3.738949423724223*^9, 3.7389494239300337`*^9}, {
   3.738951968025531*^9, 3.738951968551862*^9}, {3.739020395005355*^9, 
   3.739020397284165*^9}, {3.7390204434621477`*^9, 3.739020468021894*^9}, {
   3.739030556875469*^9, 3.7390305584049273`*^9}, {3.739031174836697*^9, 
   3.7390311770922318`*^9}, {3.73909890772397*^9, 3.7390989380326967`*^9}, {
   3.7390992195089397`*^9, 3.7390992488205214`*^9}, {3.739100012154499*^9, 
   3.739100021878083*^9}, 3.7391018228236923`*^9, {3.739101906794217*^9, 
   3.739101907535943*^9}, {3.739129029154777*^9, 3.7391290436504803`*^9}, {
   3.739129443570657*^9, 3.739129445639056*^9}, {3.739129689930729*^9, 
   3.739129693570725*^9}, 3.739129817136354*^9, 3.7391818539346*^9, 
   3.7391819196940403`*^9, 3.739198904888195*^9, {3.739200228905204*^9, 
   3.739200247164969*^9}, {3.739200750709692*^9, 3.739200792872802*^9}, {
   3.739200949704069*^9, 3.739200949853841*^9}, {3.739201036226449*^9, 
   3.73920103865207*^9}, 3.739201175804821*^9, {3.7392012122249727`*^9, 
   3.739201218031712*^9}, {3.739202189733294*^9, 3.739202190779662*^9}, 
   3.739202228595606*^9, {3.739202278747868*^9, 3.739202282006215*^9}, {
   3.739202320113224*^9, 3.7392023236871147`*^9}, 3.739202379504017*^9, {
   3.739202428622909*^9, 3.739202485806416*^9}, {3.739892672393692*^9, 
   3.739892672524639*^9}, {3.739892827939804*^9, 3.739892871153749*^9}, 
   3.739893001677854*^9, {3.739893088621155*^9, 3.739893114563651*^9}, {
   3.739893148443492*^9, 3.739893166495501*^9}, {3.740331038246949*^9, 
   3.7403310449929953`*^9}, {3.740331132092733*^9, 3.7403311374643793`*^9}, {
   3.740331205007771*^9, 3.740331205973381*^9}, 3.740335555212998*^9, 
   3.740336015993596*^9, 3.740336104111895*^9, 3.740336180089621*^9, {
   3.740336501198435*^9, 3.740336501291013*^9}, 3.7403366016269712`*^9, {
   3.7403370307996063`*^9, 3.740337038975424*^9}, {3.7403382507552547`*^9, 
   3.740338250890905*^9}, 3.7403389878907747`*^9, {3.740495797049159*^9, 
   3.74049580226504*^9}, {3.740495923027367*^9, 3.740495923134467*^9}, {
   3.7404964216192503`*^9, 3.740496421782844*^9}, {3.741013794021912*^9, 
   3.741013795303465*^9}, 3.7413691959422007`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", ">", 
   FractionBox["1", 
    RowBox[{"1", "+", "r0"}]]}], "/.", "test"}]], "Input",
 CellChangeTimes->{{3.73920054052462*^9, 3.739200549891966*^9}, 
   3.740495870170372*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7392005502163763`*^9, {3.7392007521592617`*^9, 3.739200758957913*^9}, 
   3.73920079551149*^9, 3.739200901791403*^9, {3.739200953089541*^9, 
   3.739200978681469*^9}, 3.7392010445056267`*^9, 3.739201124543981*^9, 
   3.73920117940903*^9, 3.7392012281755238`*^9, 3.739202197043543*^9, 
   3.739202232961122*^9, 3.739202285306637*^9, 3.739202327045659*^9, 
   3.739202385256981*^9, {3.7392024501405888`*^9, 3.7392024596337147`*^9}, {
   3.739202652879768*^9, 3.7392026728573227`*^9}, 3.739202721483199*^9, 
   3.7398925823114634`*^9, 3.7398927195904512`*^9, 3.73999395681602*^9, 
   3.7399940490584183`*^9, 3.740331240492175*^9, 3.7403399813851643`*^9, {
   3.740495845823154*^9, 3.740495870616623*^9}, 3.740502300706378*^9, 
   3.741002222541185*^9, 3.741003466657983*^9, 3.74101379963323*^9, 
   3.741361112493044*^9, 3.741361342779951*^9, 3.741363485772563*^9, 
   3.741368056719119*^9, 3.741368090286807*^9, 3.741368549123069*^9, 
   3.741368780762411*^9, 3.741369199666583*^9, 3.741711667303505*^9, 
   3.741711989629601*^9, 3.741712746781419*^9, 3.741713398246009*^9, 
   3.741716774636669*^9, 3.741716813274419*^9, {3.741716849649701*^9, 
   3.74171686502663*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmaxN", "=", "100"}], " ", ";", " ", 
  RowBox[{"\[CapitalDelta]tN", "=", "5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tmaxP", "=", "500"}], ";", 
  RowBox[{"\[CapitalDelta]tP", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7392013084361477`*^9, 3.73920131640508*^9}, {
   3.739202446381751*^9, 3.7392024946936483`*^9}, {3.739202589760846*^9, 
   3.739202590006769*^9}, 3.739202633689452*^9, {3.7403312641088123`*^9, 
   3.74033126601705*^9}, 3.741003456221305*^9}],

Cell[CellGroupData[{

Cell["Initial vector", "Subsection",
 CellChangeTimes->{{3.736857446470757*^9, 3.736857451094302*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vec0", "[", 
   RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i1", ",", "i2"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i1", "=", "1"}], ",", 
       RowBox[{"i1", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i1", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i2", "=", "1"}], ",", 
         RowBox[{"i2", "\[LessEqual]", " ", 
          RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
         RowBox[{"i2", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i1", "\[Equal]", 
              RowBox[{"n0", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
             RowBox[{"i2", "\[Equal]", 
              RowBox[{"n0", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"out", ",", "1"}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"out", ",", "0"}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "//", "N"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{{3.736860861926353*^9, 3.736860927655245*^9}, {
  3.7372074020551367`*^9, 3.737207449926573*^9}, {3.737207630448002*^9, 
  3.737207631893848*^9}, {3.7403356004027777`*^9, 3.740335603177631*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["vector to matrix", "Subsection",
 CellChangeTimes->{{3.7368574628184223`*^9, 3.736857467742909*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"v2m", "[", 
   RowBox[{"pars_", ",", "vIn_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out2", ",", "i1", ",", "i2", ",", "ct"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i1", ",", "1", ",", 
          RowBox[{"nMax", "[", "pars", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i2", ",", "1", ",", 
          RowBox[{"nMax", "[", "pars", "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"ct", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i1", "=", "1"}], ",", 
       RowBox[{"i1", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i1", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i2", "=", "1"}], ",", 
          RowBox[{"i2", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"i2", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"out2", "[", 
             RowBox[{"[", 
              RowBox[{"i1", ",", "i2"}], "]"}], "]"}], "=", 
            RowBox[{"vIn", "[", 
             RowBox[{"[", "ct", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ct", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "out2"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7368574732626343`*^9, 3.7368574811522503`*^9}, {
  3.736857828676024*^9, 3.7368578380962763`*^9}, {3.736860465270643*^9, 
  3.736860508884638*^9}, {3.7368607567483673`*^9, 3.736860843610677*^9}, {
  3.736860954209117*^9, 3.736861155287634*^9}, {3.740335639372364*^9, 
  3.7403356493705177`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["The Ecological model", "Title",
 CellChangeTimes->{{3.736769316749917*^9, 3.7367693206363077`*^9}}],

Cell[CellGroupData[{

Cell["Deterministic population dynamics", "Chapter",
 CellChangeTimes->{{3.737140525094428*^9, 3.7371405550857477`*^9}, {
  3.741363340005237*^9, 3.741363342177822*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"n", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"r0", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["n", "\[Gamma]0"]}], ")"}]}]}], ")"}], "s"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.736765925081023*^9, 3.736765968986207*^9}, {
   3.736787075481513*^9, 3.736787076729856*^9}, 3.737141491003276*^9, {
   3.737215618261203*^9, 3.7372156201731997`*^9}, {3.738605049450264*^9, 
   3.738605060379353*^9}, {3.739199630668983*^9, 3.739199667397534*^9}, 
   3.739200218511345*^9, {3.74033100266438*^9, 3.740331002857094*^9}, {
   3.740495808907455*^9, 3.740495810153927*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalDelta]n", "=", 
   RowBox[{
    RowBox[{"n1", "-", "n"}], "//", "Factor"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7367660163903103`*^9, 3.73676604711757*^9}, 
   3.7367734313942547`*^9, {3.737141483745949*^9, 3.737141489714654*^9}, {
   3.738605072975168*^9, 3.738605073568913*^9}}],

Cell[CellGroupData[{

Cell["Equilibria-Exact", "Section",
 CellChangeTimes->{{3.7367733380587997`*^9, 3.736773340143964*^9}, {
  3.7372830683856573`*^9, 3.7372830696916847`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\[CapitalDelta]n"], "Input"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", " ", "r0", " ", "s"}], "+", "\[Gamma]0", "-", 
      RowBox[{"s", " ", "\[Gamma]0"}], "-", 
      RowBox[{"r0", " ", "s", " ", "\[Gamma]0"}]}], ")"}]}], 
   "\[Gamma]0"]}]], "Output",
 CellChangeTimes->{
  3.7367734355296583`*^9, 3.736787082904814*^9, 3.737141071252033*^9, {
   3.7371412761329613`*^9, 3.7371412981314917`*^9}, 3.737197060535531*^9, 
   3.737207222451416*^9, 3.737207258220007*^9, 3.737215629385097*^9, {
   3.738606696095944*^9, 3.738606713029316*^9}, 3.738606761461968*^9, 
   3.73903118125517*^9, {3.73919965182762*^9, 3.739199669558305*^9}, 
   3.739200260349265*^9, 3.739200804673007*^9, 3.739200957566475*^9, 
   3.739201050760654*^9, 3.7392011305426292`*^9, 3.739201185501444*^9, 
   3.739201234038815*^9, 3.739202202080042*^9, 3.739202238729965*^9, 
   3.739202288885137*^9, 3.739202332718589*^9, 3.739202399405896*^9, 
   3.7392024693068666`*^9, 3.739202678747066*^9, 3.740331009790125*^9, 
   3.740331248516349*^9, 3.740495813654232*^9, 3.7417168497785797`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equi", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"\[CapitalDelta]n", "\[Equal]", "0"}], ",", "n"}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7367871172392387`*^9, 3.736787183340784*^9}, {
  3.7404958765432043`*^9, 3.740495885037692*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "s", "+", 
         RowBox[{"r0", " ", "s"}]}], ")"}], " ", "\[Gamma]0"}], 
      RowBox[{"r0", " ", "s"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.736787130194083*^9, 3.736787183688136*^9}, 
   3.737141071422674*^9, 3.737141300144526*^9, 3.737197060787835*^9, 
   3.737207222612255*^9, 3.737207258419897*^9, 3.737215629594164*^9, {
   3.738606696357875*^9, 3.7386067130813437`*^9}, 3.738606761649186*^9, 
   3.7390311814466763`*^9, {3.739199653481895*^9, 3.739199670778345*^9}, 
   3.739200278462132*^9, 3.739200804751857*^9, 3.739200957631072*^9, 
   3.739201050819831*^9, 3.7392011307009373`*^9, 3.73920118556921*^9, 
   3.739201234102462*^9, 3.73920220211271*^9, 3.7392022387607193`*^9, 
   3.7392022889189053`*^9, 3.7392023327514057`*^9, 3.7392023994435883`*^9, 
   3.739202469357684*^9, 3.739202678788967*^9, 3.7403310147921047`*^9, 
   3.740331146342211*^9, 3.740331248599477*^9, 3.740495815238769*^9, 
   3.740495885519946*^9, 3.741716849836433*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Biological validity", "Subsection",
 CellChangeTimes->{{3.736773459555319*^9, 3.73677346190429*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "/.", 
        RowBox[{"equi", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], ">", "0"}], ",", 
     RowBox[{"0", "<", "\[Gamma]"}], ",", 
     RowBox[{"0", "<", "s", "<", "1"}], ",", 
     RowBox[{"0", "<", "r"}]}], "}"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.73677346451026*^9, 3.736773551199922*^9}, {
   3.736787190792418*^9, 3.736787203818364*^9}, 3.739200284342214*^9, 
   3.7403311529026337`*^9}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.736773480645423*^9, 3.736773551477127*^9}, {
   3.736787195893981*^9, 3.736787204381647*^9}, 3.737141071522729*^9, 
   3.737141303080782*^9, 3.737197060917452*^9, 3.7372072227051487`*^9, 
   3.737207258567198*^9, 3.737215629693499*^9, {3.738606696816041*^9, 
   3.7386067133170233`*^9}, 3.738606761984668*^9, 3.7390311818024483`*^9, 
   3.7391996760086603`*^9, 3.739200286093506*^9, 3.739200804805203*^9, 
   3.739200957679747*^9, 3.739201050852434*^9, 3.739201130751624*^9, 
   3.739201185606299*^9, 3.7392012341332417`*^9, 3.739202202159565*^9, 
   3.739202238811017*^9, 3.739202288964471*^9, 3.7392023327997513`*^9, 
   3.739202399495438*^9, 3.739202469387342*^9, 3.7392026788389673`*^9, 
   3.740331028717114*^9, 3.740331149870594*^9, 3.740331251409223*^9, 
   3.740495817164963*^9, 3.740495887289055*^9, 3.741716849917202*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "/.", 
        RowBox[{"equi", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], ">", "0"}], ",", 
     RowBox[{"0", "<", "\[Gamma]0"}], ",", 
     RowBox[{"0", "<", "s", "<", "1"}], ",", 
     RowBox[{"0", "<", "r0"}]}], "}"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.736787224866527*^9, 3.73678722498918*^9}, 
   3.739200292258387*^9, {3.740331155529255*^9, 3.740331160359272*^9}, {
   3.740495822656167*^9, 3.740495824655779*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"r0", ">", "0"}], "&&", 
  RowBox[{"\[Gamma]0", ">", "0"}], "&&", 
  RowBox[{
   RowBox[{"s", "+", 
    RowBox[{"r0", " ", "s"}]}], ">", "1"}], "&&", 
  RowBox[{"s", "<", "1"}]}]], "Output",
 CellChangeTimes->{
  3.736787225421612*^9, 3.737141071567485*^9, 3.737141304297192*^9, 
   3.737197060964126*^9, 3.7372072227770567`*^9, 3.7372072587496367`*^9, 
   3.737215629738611*^9, {3.7386066969409857`*^9, 3.7386067134495497`*^9}, 
   3.7386067621186132`*^9, 3.739031182020904*^9, 3.739199676433283*^9, 
   3.739200293011856*^9, 3.739200804856209*^9, 3.73920095773218*^9, 
   3.739201050903816*^9, 3.739201130802374*^9, 3.7392011856524477`*^9, 
   3.739201234169384*^9, 3.7392022022109957`*^9, 3.739202238877536*^9, 
   3.739202289004879*^9, 3.739202332844533*^9, 3.739202399545034*^9, 
   3.739202469429418*^9, 3.739202678911949*^9, 3.74033103019588*^9, {
   3.740331155967092*^9, 3.7403311607424917`*^9}, 3.740331251585259*^9, {
   3.740495818860119*^9, 3.740495825030407*^9}, 3.740495890173579*^9, 
   3.741716850244931*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stability", "Subsection",
 CellChangeTimes->{{3.737141087059155*^9, 3.73714108945861*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slope", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"\[CapitalDelta]n", ",", "n"}], "]"}], "/.", 
    RowBox[{"equi", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7371411900645227`*^9, 3.7371412618570957`*^9}, {
   3.737141310659545*^9, 3.737141312121867*^9}, 3.7392003008524*^9, {
   3.7403311699870663`*^9, 3.740331170152503*^9}, {3.7404958978775063`*^9, 
   3.7404958987523527`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "r0"}], ")"}], " ", "s"}]}]], "Output",
 CellChangeTimes->{{3.737141198118699*^9, 3.7371413124693747`*^9}, 
   3.737197061017128*^9, 3.73720722284923*^9, 3.737207258833022*^9, 
   3.737215629801642*^9, {3.738606696994707*^9, 3.738606713517227*^9}, 
   3.738606762164481*^9, 3.7390311821377697`*^9, 3.7391996789183493`*^9, 
   3.739200301640519*^9, 3.739200804898755*^9, 3.7392009577992163`*^9, 
   3.739201050951885*^9, 3.7392011308522253`*^9, 3.7392011857100763`*^9, 
   3.739201234222423*^9, 3.739202202254855*^9, 3.739202238908312*^9, 
   3.739202289054895*^9, 3.7392023329029512`*^9, 3.739202399613147*^9, 
   3.7392024694718027`*^9, 3.739202678956738*^9, {3.7403311666954327`*^9, 
   3.74033117090844*^9}, 3.7403312549488173`*^9, 3.740495828404848*^9, 
   3.7404958952877398`*^9, 3.7417168502807827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"slope", "<", "0"}], ",", 
     RowBox[{"0", "<", "\[Gamma]0"}], ",", 
     RowBox[{"0", "<", "s", "<", "1"}], ",", 
     RowBox[{"0", "<", "r0"}]}], "}"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.737141313362191*^9, 3.737141323787158*^9}, {
  3.739199696529985*^9, 3.739199699704419*^9}, {3.739200307290394*^9, 
  3.739200309626018*^9}, {3.740331174066287*^9, 3.740331174286325*^9}, {
  3.740495830427063*^9, 3.740495831620439*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]0", ">", "0"}], "&&", 
  RowBox[{"r0", ">", "0"}], "&&", 
  RowBox[{
   RowBox[{"s", "+", 
    RowBox[{"r0", " ", "s"}]}], ">", "1"}], "&&", 
  RowBox[{"s", "<", "1"}]}]], "Output",
 CellChangeTimes->{
  3.737141324304624*^9, 3.73719706108014*^9, 3.737207222964114*^9, 
   3.737207258897505*^9, 3.737215629855027*^9, {3.73860669720436*^9, 
   3.738606713635191*^9}, 3.7386067623707533`*^9, 3.7390311825382977`*^9, {
   3.739199679205665*^9, 3.739199700221106*^9}, 3.739200310343297*^9, 
   3.73920080495641*^9, 3.739200957838591*^9, 3.7392010510184727`*^9, 
   3.739201130902418*^9, 3.73920118574925*^9, 3.739201234272005*^9, 
   3.739202202293292*^9, 3.73920223896075*^9, 3.739202289089287*^9, 
   3.739202332936434*^9, 3.7392023996446753`*^9, 3.739202469527919*^9, 
   3.739202679005321*^9, 3.7403311756648407`*^9, 3.740331255032518*^9, 
   3.740495831955991*^9, 3.740495900244066*^9, 3.741716850368121*^9}]
}, Open  ]],

Cell["Equilibrium 2 is always valid and stable ", "Text",
 CellChangeTimes->{{3.73714133523345*^9, 3.737141359693899*^9}, 
   3.739200314538443*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical dynamics", "Section",
 CellChangeTimes->{{3.737141373418085*^9, 3.737141376202071*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "nEco", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nEco", "[", 
   RowBox[{"pars_", ",", "tmax_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"0", ",", "n0"}], "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"t", "=", "1"}], ",", 
       RowBox[{"t", "\[LessEqual]", "tmax"}], ",", 
       RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{"n1", "/.", "pars"}], "/.", 
            RowBox[{"n", "\[Rule]", 
             RowBox[{"out", "[", 
              RowBox[{"[", 
               RowBox[{"t", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "out"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.737141402877404*^9, 3.737141474771851*^9}, {
  3.737141507521969*^9, 3.737141547652686*^9}, {3.739200866102531*^9, 
  3.739200871310583*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"nEco", "[", 
    RowBox[{"test", ",", "tMaxN", ",", "4"}], "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737141522705949*^9, 3.737141606378046*^9}, {
   3.737215681340087*^9, 3.737215685282712*^9}, {3.7386046802115517`*^9, 
   3.738604680468081*^9}, 3.738605081236281*^9, {3.738605238663804*^9, 
   3.7386052465383177`*^9}, {3.739199776454897*^9, 3.739199776709579*^9}, {
   3.739201321958581*^9, 3.73920132388584*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0], PointSize[0.019444444444444445`], AbsoluteThickness[1.6], 
     LineBox[{{0., 4.}, {0., 4.}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {0, 8.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7403312595437202`*^9, 3.740331268690835*^9}, {
   3.740495906571347*^9, 3.7404959274926853`*^9}, 3.7417168508148127`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stochastic dynamics", "Chapter",
 CellChangeTimes->{{3.738601874705679*^9, 3.738601878661112*^9}, {
  3.739199784006755*^9, 3.739199784149097*^9}}],

Cell[CellGroupData[{

Cell["Initial vector", "Subsection",
 CellChangeTimes->{{3.736855891481676*^9, 3.736855907136197*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nInit", "[", 
   RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[Equal]", "n0"}], ",", "1", ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"nMax", "[", "pars", "]"}]}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.7371444253980827`*^9, 3.737144439861897*^9}, 
   3.7399940738757668`*^9, 3.740331286229932*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nInit", "[", 
  RowBox[{"test", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.737144440987499*^9, 3.737144445118387*^9}, {
   3.7386046661948557`*^9, 3.738604666518708*^9}, 3.7403312882903423`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.737144445419467*^9, 3.737198501719596*^9, {3.737207204063221*^9, 
   3.7372072317491493`*^9}, 3.7372072707369623`*^9, 3.737215742017982*^9, 
   3.7372847090123377`*^9, {3.738498180275032*^9, 3.7384982009638367`*^9}, 
   3.738499716706636*^9, 3.738500577850522*^9, 3.738510157244392*^9, {
   3.738601911212335*^9, 3.738601925374374*^9}, {3.7386046323925467`*^9, 
   3.7386046667598457`*^9}, 3.7386050955247173`*^9, 3.7386053534496307`*^9, 
   3.738606041135839*^9, 3.738606776324916*^9, 3.738949393642128*^9, 
   3.7391997899408913`*^9, 3.739200578210198*^9, 3.7392007683346767`*^9, 
   3.739200813318837*^9, 3.7392009844024687`*^9, 3.739201060839654*^9, 
   3.739201155228921*^9, 3.7392011929022503`*^9, 3.739201240037139*^9, 
   3.739202207827119*^9, 3.7392022452079697`*^9, {3.7392022933104067`*^9, 
   3.739202304508501*^9}, 3.7392023360946198`*^9, 3.7392024053938093`*^9, 
   3.739202504380031*^9, 3.7392026843821993`*^9, 3.739202729842121*^9, 
   3.7399940766081123`*^9, 3.7403312918544207`*^9, 3.740495935606579*^9, 
   3.74171685111306*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transition matrix", "Subsection",
 CellChangeTimes->{{3.7386019367030067`*^9, 3.738601939261675*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "BMtrx", "]"}]], "Input",
 CellChangeTimes->{{3.739994261819706*^9, 3.739994264975712*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BMtrx", "[", "pars_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i", ",", "j", ",", "\[Lambda]"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"nMax", "[", "pars", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"nMax", "[", "pars", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", " ", "\[LessEqual]", " ", 
          RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
         RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Lambda]", "=", 
           RowBox[{
            RowBox[{"i", " ", "r0", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["i", "\[Gamma]0"]}], ")"}]}], "/.", "pars"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"j", "\[GreaterEqual]", "i"}], "&&", 
             RowBox[{"\[Lambda]", ">", "0"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"out", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", 
             RowBox[{"PDF", "[", 
              RowBox[{
               RowBox[{"TruncatedDistribution", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{
                    RowBox[{"nMax", "[", "pars", "]"}], "-", "i"}]}], "}"}], 
                 ",", 
                 RowBox[{"PoissonDistribution", "[", "\[Lambda]", "]"}]}], 
                "]"}], ",", 
               RowBox[{"j", "-", "i"}]}], "]"}]}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"out", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "j"}], "]"}], "]"}], "+=", 
         RowBox[{"1", "-", 
          RowBox[{"Total", "[", 
           RowBox[{"out", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "j"}], "]"}], "]"}], "]"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "out"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.738603248884701*^9, 3.738603249149768*^9}, 
   3.73860340685178*^9, {3.7386034684425707`*^9, 3.738603600077634*^9}, {
   3.7386036546548557`*^9, 3.7386036589008636`*^9}, {3.738603689052676*^9, 
   3.7386036908467216`*^9}, {3.738603736383997*^9, 3.7386037383538837`*^9}, {
   3.738605879978243*^9, 3.738605961730234*^9}, {3.739199808591609*^9, 
   3.739199810539583*^9}, {3.7399940835283413`*^9, 3.739994084880784*^9}, {
   3.7399941752531853`*^9, 3.739994204694594*^9}, {3.7399942692433357`*^9, 
   3.7399942790504227`*^9}, {3.740331398171297*^9, 3.740331527996457*^9}, {
   3.740331673491922*^9, 3.740331673569829*^9}, {3.740495959032918*^9, 
   3.740495960866084*^9}, {3.740496442771152*^9, 3.740496446722335*^9}, 
   3.740496494484638*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DMtrx", "[", "pars_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"nMax", "[", "pars", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"nMax", "[", "pars", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", " ", "\[LessEqual]", " ", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
         RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "\[LessEqual]", "i"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"out", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", 
             RowBox[{"PDF", "[", 
              RowBox[{
               RowBox[{"BinomialDistribution", "[", 
                RowBox[{"i", ",", 
                 RowBox[{"s", "/.", "pars"}]}], "]"}], ",", "j"}], "]"}]}], 
            ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"out", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "i"}], "]"}], "]"}], "+=", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"i", ",", "s"}], "]"}], ",", "0"}], "]"}], "/.", 
         "pars"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "//", "Chop"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.738603094991034*^9, 3.738603095202489*^9}, {
   3.738603148013921*^9, 3.738603209573564*^9}, {3.738603422207438*^9, 
   3.738603434646339*^9}, {3.738605136380169*^9, 3.738605138207283*^9}, {
   3.739199805559103*^9, 3.739199825035058*^9}, 3.739200584195327*^9, {
   3.739994310206945*^9, 3.739994314454865*^9}, {3.7399943495321817`*^9, 
   3.739994414279497*^9}, {3.740331766373913*^9, 3.740331855393709*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "TMtrx", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TMtrx", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"TMtrx", "[", "pars", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"DMtrx", "[", "pars", "]"}], ".", 
     RowBox[{"BMtrx", "[", "pars", "]"}]}], "//", "Chop"}]}]}]}], "Input",
 CellChangeTimes->{{3.73860378236869*^9, 3.7386038392995663`*^9}, {
   3.7392025632615957`*^9, 3.7392025651204557`*^9}, {3.7392026624963417`*^9, 
   3.739202666692956*^9}, 3.7399944903653593`*^9, {3.7403319006567793`*^9, 
   3.7403319016220512`*^9}, {3.740496514330751*^9, 3.740496514964602*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TMtrx", "[", "test", "]"}], "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.738606111276239*^9, 3.7386061192269917`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxdVXs01PsWF+UIlVflFelxI69ywgq3TylEJ8ohqpOSchJ3KIlB0pVLKc9y
TCQHUaijkkKet0NSUZiKYTxmxsz8ft9fuujBoeuu+/jj7rX22vufz1p77/XZ
n4/B4WD3o3IyMjLz/5P/6v8do/j/OrXw7tgXNoPBeq3kKAUG0ZW8wZd6FKxD
Cw8kuzB4+Yk74epJ0FicXNn4gwS950TbkhYwUAvaEdDEotFz9ICpxoQIxcXm
62xaCfZtsy7LDqLgHnqWf81TAO6Mck3vVYIk2y722RIp8ntDzB/+NIS+jqvJ
1iAwnBzaqe0nwT6O3kuo9WN9rJ55bzwN9SMlzpO2Isg/r8stSHmNL5anDZW0
GLQ89A+ovdUPd/OVj+M2HUNKtKqM6lUGm/++RKuPxaDHq9xIx4gGf+PcV0VH
GayduTl5r4ZgSebybjUvKXZpbu3Q1WHgKdeqqJBPY85jVfUTkSOYCbPWVugg
EBXoULv/RsGtP5EXlSWAsU+V00P2LN7OaM3yzVI0v3m8Vn77ID6NCQLdlhG0
/6G4yvWNGNn7I7bfetKLApaDd4oTDctoH79LxkJEKgmbnRqeo4AjV3Y8hmDA
pLXzYy8fH1xnqnZ9DMazecGcuqcUvDrcxewPQxCfH/Nked/H3C2cT3WxDArC
TEbVVzCQf6Ni4etLoalYMdrGikFdK68rRoFA9mBw7sR5MQ7wc3anCgjiwsSv
RjopeKz12+tyWIgN9pbf0hMI4o05ufGnpLCfQ+rdOgZRM737WvosPkA8Lpsb
LobErW3nF68esDuWeajq0NCoigicPCbAi1qD0drfn8L8cmyvdDGBReRHdovn
ADaA7ZqdfhI7HW8e8ltFI/WkqeRJmgA+jlYuPvLNaIi4QOVN0eBwM3iyEKM5
x7bZg/0eQtMFjQM+DOZTOSe18gmyTcxWnNWQwm257lvhN4IixrdwvS2N0qel
3DGWCGy3qVHH67PzX2zSTmyWQqZroXXezSGwdy2evq5KELr6fZTxDTF4g1zV
C2M9yN07kx71jYKCXl6U9+gwqhOV2jpUGhEm2Mg6/55GYEdXaEvaAKJKH5XG
q5+Cc0X+rWs/0QhvP9OakSBEd5bL1PdXXuL0+Op1FpYENYEqz5psJFj2Czcn
xqsPpmpVnxuSCWwts7lFKVLMz23jDSwZAvFvMiozZEDFrfB16KZx77ud/o+/
jUCte/zBhQcE4q877Iu0KZjo2x4Lih1G3jwbuQRDgoPj05/3y0mgkSRp/+UM
D6K/HKg/O05Bo9xCblfDMMrDDzmNmdYjMKln0YHpWb6q5d4wZg0gZpml+WLz
UEwtUauYiaShf6lGGKksglnbDovOrg580hS+03YnsN928Aa7RALZrIC9F+P5
uEXO9y8sI1j0yD7r8IwUSc/134xYDYOfrezsRRE8ODr2Io5QaDgiVR4pFCIh
MyitsY8gKuqpv1k1hfyxoJW++kK08DhrbzsTrE59Zp52UYLIp81PLvH7YVft
NDdcmcYznsMuPSMBxps+Zf7c3oRXBXELHLwJJpgPnX3qAzCP0/JookJw0LCs
ffNNGt3f3+U6/S7CttV77EtLO6GU+MjO0YdAJtp2MOydBLmyhV2+NgMI/LEp
ta6aIGOjZvygJYUc8cyWLS3DqBibCtL6SpAia6xyzoCGcuWXTAMTEWQmpq8I
DRjYffzwtqSGhr9NRrR+7QiylEz8NE8QHOevYl3Rl0JX3rnAZ2wACfv7dRrs
aOg1rqEc/xAgxDrrEuuHVozfifv5Qj9BzmRVyKQuH1Fp3QrWhoHQDFifsbCW
xsW89F8PmY6AFZe5R9OhG9ZVt9U0AwjMQo4f8p4jxfvP7kurCwew/9STaxua
CEz/4Kuou1Po9+U8ylQRQNl5bWutPAP9RWZtCzxpmIn8g6zvixBy/cGEzJ8Z
3OvK+6y5YvYPdKvPXG4Ro3qlxmNtbwbNdbe/xiYS9IoiMqnXEhxfdc2+nDO7
/wr3yYp0EWJqdl9vFLxBShB148WvDB44lB9T5PQh5KVDzZlgX9zZrn6H1UVj
04+kh5MxgjGD36zWvOWi4XXw67RYAh2D8FsL9kmRwG8bPp00iCPFw/XjXALj
9rYd0XmzfI72pC7yBCAl0o+eGgxSdZIDgxJpfF1puKfbegQZRopWz7Yy8KtZ
Pb/SdvbeSm3TJooStG8qGwoKYjDiWn/DpZvgdkVpZxFHCm5L5NfzCQw25Gu7
l9ky0BUKz40XUP/zq8FIjbtOgz34r6M5D7hqLKVn9TZ1euuiqRFIlxaVq7Le
ofnY6a38wlk96Sq3sB2WIqaNXeA4OgRnw4QS138QKKwTPOF+R6NocWj2QYkQ
pnUzzaHmDMLul78eZmjoup4I328vxvjbiAqP3Qyqs6aviFkE7sw5eKdIEK1r
98EilIHJGfs/DTMELl+K/2rDk2Ke1fJpl2QGfHVSuc2TQSV78/sEEQXJcZ7s
2+xZP738W2RYIgMfj+KIu4E0/gnse+QZ
   "], {{0, 0}, {9, 9}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{8.5, 
       FormBox["1", TraditionalForm]}, {7.5, 
       FormBox["2", TraditionalForm]}, {6.5, 
       FormBox["3", TraditionalForm]}, {5.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {3.5, 
       FormBox["6", TraditionalForm]}, {2.5, 
       FormBox["7", TraditionalForm]}, {1.5, 
       FormBox["8", TraditionalForm]}, {0.5, 
       FormBox["9", TraditionalForm]}}, {{8.5, 
       FormBox["1", TraditionalForm]}, {7.5, 
       FormBox["2", TraditionalForm]}, {6.5, 
       FormBox["3", TraditionalForm]}, {5.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {3.5, 
       FormBox["6", TraditionalForm]}, {2.5, 
       FormBox["7", TraditionalForm]}, {1.5, 
       FormBox["8", TraditionalForm]}, {0.5, 
       FormBox["9", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}, {8.5, 
       FormBox["9", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}, {8.5, 
       FormBox["9", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.7386061144423933`*^9, 3.738606136801836*^9}, 
   3.738606727786079*^9, 3.738606777134985*^9, 3.738949401138341*^9, 
   3.738949433327283*^9, 3.738951983496607*^9, {3.739199799943891*^9, 
   3.739199829112667*^9}, 3.739200592939143*^9, 3.739200771408712*^9, 
   3.739200816271995*^9, 3.73920098973398*^9, {3.739201062266247*^9, 
   3.7392010784606752`*^9}, 3.739201158954918*^9, 3.739201193062792*^9, 
   3.7392012402511272`*^9, 3.739202207991136*^9, 3.73920224538931*^9, {
   3.7392022934150057`*^9, 3.739202336315604*^9}, 3.739202406110627*^9, 
   3.739202511970587*^9, 3.739202567522655*^9, 3.7392026854955273`*^9, 
   3.7392027302046824`*^9, 3.739994493279606*^9, {3.7403318831585197`*^9, 
   3.740331903381816*^9}, 3.7404959670103817`*^9, 3.740496517716874*^9, 
   3.7417168520244303`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dynamics", "Subsection",
 CellChangeTimes->{{3.738604689682911*^9, 3.7386046937436647`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"state", "[", 
   RowBox[{"pars_", ",", "n0_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"TMtrx", "[", "pars", "]"}], ",", "t"}], "]"}], ".", 
   RowBox[{"nInit", "[", 
    RowBox[{"pars", ",", "n0"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.738604694992476*^9, 3.738604748670762*^9}, {
   3.7386057944672747`*^9, 3.7386057976615*^9}, {3.738606249835593*^9, 
   3.7386062500733347`*^9}, 3.740331919280963*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"state", "[", 
       RowBox[{"test", ",", "4", ",", "i"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "tMaxN", ",", "\[CapitalDelta]tN"}], 
      "}"}]}], "]"}], "]"}], "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.740332018218552*^9, 3.740332039684723*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,29,1,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852183584*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,29,2,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.74171685219164*^9}],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Reverse\\\", \\\"[\\\", \
RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"i\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"]\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a \
matrix.\"",2,29,3,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852197226*^9}],

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Reverse", "[", 
      RowBox[{"state", "[", 
       RowBox[{"test", ",", "4", ",", "i"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "tMaxN", ",", "5"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.74033202611246*^9, 3.740332040200448*^9}, 
   3.740495974220851*^9, 3.740496525292117*^9, 3.741716852202826*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"distPlot1", "=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"0.5", "-", 
         RowBox[{"Reverse", "[", 
          RowBox[{"state", "[", 
           RowBox[{"test", ",", "4", ",", "i"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "tMaxN", ",", "\[CapitalDelta]tN"}], 
         "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"nMax", "[", "test", "]"}], "-", "i", "+", "1"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{"nMax", "[", "test", "]"}], ",", "2"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], " ", "\[CapitalDelta]tN"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             FractionBox["tMaxN", "\[CapitalDelta]tN"], "+", "1"}], ",", 
            "5"}], "}"}]}], "]"}], ",", "False", ",", "False"}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.738604750120788*^9, 3.738604785800727*^9}, 
   3.7386048231866283`*^9, {3.738606171434832*^9, 3.738606182162158*^9}, {
   3.738606263148048*^9, 3.738606265591468*^9}, {3.738950327613412*^9, 
   3.738950335401284*^9}, {3.738950385582807*^9, 3.738950393464971*^9}, {
   3.7389504289477243`*^9, 3.7389505321359243`*^9}, {3.738950905823655*^9, 
   3.738950970255526*^9}, 3.7389511769095163`*^9, {3.7389512550735283`*^9, 
   3.7389512580646687`*^9}, {3.7389520096317596`*^9, 3.738952040410128*^9}, 
   3.739200777753819*^9, {3.739201340537562*^9, 3.739201348271247*^9}, {
   3.739201379716172*^9, 3.739201381611556*^9}, {3.739201482351276*^9, 
   3.739201598899979*^9}, {3.739201664764043*^9, 3.739201689308095*^9}, 
   3.740331953276044*^9, {3.740332058048924*^9, 3.740332091035779*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,30,4,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852251122*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,30,5,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852259988*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", RowBox[{\\\"1\\\", \\\"+\\\", \
FractionBox[\\\"tMaxN\\\", \\\"5\\\"]}], \\\",\\\", \\\"5\\\"}], \
\\\"}\\\"}]\\) does not have appropriate bounds.\"",2,30,6,
   19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852265534*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Table\\\", \\\"::\\\", \
\\\"iterb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,30,7,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.74171685227099*^9}],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"0.5`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"-\\\", RowBox[{\\\"Reverse\\\", \\\"[\\\", \
RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"i\\\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"]\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a \
matrix.\"",2,30,8,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852276546*^9}],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"0.5`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"-\\\", RowBox[{\\\"Reverse\\\", \\\"[\\\", \
RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"i\\\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"]\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a \
matrix.\"",2,30,9,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7417168522817717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"meanPlot1", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          FractionBox["g", "\[CapitalDelta]tN"], ",", 
          RowBox[{"{", 
           RowBox[{"g", ",", "0", ",", "tMaxN", ",", "\[CapitalDelta]tN"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"state", "[", 
            RowBox[{"test", ",", "4", ",", "g"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"g", ",", "0", ",", "tMaxN", ",", "\[CapitalDelta]tN"}], 
            "}"}]}], "]"}], ".", 
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"nMax", "[", "test", "]"}]}], "}"}]}], "]"}]}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739201704180748*^9, 3.739201711618505*^9}, {
  3.739201855713731*^9, 3.739201878558519*^9}, {3.7392019305729322`*^9, 
  3.7392019399333763`*^9}, {3.739201978548568*^9, 3.7392019884099293`*^9}, {
  3.740332117056588*^9, 3.740332118046103*^9}, {3.7403321492177277`*^9, 
  3.740332151831032*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,31,10,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852333625*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,31,11,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7417168523425407`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,31,12,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852347995*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Table\\\", \\\"::\\\", \
\\\"iterb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,31,13,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.74171685235338*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \\\",\\\", \\\
\"4\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"g\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \
\\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}]\\) \
cannot be transposed.\"",2,31,14,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7417168523591213`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`16.\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`16.\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`16.\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\".\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`16.\\\", \\\",\\\", \\\"2.`16.\\\", \
\\\",\\\", \\\"3.`16.\\\", \\\",\\\", \\\"4.`16.\\\", \\\",\\\", \\\"5.`16.\\\
\", \\\",\\\", \\\"6.`16.\\\", \\\",\\\", \\\"7.`16.\\\", \\\",\\\", \
\\\"8.`16.\\\", \\\",\\\", \\\"9.`16.\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}]\\) \
cannot be transposed.\"",2,31,15,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.74171685240757*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"2.`\\\", \\\
\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\
\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \\\"8.`\\\", \\\",\\\", \
\\\"9.`\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}]\\) cannot be transposed.\"",2,31,
   16,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7417168524292088`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"nmtx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,31,17,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852464881*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"2.`\\\", \\\
\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\
\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \\\"8.`\\\", \\\",\\\", \
\\\"9.`\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}], \\\"]\\\"}]\\) is not a list of \
numbers or pairs of numbers.\"",2,31,18,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852500416*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"2.`\\\", \\\
\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\
\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \\\"8.`\\\", \\\",\\\", \
\\\"9.`\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}], \\\"]\\\"}]\\) is not a list of \
numbers or pairs of numbers.\"",2,31,19,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852551375*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"2.`\\\", \\\
\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\
\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \\\"8.`\\\", \\\",\\\", \
\\\"9.`\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}], \\\"]\\\"}]\\) is not a list of \
numbers or pairs of numbers.\"",2,31,20,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852602138*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListLinePlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,31,21,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852623825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"detPlot1", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          FractionBox["g", "\[CapitalDelta]tN"], ",", 
          RowBox[{"{", 
           RowBox[{"g", ",", "0", ",", "tMaxN", ",", "\[CapitalDelta]tN"}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"nEco", "[", 
            RowBox[{"test", ",", "tMaxN", ",", "4"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"g", "+", "1"}], ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"g", ",", "0", ",", "tMaxN", ",", "\[CapitalDelta]tN"}], 
           "}"}]}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.73920215469755*^9, 3.739202171411635*^9}, {
  3.740332143325309*^9, 3.740332145829171*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,32,22,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7417168526668797`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,32,23,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852676609*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,32,24,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852682109*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Table\\\", \\\"::\\\", \
\\\"iterb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,32,25,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.74171685268734*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"nEco\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"4\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"g\\\", \\\"+\\\", \\\"1\\\"}], \
\\\",\\\", \\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]\\) cannot be transposed.\"",2,32,26,19061673920428655088,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.74171685269287*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\
\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"nEco\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"4\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"g\\\", \\\"+\\\", \\\"1\\\"}], \
\\\",\\\", \\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]\\) cannot be transposed.\"",2,32,27,19061673920428655088,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852698295*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`16.\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"nEco\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"4.`16.\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"g\\\", \\\"+\\\", \\\"1\\\"}], \
\\\",\\\", \\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`16.\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}]\\) cannot be transposed.\"",2,32,28,19061673920428655088,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852782221*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"nmtx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,32,29,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852829723*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"nEco\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"4.`\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"g\\\", \\\"+\\\", \\\"1\\\"}], \
\\\",\\\", \\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) is not a list of numbers or pairs of numbers.\"",
   2,32,30,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852837788*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"nEco\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"4.`\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"g\\\", \\\"+\\\", \\\"1\\\"}], \
\\\",\\\", \\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) is not a list of numbers or pairs of numbers.\"",
   2,32,31,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852906357*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"nEco\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"4.`\\\"}], \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{RowBox[{\\\"g\\\", \\\"+\\\", \\\"1\\\"}], \
\\\",\\\", \\\"2\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) is not a list of numbers or pairs of numbers.\"",
   2,32,32,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852949739*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListLinePlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,32,33,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716852968294*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ecoDyn", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"distPlot1", ",", "meanPlot1", ",", "detPlot1"}], "}"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7389512730117493`*^9, 3.738951274207891*^9}, {
   3.738951409562874*^9, 3.738951447250087*^9}, 3.7389517376844053`*^9, {
   3.7389518212592382`*^9, 3.738951823345461*^9}, {3.7392019548970127`*^9, 
   3.7392019717457113`*^9}, {3.7392021742891703`*^9, 
   3.7392021764713783`*^9}, {3.7392026058851347`*^9, 3.739202609910215*^9}, 
   3.740332156571495*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]\\) \
does not have appropriate bounds.\"",2,33,34,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716853036626*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", RowBox[{\\\"1\\\", \\\"+\\\", \
FractionBox[\\\"tMaxN\\\", \\\"5\\\"]}], \\\",\\\", \\\"5\\\"}], \
\\\"}\\\"}]\\) does not have appropriate bounds.\"",2,33,35,
   19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.74171685304491*^9}],

Cell[BoxData[
 TemplateBox[{
  "MatrixPlot","mat0",
   "\"Argument \\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"0.5`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"-\\\", RowBox[{\\\"Reverse\\\", \\\"[\\\", \
RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"i\\\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\"]\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a \
matrix.\"",2,33,36,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716853052951*^9}],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"MatrixPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"Table\\\", \
\\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"0.5`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"-\\\", RowBox[{\\\"Reverse\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \\\"0\\\
\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"ColorFunction\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"GrayTones\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"FrameTicks\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"\\\\\\\"10\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"\\\\\\\"8\\\\\\\"\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"\
\\\\\\\"6\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"6\\\", \\\",\\\", \\\"\\\\\\\"4\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"8\\\", \\\",\\\", \
\\\"\\\\\\\"2\\\\\\\"\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"i\\\", \\\",\\\", RowBox[{\\\"ToString\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"False\\\"}], \\\"}\\\"}]}]}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"12\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"]\\\"}]\\).\"",2,33,37,19061673920428655088,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.74171685306087*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]\\) does not have appropriate bounds.\"",2,33,38,
   19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7417168531038237`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Table\\\", \\\"::\\\", \
\\\"iterb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,33,39,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7417168531338367`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"2.`\\\", \\\
\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\
\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \\\"8.`\\\", \\\",\\\", \
\\\"9.`\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}]\\) cannot be transposed.\"",2,33,
   40,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716853153097*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"2.`\\\", \\\
\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\
\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \\\"8.`\\\", \\\",\\\", \
\\\"9.`\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}], \\\"]\\\"}]\\) is not a list of \
numbers or pairs of numbers.\"",2,33,41,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716853186151*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"2.`\\\", \\\
\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\
\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \\\"8.`\\\", \\\",\\\", \
\\\"9.`\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}]\\) cannot be transposed.\"",2,33,
   42,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716853230319*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"2.`\\\", \\\
\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\
\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \\\"8.`\\\", \\\",\\\", \
\\\"9.`\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}], \\\"]\\\"}]\\) is not a list of \
numbers or pairs of numbers.\"",2,33,43,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716853253189*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"2.`\\\", \\\
\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\
\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \\\"8.`\\\", \\\",\\\", \
\\\"9.`\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}]\\) cannot be transposed.\"",2,33,
   44,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716853297119*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Transpose\\\", \\\"::\\\
\", \\\"nmtx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,33,45,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716853318747*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{FractionBox[\\\"g\\\", \\\"\
\[CapitalDelta]tN\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\
\", RowBox[{RowBox[{\\\"state\\\", \\\"[\\\", RowBox[{\\\"test\\\", \
\\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"g\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"g\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"tMaxN\\\", \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"2.`\\\", \\\
\",\\\", \\\"3.`\\\", \\\",\\\", \\\"4.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\
\", \\\"6.`\\\", \\\",\\\", \\\"7.`\\\", \\\",\\\", \\\"8.`\\\", \\\",\\\", \
\\\"9.`\\\"}], \\\"}\\\"}]}]}], \\\"}\\\"}], \\\"]\\\"}]\\) is not a list of \
numbers or pairs of numbers.\"",2,33,46,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716853353278*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListLinePlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,33,47,19061673920428655088,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.741716853386032*^9}],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"MatrixPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Transpose\\\", \\\"[\\\", RowBox[{\\\"Table\\\", \
\\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"0.5`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"-\\\", RowBox[{\\\"Reverse\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \\\"0\\\
\", \\\",\\\", \\\"tMaxN\\\", \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"ColorFunction\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"GrayTones\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"FrameTicks\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"\\\\\\\"10\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"\\\\\\\"8\\\\\\\"\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"\
\\\\\\\"6\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"6\\\", \\\",\\\", \\\"\\\\\\\"4\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"8\\\", \\\",\\\", \
\\\"\\\\\\\"2\\\\\\\"\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"i\\\", \\\",\\\", RowBox[{\\\"ToString\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"False\\\"}], \\\"}\\\"}]}]}], \\\"]\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"12\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"]\\\"}]\\).\"",2,33,48,19061673920428655088,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.74171685343734*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixPlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
           RowBox[{"Reverse", "[", 
            RowBox[{"state", "[", 
             RowBox[{"test", ",", "4", ",", "i"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "tMaxN", ",", "5"}], "}"}]}], "]"}], 
        "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\<\"GrayTones\"\>"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "\<\"10\"\>"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "\<\"8\"\>"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "\<\"6\"\>"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", "\<\"4\"\>"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8", ",", "\<\"2\"\>"}], "}"}]}], "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], " ", "\[CapitalDelta]tN"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"1", "+", 
               FractionBox["tMaxN", "5"]}], ",", "5"}], "}"}]}], "]"}], ",", 
          "False", ",", "False"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox["g", "\[CapitalDelta]tN"], ",", 
            RowBox[{"{", 
             RowBox[{"g", ",", "0", ",", "tMaxN", ",", "5"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"state", "[", 
              RowBox[{"test", ",", "4", ",", "g"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"g", ",", "0", ",", "tMaxN", ",", "5"}], "}"}]}], "]"}],
            ".", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
             ",", "8", ",", "9"}], "}"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           "RGBColor[1, 0, 0]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[1, 0, 0],
         Editable->False,
         Selectable->False]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox["g", "\[CapitalDelta]tN"], ",", 
            RowBox[{"{", 
             RowBox[{"g", ",", "0", ",", "tMaxN", ",", "5"}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"nEco", "[", 
              RowBox[{"test", ",", "tMaxN", ",", "4"}], "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"g", "+", "1"}], ",", "2"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"g", ",", "0", ",", "tMaxN", ",", "5"}], "}"}]}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->RGBColor[0., 0., 0.6666666666666666],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 1.35 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}],
            PlotRangePadding->None],
           "RGBColor[0, 0, 1]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0, 0, 1],
         Editable->False,
         Selectable->False]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.738951417610133*^9, 3.7389514477583523`*^9}, {
   3.7389517321929626`*^9, 3.738951739316043*^9}, 3.738951823794487*^9, 
   3.7389520019881973`*^9, {3.738952091506156*^9, 3.738952096958209*^9}, 
   3.739201027984074*^9, {3.739201073670909*^9, 3.739201080401616*^9}, 
   3.73920116451379*^9, 3.739201197768437*^9, 3.739201247685248*^9, {
   3.739201488186178*^9, 3.739201499553731*^9}, {3.739201972626083*^9, 
   3.7392019932927027`*^9}, 3.739202177031292*^9, 3.73920221272679*^9, 
   3.739202250112197*^9, 3.739202294091036*^9, 3.739202346799488*^9, 
   3.739202413709837*^9, {3.739202578164802*^9, 3.7392026385827217`*^9}, 
   3.7392026883920116`*^9, 3.739202730842939*^9, {3.7403321353797607`*^9, 
   3.740332156880206*^9}, 3.7404959821194477`*^9, 3.740496532399918*^9, 
   3.741716853448409*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stationary distribution", "Subsection",
 CellChangeTimes->{{3.738512251335237*^9, 3.7385122636196938`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"equs", ",", "vars"}], "]"}]], "Input",
 CellChangeTimes->{{3.738512748081018*^9, 3.73851275230177*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"equs", "[", "pars_", "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"TMtrx", "[", "pars", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", ";;"}], ",", 
              RowBox[{"2", ";;"}]}], "]"}], "]"}], ".", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "2", ",", 
               RowBox[{"nMax", "[", "pars", "]"}]}], "}"}]}], "]"}]}], ")"}], 
         "[", 
         RowBox[{"[", 
          RowBox[{"j", "-", "1"}], "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"\[CapitalPi]", "[", "1", "]"}], " ", 
         RowBox[{
          RowBox[{"TMtrx", "[", "pars", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}]}]}], "\[Equal]", 
       RowBox[{"\[CapitalPi]", "[", "j", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2", ",", 
        RowBox[{"nMax", "[", "pars", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"nMax", "[", "pars", "]"}]}], "}"}]}], "]"}], "]"}], 
      "\[Equal]", 
      RowBox[{"1", "-", 
       RowBox[{"\[CapitalPi]", "[", "1", "]"}]}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.738512651267112*^9, 3.7385126815971117`*^9}, {
  3.738512717780148*^9, 3.738512724421364*^9}, {3.738512755324379*^9, 
  3.738512780085231*^9}, {3.738603934508222*^9, 3.738603950646862*^9}, {
  3.740332183617692*^9, 3.740332197515357*^9}, {3.740332804970994*^9, 
  3.7403328451244297`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vars", "[", "pars_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"nMax", "[", "pars", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.738512683108411*^9, 3.738512699439714*^9}, {
  3.738512732845014*^9, 3.738512736643385*^9}, {3.738512789966703*^9, 
  3.738512797922542*^9}, {3.7403328627191896`*^9, 3.740332862953342*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "statDist", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"statDist", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"statDist", "[", "pars", "]"}], "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"nMax", "[", "pars", "]"}]}], "}"}]}], "]"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{"NSolve", "[", 
       RowBox[{
        RowBox[{"equs", "[", "pars", "]"}], ",", 
        RowBox[{"vars", "[", "pars", "]"}]}], "]"}], "]"}], 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7385127060302143`*^9, 3.738512711506703*^9}, {
   3.7385128004046793`*^9, 3.738512808662706*^9}, {3.7385128477973433`*^9, 
   3.7385128870206614`*^9}, 3.738513186323915*^9, {3.738517833180649*^9, 
   3.738517849335445*^9}, {3.738520574666086*^9, 3.738520578334515*^9}, {
   3.738603941629662*^9, 3.738603946432425*^9}, {3.738604519554234*^9, 
   3.7386045254119043`*^9}, 3.7403351968275633`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"statMean", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"statDist", "[", "pars", "]"}], ".", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"nMax", "[", "pars", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.740496016527606*^9, 3.740496017926787*^9}, {
  3.740496604033114*^9, 3.740496638882963*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "statMean"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "statMean"}], "}"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.741716853850121*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"statDistPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MatrixPlot", "[", 
      RowBox[{
       RowBox[{"0.5", "-", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Reverse", "[", 
           RowBox[{"statDist", "[", "test", "]"}], "]"}], "}"}], "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"False", ",", "False", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nMax", "[", "test", "]"}], "+", "1"}], ",", 
              "\"\<0\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nMax", "[", "test", "]"}], "-", "9"}], ",", 
              "\"\<10\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nMax", "[", "test", "]"}], "-", "4"}], ",", 
              "\"\<5\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"ToString", "[", 
               RowBox[{"nMax", "[", "test", "]"}], "]"}]}], "}"}]}], "}"}], 
          ",", "False"}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}], 
     ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"statMean", "[", "test", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"statMean", "[", "test", "]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"n", "/.", 
             RowBox[{"equi", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "/.", "test"}]}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{"n", "/.", 
             RowBox[{"equi", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "/.", "test"}]}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.738952407215843*^9, 3.738952432760398*^9}, {
  3.738952472520584*^9, 3.738952576946656*^9}, {3.738952732163624*^9, 
  3.73895273563315*^9}, {3.739200622589733*^9, 3.739200624549725*^9}, {
  3.740335235711439*^9, 3.7403352377144337`*^9}, {3.740496656950838*^9, 
  3.740496660186098*^9}}],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{{0.917794, 0.920966, 0.881936}}, {{0.8921239692442287, 
    0.8954489103960966, 0.8594222179846718}}, {{0.8622650473181275, 
    0.8657678868900001, 0.8332345882988051}}, {{0.8256523757628587, 
    0.8293733523605067, 0.8011236136670817}}, {{0.7576474913044356, 
    0.7617736386422624, 0.7414802435737172}}, {{0.6861793881565428, 
    0.6963455034962266, 0.6840427762143283}}, {{0.5905094974016697, 
    0.6092069165106806, 0.6075713373751174}}, {{0.6328160905286244, 
    0.647740845170649, 0.6413881006563957}}, {{0.7809627179588637, 
    0.7849499539858892, 0.7619287555186338}}}, {{0, 0}, {1, 9}}, {0, 
    1}], {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[{{0., 6.573037732048244}, {1., 
       6.573037732048244}}]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[{{0., 7.368421052631575}, {1., 
       7.368421052631575}}]}}, {}, {}, {{}, {}}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{False, {{-0.5, 
       FormBox["\"0\"", TraditionalForm]}, {9.5, 
       FormBox["\"10\"", TraditionalForm]}, {4.5, 
       FormBox["\"5\"", TraditionalForm]}, {8.5, 
       FormBox["\"9\"", TraditionalForm]}}}, {False, False}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.7389524761738234`*^9, 3.7389525063802223`*^9}, 
   3.7389525438996153`*^9, 3.738952577480998*^9, 3.738952736281188*^9, 
   3.739200625815126*^9, 3.740335239958293*^9, 3.7404965968646708`*^9, {
   3.7404966410829067`*^9, 3.740496660720747*^9}, 3.741716853929006*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Density-independent Selection", "Title",
 CellChangeTimes->{{3.736769316749917*^9, 3.736769331896503*^9}}],

Cell[CellGroupData[{

Cell["Evolution in an infinite population", "Chapter",
 CellChangeTimes->{{3.736769400689321*^9, 3.736769407052925*^9}, {
  3.736790266413701*^9, 3.736790267890788*^9}, {3.736876093543746*^9, 
  3.7368761006539173`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ndi", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"n", "[", "i", "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"r0", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", "[", "1", "]"}], "+", 
            RowBox[{"n", "[", "2", "]"}]}], ")"}], "\[Gamma]0"]}], ")"}]}]}], 
     ")"}], 
    RowBox[{"s", "[", "i", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.736765925081023*^9, 3.736765968986207*^9}, {
   3.7367693443706417`*^9, 3.7367693924500093`*^9}, {3.736769932406015*^9, 
   3.7367699337683477`*^9}, {3.736769981238819*^9, 3.736769986046405*^9}, {
   3.7367872510680656`*^9, 3.73678725133465*^9}, {3.7367875168379307`*^9, 
   3.7367875259575443`*^9}, {3.737208197378318*^9, 3.737208199487698*^9}, 
   3.7372084334095583`*^9, {3.7372158091090097`*^9, 3.7372158134527197`*^9}, {
   3.737215918775525*^9, 3.737215918953923*^9}, {3.737286537865602*^9, 
   3.737286538240115*^9}, {3.739198833626648*^9, 3.739198837154255*^9}, {
   3.739713696211993*^9, 3.739713697715673*^9}, {3.740335281879182*^9, 
   3.740335282052822*^9}, {3.740496804973815*^9, 3.74049680637307*^9}, {
   3.741363364195952*^9, 3.741363364517524*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[CapitalDelta]n", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]ndi", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ndi", "[", "i", "]"}], "-", 
   RowBox[{"n", "[", "i", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7367698566027803`*^9, 3.736769866368392*^9}, {
  3.736769919434391*^9, 3.736769920703907*^9}, {3.736787522873136*^9, 
  3.736787531626338*^9}, {3.7403353666992397`*^9, 3.740335370135275*^9}, {
  3.741363367233548*^9, 3.741363373375594*^9}}],

Cell[CellGroupData[{

Cell["Equilibria", "Section",
 CellChangeTimes->{{3.741002289568174*^9, 3.741002304015357*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equDI", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalDelta]ndi", "[", "1", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[CapitalDelta]ndi", "[", "2", "]"}], "\[Equal]", "0"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "[", "1", "]"}], ",", 
       RowBox[{"n", "[", "2", "]"}]}], "}"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "1", "]"}], "\[Rule]", "s"}], ",", 
     RowBox[{
      RowBox[{"s", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"s", "-", "\[Sigma]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.740335383666864*^9, 3.740335406818509*^9}, {
   3.741002307445209*^9, 3.741002308555296*^9}, {3.741003330472468*^9, 
   3.7410033320603533`*^9}, {3.741003413879302*^9, 3.74100341508051*^9}, {
   3.7413612825345373`*^9, 3.741361297681489*^9}, {3.741363402007433*^9, 
   3.741363405522654*^9}, {3.741363439234939*^9, 3.741363450768025*^9}, 
   3.7413635607951717`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"n", "[", "2", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"\[Gamma]0", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "s", "+", 
          RowBox[{"r0", " ", 
           RowBox[{"(", 
            RowBox[{"s", "-", "\[Sigma]"}], ")"}]}], "-", "\[Sigma]"}], 
         ")"}]}], 
       RowBox[{"r0", " ", 
        RowBox[{"(", 
         RowBox[{"s", "-", "\[Sigma]"}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"n", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "[", "1", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "s", "+", 
          RowBox[{"r0", " ", "s"}]}], ")"}], " ", "\[Gamma]0"}], 
       RowBox[{"r0", " ", "s"}]]}], ",", 
     RowBox[{
      RowBox[{"n", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.740335386295274*^9, 3.740335407250853*^9}, 
   3.740339938680469*^9, 3.7403399879158907`*^9, {3.740496812642386*^9, 
   3.740496819450692*^9}, 3.7404976423939857`*^9, {3.7404979203834133`*^9, 
   3.740497929271175*^9}, 3.74100219493845*^9, 3.74100222830702*^9, {
   3.741002425325985*^9, 3.741002444867185*^9}, {3.741002512833214*^9, 
   3.7410025316476707`*^9}, 3.741003383277493*^9, 3.741003415566532*^9, 
   3.741361146910892*^9, {3.7413613505966787`*^9, 3.741361360871862*^9}, 
   3.7413634061934633`*^9, 3.741363451192445*^9, {3.741363561202227*^9, 
   3.741363567661577*^9}, 3.7413680602660303`*^9, 3.741368094817878*^9, 
   3.74136878366707*^9, 3.7413692074995623`*^9, 3.741716854050487*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EquSubDetDI", "[", "pars_", "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"n", "[", "1", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "s", "+", 
           RowBox[{"r0", " ", "s"}]}], ")"}], " ", "\[Gamma]0"}], 
        RowBox[{"r0", " ", "s"}]]}], ",", 
      RowBox[{
       RowBox[{"n", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}], "/.", 
    "pars"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.741002314812764*^9, 3.741002346889638*^9}, 
   3.741002543400772*^9, {3.741003434548292*^9, 3.741003434970867*^9}, {
   3.741363408616394*^9, 3.741363455930814*^9}, {3.741363565952464*^9, 
   3.7413635733206987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotEquDetDI", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", "[", "1", "]"}], "+", 
     RowBox[{"n", "[", "2", "]"}]}], ")"}], "/.", 
   RowBox[{"EquSubDetDI", "[", "pars", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7410066371388397`*^9, 3.741006662741503*^9}, {
  3.7413634631318083`*^9, 3.741363467203909*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFEquDetDI", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    FractionBox[
     RowBox[{"n", "[", "1", "]"}], 
     RowBox[{
      RowBox[{"n", "[", "1", "]"}], "+", 
      RowBox[{"n", "[", "2", "]"}]}]], ")"}], "/.", 
   RowBox[{"EquSubDetDI", "[", "pars", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7410066371388397`*^9, 3.7410066479094763`*^9}, {
  3.741363468865452*^9, 3.7413634727509727`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical Dynamics", "Section",
 CellChangeTimes->{{3.737208042408675*^9, 3.737208044763852*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nDynDetDI", "[", 
   RowBox[{"pars_", ",", "n0_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", "n0"}], "]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"t", "=", "1"}], ",", 
       RowBox[{"t", "\[LessEqual]", "tmax"}], ",", 
       RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"out", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"ndi", "[", "1", "]"}], ",", 
               RowBox[{"ndi", "[", "2", "]"}]}], "}"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"s", "[", "1", "]"}], "\[Rule]", "s"}], ",", 
               RowBox[{
                RowBox[{"s", "[", "2", "]"}], "\[Rule]", 
                RowBox[{"s", "-", "\[Sigma]"}]}]}], "}"}]}], "/.", "pars"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"n", "[", "1", "]"}], "\[Rule]", 
              RowBox[{"out", "[", 
               RowBox[{"[", 
                RowBox[{"t", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"n", "[", "2", "]"}], "\[Rule]", 
              RowBox[{"out", "[", 
               RowBox[{"[", 
                RowBox[{"t", ",", "3"}], "]"}], "]"}]}]}], "}"}]}]}], "]"}], "/.",
         "pars"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
      "out"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.737208057755501*^9, 3.7372082510886393`*^9}, {
   3.737287454408121*^9, 3.737287454899273*^9}, {3.7391000586313057`*^9, 
   3.739100058835929*^9}, {3.740335439585185*^9, 3.740335453475708*^9}, {
   3.740335505001142*^9, 3.740335509867734*^9}, {3.740497668818448*^9, 
   3.740497679323032*^9}, {3.7404977905337143`*^9, 3.740497819443193*^9}, {
   3.741003442372301*^9, 3.741003442784214*^9}, {3.741003509063217*^9, 
   3.741003510566848*^9}, {3.741004438872592*^9, 3.741004439087523*^9}, {
   3.7413634957734213`*^9, 3.741363517940815*^9}, 3.741363551130924*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"temp", "=", 
   RowBox[{"nDynDetDI", "[", 
    RowBox[{"test", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", "tmaxP"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "tmaxN"}], ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "tmaxN"}], ",", "2"}], "]"}], "]"}], "+", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "tmaxN"}], ",", "3"}], "]"}], "]"}]}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "2"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"temp", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "3"}], "]"}], "]"}]}]]}], "}"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7372081816857*^9, 3.7372081918625927`*^9}, {
  3.7372082762931004`*^9, 3.7372082935085077`*^9}, {3.7372084707969847`*^9, 
  3.737208492311429*^9}, {3.737208544201949*^9, 3.737208558047208*^9}, {
  3.737216018745685*^9, 3.73721605424275*^9}, {3.739020511040214*^9, 
  3.739020521270797*^9}, {3.7391000992205687`*^9, 3.7391001025689507`*^9}, {
  3.7410034820229816`*^9, 3.74100350060504*^9}, {3.741004453257821*^9, 
  3.741004453429551*^9}, {3.741363541268639*^9, 3.741363541617322*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[0.01388888888888889], AbsoluteThickness[1.6],
          LineBox[CompressedData["
1:eJxVyw9Q02Ucx/EfROAViM4xliDQRCJAGy4ENjc+GzLBMdgG+6N4cOk04pBE
cMpx2bph3QV0tU7zymrcRaDnEXIdnIRBaA2sll6eaSR0qbNMkSGUUWF6/b5P
13P33HOvez+fx7c8b9oWzHGc/f598P7/LMK/71SOZ+lTlxNDF/PmoLkYETQe
JuC9AF9ktUYPBy8B7S40/7a5bYYshH3A1HVoTMhbjPG+Zml8bxTvWDjtmZcj
XCLeCejPFM561NG8Jag4fGC2LkBORKFBIWlwi3kn4eDNRwO3Eh/jnQyBUf+x
/gg5Bf1/GwdyE5byTkP3n7WBd18lr8LLZ+Pfxy9kKSrHlv0Uo4zhnY6vUr+5
JXmFvBrT24PS8kbIMpw51Sh+LiiW99Nwp/s/qJSRM6At9V5fWEFegzMTLd+J
9pMzIfHGXkj5kJyFuJTIi1eHydmY2NE75xsjy1F/22a3B8gK3Dz+iVEQsoz3
WvR0TcuzhWQltEfT762UkFXgliwMV6wi58DeuHlvWxYZSP6yJ+JtNW8nUD39
qdJSQF2NmT2y4CADdTXEc0kdg2bqGrS+0eTs2URdg1F5R/NsOfVchN92zXu2
UM/F+eBfPx/dRn0d+g/Uz7xUSX0d5O+0L79URT0Pk1tHR36opp6H3eFX9h2q
oa7Fe6HzWtFO6lpMFYcNlddSX4+7ZQprwy7q66GCeFd1HfV8/OHvdCvrqedj
pvCaI0DmCjCt+FrWspv6fbt9hYsd1DfAPzXrdZGdG+Art+X4WdfhIZVoSr6H
ug7aOJ3XReYKgUdkO4ZZL8T8E6eL7rKux3LRnfakvdT1iBWccxaRuSL0th7z
7mS9CJ16q+Y11ouRXNZ9uIP1YnT/3Fx1knUDGrsjU8+SYUDrmrd0P7L/Blg6
pSmT5CEDXh8eip5jeyN6Vny/MaSB9kY8PGJKiyA7jZjs8wwLyUNGXBWHFsSQ
ORNeSH3zWgLbm2BRhpxYwfYmeFqcE0+yvQkOh6p2JduXIPbYIpeU7UtwpH0i
Scb2JTgfJajOYPsSGAf9FZlsX4q2vs8istm+FHWXal6Us30pEm9sOqlg+1Ls
GzztW8v2ZuQ3XT+hZHszpIL4JhXbm7EgI2x1Dtub0dl60MvMWVB0PCMfbG9B
Wfi3vcxOC7b/dSdKzfYWPLP/1LPMnBV9v8d1McOKsHOeG8xOKyKjj8Zp2N4K
w9YqHTNnw0afv5YZNoiu3HMzO20YH3B89N/ehriagPeB/wH7Povh
          
          "]]}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 3.8315790594048154`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Medium,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 99.}, {4., 7.368418811903693}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[0.011111111111111112`], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1:eJxd10mOHEUUBuCAFUsvWLBgkSCEEEIomWcceDY2OD3P7uh2d7s9gJN5hjhC
HSGPUEeII9QNiCOkADODkQUSiq82pU//exH5ojK7qh/ZuH1i6/4Qwp37Qrj3
3r7q7n/f592tQ/z77r3X9//5gdjmu8gfxA/Fu40fjn817sgfxY+x3uPkT+An
8VP0P417rucZ+p+l/jn8PPUvkL/I+i9R/zJ+hf5X8Wv49fhn4zfwm3h3/KNx
bPOMw1ttfcZhD/me+HuT72X9veT7Wud98bcm398674+/NvmB1vlA/KXJD7bO
B1n/EOsfYv3D5Ie5/re5fhyO0H+E8zvK+R3l+t6hH4d3yXE4Rn6M+YY2jzgP
7TwFh+P0H+c8cDnO/CfaPJ5gf1xwOMn+J9n/ZDtvoT6cavOIMy6n6D9N/2mu
Hxfqw5n2/ow443KG/rP044zL2fhz03+O/nNtns8xP/XhPP04n2/XK+fjnab/
QpvHC/Gnph+XC/HHpv9i/KHpv9jmGRccLrXXEy+xPy6X6L/cOl6mH5fLnP8V
9r9C/xXOjzystY44r9G/xvmntr5LXA9O1GfyKbFfas+n4rDefn7dOue53u6X
cF5n/3X2x5X6sNG62+B+xIn6vNE+HxMuG+3zUFkvXG3zDsernP9Vnk/qJ+oL
rvSHTebfZH7ytMnztdl+HhMuuOKw1a7XbXE/47TF+eOJ+oIrDtvsv839v83+
OG+35zWxXmG9Sh6u8fxdY3/yRJ6vsT/1hbzSH3b4/Hc4/x3u/x3+vuNph/sf
V9YL17n/ccTpOt/PeLrO9y15xeFG6+4G++NEfcYT9eUG508ebrL/TX7P3Gx/
zyTyjCfqC3klD7dad7fa32fxVvv/SyLPeMIFVxzea93hiBPOeMIFVxzeZ38c
ccIZT7jgisNt9scRJ5zxhAuuOIytd+EO9zjiASc84owXeMJLXPAKVzzj8AHz
4w73OOIBJzzijBd4wktc8ApXPOPwIfPjDvc44gEnPOKMF3jCS1zwClc84/AR
8+MO9zjiASc84owXeMJLXPAKVzzj8DHz4w73OOIBJzzijBd4wktc8ApXPOPw
CfPjDvc44gEnPOKMF3jCS1zwClc84/Ap8+MO9zjiASc84owXeMJLXPAKVzzj
8Bnz4w73OOIBJzzijBd4wktc8ApXPOPwOfPjDvc44gEnPOKMF3jCS1zwClc8
4/AF8+MO9zjiASc84owXeMJLXPAKVzzj8CXz4w73OOIBJzzijBd4wktc8ApX
POPwFfPjDvc44gEnPOKMF3jCS1zwClc84/A18+MO9zjiASc84owXeMJLXPAK
Vzzj8A3z4w73OOIBJzzijBd4wktc8ApXPOPwLfPjDvc44gEnPOKMF3jCS1zw
Clc84/Ad8+MO9zj+738AA6/Znw==
          "]]}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Medium,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 500.}, {0, 0.9999999999999984}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->{780., 245.61684774746024`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.7410022288407583`*^9, {3.7410034978240213`*^9, 3.741003514134605*^9}, 
   3.741004454375814*^9, 3.741361147464074*^9, 3.7413613676083803`*^9, {
   3.741363544216069*^9, 3.741363553788679*^9}, 3.741368060603773*^9, 
   3.7413680952897987`*^9, 3.741368784130022*^9, 3.741369207845788*^9, 
   3.741716854422532*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Evolution in a finite population", "Chapter",
 CellChangeTimes->{{3.738607211182466*^9, 3.738607215690178*^9}, {
  3.739892592542673*^9, 3.739892592692618*^9}}],

Cell[CellGroupData[{

Cell["Transition matrix", "Subsection",
 CellChangeTimes->{{3.7386019367030067`*^9, 3.738601939261675*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BMtrxDI", "[", "pars_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "out", ",", "i1", ",", "j1", ",", "i2", ",", "j2", ",", "k", ",", "b1", 
      ",", "b2", ",", "\[Lambda]1", ",", "\[Lambda]2"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i1", "=", "1"}], ",", 
       RowBox[{"i1", "\[LessEqual]", " ", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"++", "i1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i2", "=", "1"}], ",", 
         RowBox[{"i2", " ", "\[LessEqual]", " ", 
          RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
         RowBox[{"++", "i2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Lambda]1", "=", 
           RowBox[{
            RowBox[{"i1", " ", "r0", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"i1", "+", "i2"}], "\[Gamma]0"]}], ")"}]}], "/.", 
            "pars"}]}], ";", 
          RowBox[{"\[Lambda]2", "=", 
           RowBox[{
            RowBox[{"i2", " ", "r0", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"i1", "+", "i2"}], "\[Gamma]0"]}], ")"}]}], "/.", 
            "pars"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"{", 
              RowBox[{"i1", ",", "i2", ",", "\[Lambda]1", ",", "\[Lambda]2"}],
               "}"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"i1", "+", "i2"}], "<", "\[Gamma]0"}], "/.", "pars"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j1", "=", "i1"}], ",", 
               RowBox[{"j1", "\[LessEqual]", 
                RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
               RowBox[{"++", "j1"}], ",", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j2", "=", "i2"}], ",", 
                 RowBox[{"j2", "\[LessEqual]", 
                  RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
                 RowBox[{"++", "j2"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"b1", "=", 
                   RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"TruncatedDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nMax", "[", "pars", "]"}], "-", "i1", "-", 
                    "i2"}], ",", "0"}], "]"}]}], "}"}], ",", 
                    RowBox[{"PoissonDistribution", "[", "\[Lambda]1", "]"}]}],
                     "]"}], ",", 
                    RowBox[{"j1", "-", "i1"}]}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"b2", "=", 
                   RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"TruncatedDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nMax", "[", "pars", "]"}], "-", "i1", "-", 
                    "i2"}], ",", "0"}], "]"}]}], "}"}], ",", 
                    RowBox[{"PoissonDistribution", "[", "\[Lambda]2", "]"}]}],
                     "]"}], ",", 
                    RowBox[{"j2", "-", "i2"}]}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"out", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"j1", ",", "j2", ",", "pars"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"i1", ",", "i2", ",", "pars"}], "]"}]}], "]"}], 
                    "]"}], "=", 
                   RowBox[{
                    RowBox[{"b1", " ", "b2"}], "/.", "pars"}]}]}]}], 
                "\[IndentingNewLine]", "]"}]}], "]"}], ";"}]}], "]"}], 
          ";"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        SuperscriptBox[
         RowBox[{"nMax", "[", "pars", "]"}], "2"]}], ",", 
       RowBox[{"++", "k"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"out", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "k"}], "]"}], "]"}], "+=", 
         RowBox[{"1", "-", 
          RowBox[{"Total", "[", 
           RowBox[{"out", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "k"}], "]"}], "]"}], "]"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "out"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.738603248884701*^9, 3.738603249149768*^9}, 
   3.73860340685178*^9, {3.7386034684425707`*^9, 3.738603600077634*^9}, {
   3.7386036546548557`*^9, 3.7386036589008636`*^9}, {3.738603689052676*^9, 
   3.7386036908467216`*^9}, {3.738603736383997*^9, 3.7386037383538837`*^9}, {
   3.738605879978243*^9, 3.738605961730234*^9}, {3.738607881556683*^9, 
   3.7386081001077147`*^9}, {3.738608131775378*^9, 3.7386082945195217`*^9}, {
   3.738608344936099*^9, 3.738608350929275*^9}, {3.7386085393972263`*^9, 
   3.738608636667198*^9}, {3.738611069274447*^9, 3.7386111839448023`*^9}, {
   3.7390313573904552`*^9, 3.739031380420195*^9}, {3.739128457686996*^9, 
   3.739128471625355*^9}, {3.739892742057619*^9, 3.7398927440606003`*^9}, {
   3.740335677617056*^9, 3.7403358288177834`*^9}, {3.740335868994053*^9, 
   3.74033587153701*^9}, {3.740336044128132*^9, 3.7403360470841637`*^9}, {
   3.74033614870277*^9, 3.7403361654022427`*^9}, {3.7403362224485617`*^9, 
   3.740336232076232*^9}, {3.740336280608095*^9, 3.740336286246498*^9}, {
   3.740336449889326*^9, 3.740336477400231*^9}, 3.740336726921022*^9, {
   3.7403368044749823`*^9, 3.740336818392873*^9}, {3.740336873092758*^9, 
   3.740336886429195*^9}, {3.740336941133028*^9, 3.740336946580105*^9}, {
   3.740337098932068*^9, 3.740337107499905*^9}, {3.74033714689641*^9, 
   3.740337302902378*^9}, {3.740337335601892*^9, 3.7403374009140263`*^9}, 
   3.740337463401938*^9, 3.740337528268751*^9, {3.740337606469116*^9, 
   3.7403376344187202`*^9}, {3.740337730421254*^9, 3.740337732046987*^9}, {
   3.740337765673956*^9, 3.7403378487349463`*^9}, {3.7403379489092703`*^9, 
   3.7403379643007803`*^9}, 3.740337999611865*^9, {3.740338094103794*^9, 
   3.7403381487915373`*^9}, {3.740497115770775*^9, 3.7404971433404408`*^9}, {
   3.7413636435064173`*^9, 3.7413636436734123`*^9}, {3.741368190674294*^9, 
   3.74136820912013*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DMtrxDI", "[", "pars_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i1", ",", "j1", ",", "i2", ",", "j2"}], "}"}], ",", 
    
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          SuperscriptBox[
           RowBox[{"nMax", "[", "pars", "]"}], "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          SuperscriptBox[
           RowBox[{"nMax", "[", "pars", "]"}], "2"]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i1", "=", "1"}], ",", 
       RowBox[{"i1", " ", "\[LessEqual]", " ", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"++", "i1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i2", "=", "1"}], ",", 
         RowBox[{"i2", " ", "\[LessEqual]", " ", 
          RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
         RowBox[{"++", "i2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j1", "=", "0"}], ",", 
            RowBox[{"j1", "\[LessEqual]", " ", 
             RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
            RowBox[{"++", "j1"}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j2", "=", "0"}], ",", 
              RowBox[{"j2", "\[LessEqual]", " ", 
               RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
              RowBox[{"++", "j2"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"j1", "\[LessEqual]", "i1"}], "&&", 
                 RowBox[{"j2", "\[LessEqual]", "i2"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"out", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"j1", ",", "1"}], "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"j2", ",", "1"}], "]"}], ",", "pars"}], "]"}], 
                    ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"i1", ",", "i2", ",", "pars"}], "]"}]}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"BinomialDistribution", "[", 
                    RowBox[{"i1", ",", "s"}], "]"}], ",", "j1"}], "]"}], 
                   RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"BinomialDistribution", "[", 
                    RowBox[{"i2", ",", 
                    RowBox[{"s", "-", "\[Sigma]"}]}], "]"}], ",", "j2"}], 
                    "]"}]}], "/.", "pars"}]}]}], "\[IndentingNewLine]", 
               "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "//", "Chop"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.738603094991034*^9, 3.738603095202489*^9}, {
   3.738603148013921*^9, 3.738603209573564*^9}, {3.738603422207438*^9, 
   3.738603434646339*^9}, {3.738605136380169*^9, 3.738605138207283*^9}, {
   3.738608674320796*^9, 3.738608702437211*^9}, {3.73860873601292*^9, 
   3.738608849295722*^9}, {3.738608887117259*^9, 3.738608897540615*^9}, {
   3.738611369432076*^9, 3.7386113712117147`*^9}, {3.739031448615966*^9, 
   3.739031451284761*^9}, {3.7391290076819487`*^9, 3.739129023465837*^9}, {
   3.739892599511722*^9, 3.73989260074675*^9}, {3.73989274733768*^9, 
   3.739892748357478*^9}, {3.739892782242737*^9, 3.739892797283333*^9}, {
   3.740336611392618*^9, 3.7403366162462177`*^9}, {3.740338274048341*^9, 
   3.740338350527541*^9}, {3.740338395095387*^9, 3.7403383952541428`*^9}, {
   3.7403384705882597`*^9, 3.740338688987356*^9}, {3.740338726752824*^9, 
   3.740338858041297*^9}, {3.740338949703933*^9, 3.7403389738820667`*^9}, 
   3.740339190082521*^9, {3.741363649808854*^9, 3.7413636499554033`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "TMtrxDI", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TMtrxDI", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"TMtrxDI", "[", "pars", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"DMtrxDI", "[", "pars", "]"}], ".", 
     RowBox[{"BMtrxDI", "[", "pars", "]"}]}], "//", "Chop"}]}]}]}], "Input",
 CellChangeTimes->{{3.73860378236869*^9, 3.7386038392995663`*^9}, {
  3.739020733454639*^9, 3.7390207558978767`*^9}, {3.740339202749695*^9, 
  3.740339218128181*^9}, {3.741363652336686*^9, 3.74136365947472*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"TMtrxDI", "[", "test", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.738606111276239*^9, 3.7386061192269917`*^9}, {
  3.739892650005889*^9, 3.7398926562414227`*^9}, {3.741363662209395*^9, 
  3.741363662370545*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzsvXlUjuvf/60okUgqKakUTSRFiXiTDCWihEZFiUqTSkpKISlTNEhEEhkr
RUgiUVSa53m4xvM8JUKDeq57/Z6/7rX6Pd/vs/e+0/e+9lp7vWxr//E5jvM4
PsNxHe/PIbfHzcRh/Lhx47b9v//+15//zz/d4JJLLrnkkksu/+e4xOiGXNgj
Av2TEmqPZLfiaciFGW7zvEfdLi655JJLLrn8T6bVt9h0rxYCKhfk9drCWzFu
AsPmIXkIL+NXhwnUs3FLl0flklEHWrv3a0lNzxp1e7nkkksuueTyP4GSimq8
NBES2lctl3zY1YpJRuIBtbc9seqG72oPGhtGr/l21gR3ILbl9M+6fS+hxx/j
FnOewOn829pn99GQzccMENcuH/VxcMkll1xyyeVYYvC2Wx0DhiRynN54Ccu1
InG7ydyDqz0gG/1CPLyXjTZqtlzbuw4MpoxzLvJ+DdcAZZdV8QQMvTWftl2j
4byD9apM4QrIZU6f+XOQwGrFMq0GfQbcgoznmFyoG/Xxcckll1xyyeWfyFUX
Xq9vOklCPcCgfV5xCxzm9wrZR7rB2Fo52XcigdeqE+o3zOhEZKvBlQT5tzic
MZCxM4XAqZAAQZUaGsKtXhM8PRU4GrNg6tkpJCzEBKvGhzHwVehVjkN8PZLz
XI8tsSLh5vZSOqmUCfm02SKC81tHfdxccskll1xyOZrUnVxA3CkgoaiWpXpo
YwsUu4rLJeAC1cBJka9nExBK7WSbuneivipqy7nhd7h22O/TvSwCngwFTTVJ
Oqp1nq+J6auE3JubEzulSPj2fxyQKGKgWUaWXJnUAHWLzLMz3EnwKu0reSHF
gtDx1q8WzFbcrDA5EfechFLKya8XF7PRL3zr7eTsjlGfDy655JJLLrn8n2C0
VvmcC4IU5iTufnMyrxnnPrqMM2Pth+mv5jR9TQKirranP5d34nvh1RXgL8DR
npZtcqUE2I5HjxYG0dEwc7Bc8Ww1PBi975yWkBh3ozzdQpuJdRvOXJEwbEKL
0bbqp8dJ7NGpo9nasKA1X4x8Gt2G69+k8oSKSYgqT1ox3Z8N5v1nX7X8O/Ex
WbqcOZVCyHz9qV8OEZgYKpAWxksf9XnikksuueSSy7+TS/x2nMowozBresjh
ZerNWCCZWWKu44CDiRZrthsRyNJVjXJc3YVHlWK6O+0/4WQ+z9KzNAIun4Jf
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
0Eku/PvS0lU/ugZiCYwMlCbo3Wdi/Ztsbt/KOojlaLyxm0jCd2a4/NpTbDiK
hE0cUmqBUvDr9+rWJBIrlITNvnMwwn7sGhTaBcpfQd+Nxg8rtxpfTl3Pw9df
49f7v+vFoQsti38JUDi8Jt+MtYOAp/Cr5ccDabwmeWzVm800z/2yZZexIolv
DPOrt+i+ZXQzPVnuLIULAke/qg7Rz1/Y4rFRPxcnLqV/8qb7vJj7rdR0Dwov
H58O7jTk3+fLTHaprv1KoM4x7cNjeTbeU6HJOiubkaN7ZOIeeq60P413FUvj
oG/W08P2sZ1Y8fmyk2IcjZcKpyr41dC81KksGa97QE4OujGHIBF2bW7JsQEe
hsJ9Q61S+mBmCMEIuk9OZg/3xPII6GSHUk0b2Aj8aNWRa0XB/e7+mqcvaf54
pSU/iObTdn1X3FuDKDRuSX1ptZ/CBNJJdgbxz+eF8hvynoc+CYfpRnZxcRzo
mLnH7trTiQP2394vjCAxbJHaEpzMhdVOpaQL5j1IHZ62sbqLRMrH2R35JTy8
q9tedFKtDxPrvu+2laXgO7dHpPkpAbHgJ+TRPBZaH4ao/TKjMOWsGzUaTeOs
cl1bAQEu+rQ2HPriS2GRNWviPvo8WaRcWLM98b+64P/G/8Z/p8hP//u38/rf
RnmPSaEv5xEQSWfw9jow0NIQvivoV/Ffz+t/G2PPu1Qk5RFwYsspK8xhoXHD
0y2R3+r/el7/2yhbeFeQMZeE8/fyH5KVbHTMlyHVEv79dFL/NCqa5gROdyAh
sNTq3bO5XIhc6ho05fz76aT+aVQ6M1NN+ynNBzVSIi0UeXht25X7JY//7zf0
q8lVKXcpSFU/eedxm0K8o+ZDgfsEtLf/yPvoREFHwtBrgKRx6d2iI0XNNJ6a
balkt4OCbYJUfMp2Gm+nvtotIcfBq+VPXS7IUFBfs+un9hMCmkWLy+TS/v3u
t/xv/G/8n8QIlVrpEGEK0vHmhVeKOhBUfmLMPq4Nei2UO+7f4SFNptELej34
sCl5memruL+e7/80bnDSEoydQeBAqX72K10GnFc0xj1hFUHOoHNkhh0BmWht
QcabPqyIlpJW93n/1/P9n8b95ebbhHIJhMQHsAWns7Dg9lx35/Z6SE1TXPCg
h4Dw3QeJJTUsiJCrZ6VW/Of8bn//i+25PrNJDBbmdRQWstFnqnox1JWevxmq
t3XUSBTfqLJsOsCBf0HKyQvE3/se55/GV8SSbx6naHxrk1daMpOLlg2n17c1
d2GvUcBBtysk3J46W9w9wcXH4frBsvz/HF2nss43CclcEgXtSy1nLeXBWrHD
7fC9XhSIa5x7UUnixcJxld0XeHDz7E6Tdeb/+0P1JuGKyW4UypcdSdebRsF4
AS96kTIPsg29cYs2U4gJOBf9bSWJWQHRTk5MNpRjsmOniFN4I197q8yDwLjj
4zaZybKgF336sFo/CcOoWkOM8LBRzFdmQ8Wff1967LKvtR+NJ4TzVHQfhFJw
3JOoquhDIErxynHNbfS6qhqk6jaQEJL16NKYwMGOF6+G2uk8O5jTF9/+yQPh
R3odremDQPkEhYFUEsfm3s/SmMTD6eUPn6rs7cX5j7FHSjxJlM0J9Kw25WLV
XOVMx8D/nDr5b/y/R376X/1p1155pfFg9VNR43ZoDxym9t+fufMRhloLovNc
CTwqzm1/OJWJG4Y3snd3V//1dfyf0aViY0u5MD2PNpG2KxczEJGRLL097zUE
t8wc6nQkkFQxoTSK0YeGjLmeX9ZVo969NkKgjkDMNr3EI4EsVM5n9KUX/Pvd
v6F8X9rsfBaBrXJUkv04FpxX/vRYEFePcHsiewWTwLtjZ58qdrPgV+dwbI/Q
B9jlWSSclyNhLd+VHD3IxmqX3huv1/373R/FXOfifVWCRF6vcc7kp2zMmbNO
RMekFYRi3ZcNIKG0PM9i4VEOepm6wvbiHVhX6PDxKM0rj8lnRHLncZG55LK0
I/HvxysXN5kEbTpJQuaUU/KvaVycjWJbO1Z1Qe9+d+svXxJE+qIfMue4OLrK
/7l7fTc+jjm9TiWHhOTq857fZHjg9voqdYX8+/n9HT6cftGHzjM7fHfL0gU8
LPDXVvsS1ovAPIXjqVUkvBN6dzq48yBhvrD/yCUGan1D7g9+IuGweM2XCaIE
LHtYmWe/8fdf5udfzM//l59/Lj//2T+9P/z8o/n5L/PzL+bn/8vPP/dPr4uf
/zU//2h+/sv8/Iv/6//7//v/8vPPddtxgqvkT0Bz2w3B4V1MGI9cP7+vpYav
f+vfWpdMAuOw1TgCR4blOy+MZcD7/EPz65GFMJw4J6DCmcDVhQsXtQkw8aVr
fvdIajU2+ucJT20loFrVrX0jnYW3JsodMlr8/XP/1rr05wgNSaYRGJ04qcRw
gAlDAYvvo4b1ONTUtIjNJXA8fZZXzxcW5sRpb841+ef+uX9rXaWXI8w4M0ms
NRdX+JTBhs12ORMrtVa+/ss5W28i6DSJ+LVml7uWcuG+codDoHA3GtuTN/Me
kYj90K2tN8RFa5Hs0W7Zvze/+Plf8/OP5ue/zM+/+G+tK8ZJ1tAwi8SMJyqh
bbN5mGOWX2l+sRerFy9WCXlPIjzlcXeANw+7pqhf6A5j8PWP5ue/zE+/zE//
y08/y09/yk+/+af3jZ/+mp9+mZ/+l59+lp/+9E+vi59+nJ/+mp9+mZ/+l59+
9k+vi5/+nZ9+nJ/+mp9+mZ/+l59+lp/+lJ9+0/feXj2OIc2/bl10mZHDwdab
rh45z//8/Rv6lS15k3/w8EO9vYdo64Xt7I+fpji/Qu/kjaTlJTr/hDCR80uZ
GL4e9IyxtYavflZzab3/3k0khnsefl9pzMFP9e8NJ5rb0R2jM6Peg4RigGja
5v1cjMk++H2l959/L6Q14eTxgRQCczSmWTOYTNxwuTW7Y1U9ukXCZBvp5y7o
6LozU4CNPZWPxs4N+IAnCck7NdeTGKtX8WmLJgftXuWbbgS0o3TC0orp50ic
1n/aZq3ERdjtvceM5PjrT//0up74P0n2nU5iceQH4upDNtZmGty1n9HKV3/N
T788ReY0Z95zEmEpEUdFVHnYMd+mMLv+/6Kf/cPr4qd/56cf56e/5qdf5qf/
/dPrMiw49TokjYR29Sv3e8I8XEk/N+mISS+a1r3Y8pmeg08GJ5vJhdM4QT/V
d9JLBnp2bJwe8IuEh52BY8cGAqJPFAIv2fHXX2dc2NV88gCFK7HjVoqFk9Ad
w1G++a972rpEV4yh1yvRvM45v5aA2dSbpNQ3FpI0Xx6oqSZxziXvuLYfD40+
St/WxjGgeVBl+olbJD4sS5mmV8QFVzZx3IbYHpS+Ws3eGExi69k7saevc6FQ
cdAieG4P7pNxYodo/i4db5m+2Y2HhMOCGroX/zxf5pe/2Uuu+xRzEtyAK0JH
WzmwMfJy/LmlC/tSF2bOkSCxorvWcXkuGzs2T5DiGrSiqH9s+IQvNI9Qzj0p
vYANz3yLpAzBZggFbc9R3EliSF5cW/USB7Nmms0YSf3zfJnf/vPLP6r39qrF
SQTmx/SPyWhh4qGj5uHuX3UwXlbI5ejQ9XHCMDBCvQ+DAtGrRIwqMFzrtXTP
GwJTFqa09e5jYaOmYrY948/rf/nVD7/955e/odSYUX16vm9YYLqnkNcBntw4
V3viOMYdWKPhMMDD9RebVINSe2EIZkHErAIM8wrHuyYTeOTSeOlyFxP1+nK5
pbPqsYn0OtgnRuLyifN3jsaxIRt+95XhcAumVcV0B1uT2O3z0CLoBwfSe5v1
ksO7cPH2gXEFNN57oyNnNzyGh+hNUzTvqvXyrf9oBaFTXXQfPlC6fkDYk4P7
ZY0/axI7+O4/v/yl782fnXeNQJyp9LfYfUw8+rD+pOvnGqTlXD07QvP3BLdv
w00z2PCmzsx1rfsAm7MC6ybqkDimkbw4L5iDI4I560y/d4Dj63O/MoTEpdOP
045E0vzl+qbxI8t70H57Z82VBhJukmKFYjE8bC1ztT7z7vedX6GIFO859P5P
mfnWo72DiTUCV1g60+r55p+8/fJMJkj4/5xa+fgYB8JeVVEP5negu2nL9Gve
JFR6Tt4SO87FunVv91/J7IbZlBcBreX0XDiv+6bYiYfE/aIid48xkFa6jdwr
RKHx8RiPKQcIPBSVNHhf+Pvu39CNPNnuTdcPc6Jt7IvbbHjtFBj8MNiC7zNL
+nO0SbztrKm8GsTBwLNVCxQ/d0B/nYdpK51/7Y6dQ5ttuXBov2YRndONQTPj
U3mlJNRTmn9yrOj55aRiWLGDAZnqUWepsRRmnnBZXwECFrMP1XJdmBibH1PM
VaYQbinc+/oXgeFNQ/lqp36ffoRf/fOrn3K773XyFSRiWhfJfD7NQ9dotcQT
G/75v06Y5W+zmoIW+U1Mc4jAc/Mh8/B9bFztMis8d4yeXzoJx0ee0XP74YSQ
jft+n//CNEg/P0mfX3mWttjbX1xYRGipBWzs5Vv//OqHn36ZX/6fG7OJ8KsU
vFVjn2WBgkvvRG37VB4WWrZUq3eSkF3MnvT+JQ9P5VaZjVfow8fPgrY9N2ie
0nDRvOYBFweaqjIW7O1B5+T+lXHu9Lz70t9M7uLiyfPnHr6nuunnsssqoYjE
5I3BHZ77efhwSi03R5qB3h+sIo1JFL4PCYVEHyJw67SDi2jFn78HrMlkuLDj
NIk6uYfPpy3n4ubXja8SRLvhucHrmdI0er1OPOZQFBvq78hvMq00zw1q1evq
JuAm+sDH8h0LK5532BwtaIL37rXjrTaSIGyOivft5sC0Uk3DN6sdlY+Nr569
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
HuxclyWhyUNIgvfonaFe8NgZp/THUZha1JI3S5OAyucTqhdDmAjr6Hn8SY2C
Z52WXOoimo/mz5DrrGbjSSF6xzpReDgj/4wFPbczdplu8a7m4tDmgn3PaLz6
KCU0feEeDlAVVTLmWTuO6f+805NBQFdE+smVESZEXKImDXrXw/JQprfFeBLJ
VPsDvWNsDFpNthyY2oIwCRlzPVMS44ixNqffcnA7tWzD/uldaO6ZON/wHo0T
svxErdq5KHN2bZ7T3QNfVUm5fIJEwpRqt+KPPNxtd84MyeyDfvi6K0XyFJap
CuV+6iIwb9WSK3Ok2chplHBZTPMU//7HU6ue0uc48av3oj1cDFtEbTMJoOdd
SPMAT4/Cp16NCrs6HmqHyk7HXSWxZvhMrYczFyoa6QqJLd0weHl52ogoifET
tQ0Tw9g45BDst+VNCzbGXbcPoPtavKIGzy2XPkcCxN5NbzvxuMZq3/IYEsW7
z2oFFnDBUL6b3BHSg+L5k3m9DBI/1xzLWdjAwzlxDyHPY32YOTD39VsZCsu5
2cYuuTROGTWu35DJwjZWIFOVrqvHa8tzS+hz6T69jTWhnQMHP3PugBeFlKqt
x82XU5g/dfnVz+f+uX5WNPEas8GCxNwHAyszORyMlV0TrWLdBTgtE22JJrGM
iOk/+IKL5MCOuLeBPegdHc6saKXnpVXB15JMHupk6kzmTelD5I15l+IlKWzr
u7M4OYqA/fpXgbMsWFi4S0L0wR4KcsuN9vfSPInp+3is7i0O1izZoNt+kULV
Kcnmr3MofM769KNnFw9FdVBzuUNB4l6RyZoImjev/njAPvifz9/XoWc7HyWS
cJ0S1h00yIVlu9pN/5m9uK7SdfdID403mKMpiRU8vLsbMq9Jtw975TseZdD4
zZG5e7pUOIHuRW6HmoxZcN2Zbh+6iz4vvuveuFqSEK354bTxDAfxZgZfZrtS
ODatMv7lFArcH9dcmMt4KLx9XVszlkJO3HsGO5DCSMnNaW0X/nn+dkWyX0ZM
6H1e3+C/rYyDXbvtmzdP64JPWvfqBRkkglu8joeI8ZDyqulxuU0vtn+49kV2
IgVb6XFfX+0h8GCear1qChNWPycWp+tSeB21M8mc5geuSqqKz49wECJiJKjk
TeE+UqrnraL3O189S/Pyn9df1186dFiZ7g9zK9v3+tL4TPTW81fLL9Rj8p3v
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
L/PzL+bn/8vPP5ef/+zhsiqrmBMkgk8a59wW5cJbl+O4pfT38WV+/tH8/Jf5
+Rfz8//l558bvz9zvQc973pP16/tCWPhGyOmYtuH3/d9HD//a37+0fz8l/n5
F/Pz/w3V3X46pIqHNYlvSoRn9UIx68nIxtxsvv6z/Pxb+fmf8vPv5ud/zc8/
mp//Mj//Yn7+v/z8cxN4gTa+m0ksf+VtNdWGg58bKlsnreiAs2rMz8orJFye
5k2tPcmFykpr++6CPz+/+Pkvx6+e1Pb8B0GfW1Nhd7AxXBy7b61rM+Zybzyy
3EbCqrN4ZY8TB1NjG4j9lvz9c626V20+T+PYGYbnjFZY8CAQOt/z3MY/z7/4
+Ufz81/m51/Mz//3KivSm0fXeStD6IXHOgLTyIXn9h/78/OLn//1uu7iEb3b
JLzkPGbZ0rxoHLf4wdO0Hr7+y+/N6mYeFaQg/PSz7cX9BNa5sueH5PHXz/7p
df0MPaIX/ZaEpAmvbeIpHjav4gXrmDD4+l/z84/m57/Mz7/4T6+Ln/+4YtwC
i3Y5CoqqQ/3db/7lkznmtE4LC/EtjQ/sdSjMtxm/Nd6YxKQlAwI2+zi4y4t5
oneSwreMOsVbH+j9EPa+oxnP33+Zn36Zn/6Xn36Wn/6Un36z7tWTJSr3Sbi9
/+l3mcHFQNb11Fufft/3IPz01/z0y/z0v/z0s7ypGIovJ3DhTMCuIhsWbGX8
jiYpNPLVb/6udfHTj/PTX/PTL/PT/+p8ua25WpzGZ2vCXJdvZWDpBncj+xtF
OPB1ZMrZRAKytVrN2nVMlCiXnCjtqcOro+vNBMRI1H99zfS6xYZpTOHmGZwW
/vpHPvpB16Vi8w1pvHiqIcfbwIiHuDKXlLi5DMwa/Pp85kYSu8f75+Xoc8Dx
yFM4+LgdS8d/1x1TQMBq2qFnl1azYJxdIGS0rwFmQVL7DikSWKH2YZbsGwaM
0x70uMeX8tX/8tPPWuquLenYRYJlfvLq5tscaK2U1Pq8vZOvfnOWVHB5In3e
Lu7dPsJ7wMPAeP8sTZK/fp+f/p2ffpyf/pqffpmf/vef6mf56Td/Vz3LVO0x
jl9CwkBD6PvpX2wUurrlbjzVhnPRA09z6b4W+Ph12LkiDthnvNYUj+vCoGDy
qt1hJMZrfj/THcfFqU3jt2Vs68HYoNtzs+j8c68L1lqF8CBqdVMgJ5O/fpaf
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
PP/HnKg3O6fSONB0vu2yEQ+ZB5Y4PLxI86WKBc8GaL3SbDoS9fw8f54flaZ6
fqcGCearOqEDihz0DIw/NvbzB3SUO/p8pfVj0fYnp6OXc7FhcbF4h243dLus
GNJlJBzvRRckW/EgXRLquWFSH+Z/aKqSHkehsctsogXNH9smt0wILWbCkdfN
nWFMQX/16nVh9H0e88zeUIj+PWVfrr3evp/Ch+FWp6EftO4/kt58bZiLh2d7
t0w5T2Gq2Qe/DHqP5igYvljv8fs6xU0rd8bMUBKBhv4TfY24GIya8uutbTcO
5j5M639MonhE1qCEPq/672uH937sRWCvzY0fv0h8mtt9ZUCHQM7ODr1p25hI
7zJQU6Sfi9m63UNj5Ej0jGQ/VixmY2mzlJuGH4WgOEGzkk6SPv8NXS+LuFjz
Ysqr6tMUuo3avLm7KOwtFKAuz/vndGLlI50ThfT5P1ZYVv7JmodC+VuB+2X7
YDgxateBYRKLk8+X71elf9/Pkrt+hkz86BMxfqRLAW43JHaNJ7G/1GnWcAwb
Bt57pq3YSSH3e8rFxRUkXtvLTV4aQp/TeNJo5BSFwHgtg9XuFDY7yp1gjv/n
+udXVwxqbz8iTKEkeo2emyWBwQUON6RymDDZbrjnLY2jATpfRjpESByickYe
htN72JQbc47en4HqJUTDSxLjtOf9ktjHRc8mfeu3NP+sT1tZ9dmBQivn0Rrr
L//3/SH/t/5/Kz//79/u639bd2U5rLExI1CitzDFazUD+fWyels83vz1vv63
9dgLwSUnmAR830Q8bOxhQUVRcsm7if89Pl9+dWhl+rOhDbT+/OW32zKZg/FX
i25MmPDf4/PlVzHrlv+3VBIuigVG+ne5kM5dOMsg9L/H58uvvq6clv2CSfOK
vsExqz/wcDCa+24k6L/H58uvfp/7NW+RMs3jv4uYSb0mcDg+6qhL+5/Pk/rT
1cLubNARZwqnzAoeHcj+z9+NA55dm8H/8wBV3O0qBuYUNCcs8jVzJ3H48H0v
ZX8Otjon1rz7SML1QbuxmhABiWNrGrJaGfjUOO1F+EUS71+W3ymp5WInhOfZ
vuiBqnez3Sv6+y2dVeMMSA52+YQ9Ct3ThcoxcTuK1Ui0bI8fyJblYLLXl5sR
Lz7ATXDbDOoHAZaefufnlWxkuy+eabWr5a+f35+qaVa740wvUVCudW2WSGuH
k6j/9W+BrqjVL9toFs3DlsAjDs97uhF+/6Wzl3nYX+/3f1oFY8KvLzCm9XuB
yso9ygwQN2JLliZWQi4nM93tBIEbGx8tZNG6osln28G5Uv+cj+xP1/HrBKHc
SyBD4H7MQB2Lfg5kdi+rb0KjyLbqVGESl2KH0tO82ZhdwgqrUPrzuZ//VE0M
/9L11ITEnbYZldxYDq6rdrc7dXfARVLVZ8CFxJxnjgFxPRwEqfgXp9v8vZzi
3606JdwpIjT+vme4rcm/w0V1uXrvL/8eSFkGJVrkk1DwGHrJEOFh3JKBSRIb
/55P6ndruUxdWCSDRNC3bcERTTwcq7Ndf82Hgagn/U89vpEwMuj9NVGOwI/R
8+mOcv8+ny+/OiKdWaenRMFv4Ry9o+UEyq2VHBXrWXgpXEINaVMYOdxav/gn
AXarYNqIx9/zSf1u1RRquJToREE74tctLo2T/dSLiz5SXBwrVq/h0Pp97eIb
xsKvaZ44U110ThAXJa03vz0Op2CWt+bz5DkUfoTc0nN15cFTJ+rhfnEKMVuu
TGV6EjieYfn1UhcT5yYHjTeicd3u6/zdn7u4SN6n996B24NE4ZfD9vYkdPri
i9pecBArP1FwVKwLp1d1Po2QJfGTPXG/dgEbV48NhhzRbYNuukDo0U4Cria+
JyeVsyD4+uqOpylNUDmp82BJMYHaDVYFk8RZOGhfKz77cf1vn4OV2ZcGnX0U
BN9Vcm5+IpFZ/SN+KpMLt5pHJpU8Er4Lnjnq9vOQJXjFwyqPAR/rxxJrDpGY
0qz+aKMVF8vC318r2tcN32+viyfLk5if9X2MSQ0b1W+j9a+UtGGs3Lu2ZfcJ
TBvx2H9+Jgtv3/4smzOmAeoDZRcaVAnMbhu8SN7swzTXw7UKfS/5+n9dHRKa
D5/lYa/9uskZC3rgohuksfxxKmw8u4+7BxDw6ZdXbWYyUKSskPR2dfVfn6//
sy5njgzdWEPATKilpVqKgdMzJsV++FIB6ULpTXlJBLof2v8a2svE9/cPnvb6
1CLxAePbJ1pXJlRZPUnuY6GU1XQkW/bfpyttGraJBHcRiPBY77DmNQt9gRoV
yGlCnG6txn5RErnieY8Vg9h4LSYQP2lzK6os1j0aWkui+tDqDx8OcCBm6v0m
4Oifz/383eqlqc5tWkdC6fV7hcKjHFQt0x6qfdiBybmNYTs8SJS/yAi63M/B
jSC3tOv7u4D0jopHp0jcHmvD/JjGhfiA+QL9xf8+XfmKuDZv3xkSr0hi95Mb
XOh9bjZLcOvBwrFTx48tJPG99NWim9N4+Ni2J8c0tBcO13JcTVpIiEYcrTbN
40FxtFh+7+C/7/0bUT2Tthj2kTBp5xHltTzUPOkvtXVmYONiiXTb77S+cn0/
K0OBwNtJvQPpSky8zyph6sygMFqsQ569QCA4wafmsP+/T1c2jAlbmz6Xwnfl
b8eUymieHq295lsVC8MioyoHl1A46yx45RbNc2WiMgdzwtgwyxEWbLahsO64
XpX6QRKOdgctOm//+fyj3621Rywmf3Sk/vP5iJ9xF0g85jbGrhHnYkaY15JQ
bwofjwmKfqoiERe+RD8uigsDd9Uo5yMUvugMXw2g+cgHe+NNcV48yGqLtl01
oGB/bIb3vqUkLj/orZwxykbXncefFZ/R+B0YvkrYnIe0T6v0xUX6IPRtgtap
rSRusr+IrXzHgdFh7uiLWV2wSzksMyBBYsby4tX3Y9k4tvyzmsLlViScrTC9
VkUgQGETIbifhfVzqmaWuTXC4mDNzemXCGQKV1xUKGRi/1cl61UedRC2vL2t
iSBwJdpDyW6EBWnv+q8/Q35/b3/Ku9DcvYDCxIqTZ5taCEzQ11meLs7Ggtbz
LO0U+r4evRElmMtFysPs2uWbe8B8+si4RYlErIb1ZaNBNr4/XcKw0v+Ao8vm
tlkXEDj8Cc3FX2h8Ud+sOc+7Hjs+jW7umkAgd+i5r6lGHz6GWyl/GS3DlUvO
oWlTKMiU+h48c7MDerLqcRmOO6Covzmr4BoPjUmWljFhPfi4cWLg41s5sD/5
+lhHBAHeuLfWXHUmsp46ehpuq4HonvWbJvcT2Ge01UNelI0iLe873peakXi3
UTbFnYKNzHLzLnrfFOpdMC814OLWyPTXWb0k1j3xWupZzUOUbEHWQnsGZJ9c
am0NJiEyJXZO/mouOGy34CCTbryPkzoyhb5ee6vhzoF+NrYLXK5aqfUB0yxC
R/xe/+e9Is9clJ1Z+LA21KJJtBGMRi/WUj0CswxGjQeH+nDHOV5WcUUFMp/W
OeakEtiRLaalepIJtm7iir7aWr797xOd+xX6JFzrtxYFOHNQWro3R2/0771/
w8Fy3NpX7QTC9k0fPFDKwow7nF5WUBMMqiqyS8VJJM0X8N13jD6f3eETtp9s
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
/u83HOYdCyOgnpe+JmYqE9dW2W21EKjBk1gP94cdBPZeUYnOfsqCeWbBe/Pj
TXibOZw+nsbftVK+462tObg+XaFN9Wk7PM7GqVkeJ5GafP6AZRAXvzLIuclN
v687+OVH88tf5pdfzC//N361q5ijHAH5zarhRt59CGh9sZH7vhy2VybPNqTn
khOwsGThCBM3Xi1t8Y2rh+vO3YnnJ9J85qLeJqEkNp7M+Xj/xZNWXFxvnnnM
jf75a6bWR7A5eBvin6DoQff56c68H7k0j/T3Xfn4ExcZRwWyM6f1ghf+PTOv
hER6zM0bY9R5CDeJkn5zh/66yg3RMG1aH/WNOc5T5yA4ed0mQqUdRxoWPzZ+
QqDxu8xG2aUs3G7T+rDWpwGR+5+eP25DwEI1r2C9BwP1U5dfSD70Fko+b9ji
hQQOmQ2+OCfIwiWvfXbc1HrYFL0a+3wsifU2vNxBTzZOFeXp+E75/fzZ0RR5
zm1aF7w2bRJpfsuDyHrr+YQFg29+N7/8a3750fzyl/nlFwsFOeZkOJDItGx7
llXJQYtN3FrfKV18++eXP8svv5Vf/ni1eECeRhcJ+4cWcxyf8xCaUJRquJSB
8OZd5Z7x9Nz6LFz3PIqL+SPT+p+NduPt2nsyIWtIbFJ8sj3bhwMJgQV6N/Q7
+OYvrzNY65l9mYTINPcdKR1cCMzS79Po4+9f5uef5Zc/+0/tPX751yPGKVld
T0isuSE5YZ0Jj56XdaLFQ734kmbrI06SgH9e4+Agrd+Prnx0pZh/fjG//F/J
0pN63qG0Xg688pOaQGFulvmxYbV/Dr+elO5d4/uBnjcN/+tKxTys3WXnZyzN
4Jt/zS8/+o7xm0Xx9hTWp12W+kLz2bv3L3ya0cU/v/ifyv/lV3nGZd9z5Ckc
WJ5Re/E6gXyei7NXMgtC+rO/GNI4JLds7qH2ebSecG1S/1zHP/9aSHXO5YsR
FCR37pykuYACc4dXWOfefy5/+XdrETaUqtE6fYyS9wtrmnef9twiasTk8M0f
55ff/U/1w8+/zM//y88/y89/6qE2dQlbn4Sypvd+ypWDex9mDs2X6EB8UltS
Lj1nB+4v2ng0jot7SYHcmRI94Cnc/cJpIWEpvPFcHs0ztrbIemcM/b7u4Oe/
5udfpo6MPaD8ksSLkZen/DZ2ok1ys6Gssy9f/yw//yk//yb78aV3ZYEkPqY1
NyzR4mJZ8BOPFYrdfP2D/Px3xoabl9yidVzUrdurrt3gIP1e0GsqsRO/HCUZ
DypoPvDgScBbDxaG1Q1qpWc18vUvE5dS6jLKCDzKXlVQYMRCo+Viu5LsBsRo
7enKnUkivrilJvA9G8ePrCgKut0GYswGoZodJHK+z27eIMDFFM6RjNFLXahf
WDWcT/OWD1tZw1E0L5/9/eKjbuNenNs9873AIImA7O6+IJrvOFrsiNP9yMDT
OwHtURoUZtVs/rSwn8CWSWcmTzVk8/W/8/OP8/Nf8/Mv/65/tuB2fk06RaIl
cdzFriEevtWriE56wcCA3LdZ2qoUDoa8GxBpI5A3PLr29kQ2ZEPq2qRd6esy
kT68/RqNt1fTvk1W5fL17/Pzv/Pzj3+brlbHC6DPITHzWcg8Lsb6TxW0Eu7G
lwnBMybfISE8xfmxgiwP9WszoscH8Pf/Xr8qe+oUvQeXpZzVy20mkLgoZmG0
KH//6TxNM6W9x+j9uUZmWasOBd9ci470BB7f9w/w8+/z87/z848r/9yoWf6V
7sNqokHBNPo+N1L+OrJMvv7liquTRea4UDg3usO/KYeE6ohIU/3sP++f5eff
5/f8CvnZ1JRoUYhm1PsEfSPQMuuR9zU7/v7rUvvH722iKWT16lh/pXWnS+gn
BbmsP69/+b1/oGuM+He2IQWFwDs1Wnokltj4f90tzuHrf/9d//ifrvzen8Dv
/QP8/Pt/us+P+96rnS0nEPxxcvYmcxZsjy5wuvGyAQ3ikZpC1gQeOHVuznBk
YJKalKq86Vvsr64ul6T5HJkRvyv4JQsjK0KS9TOb0HPC67ucCYl1UWnZocdp
Pnr73rzi+g4wu1y1Us+R4Mk7F2aUcJHtsW/a7iM9uNJ/MobNIdGzyujzdDa9
T3I07GrPMKA17t6BL4so7GZIa4Deu5Wqx5tv6vz+5+749e9+UU3540QKMscq
5teUduBucvQJyyc70HNa4MIF+t/7Zld5m7gw8Lhm44Y5zm/xfH2IVgCXxruF
5252DLKgfENuV6VVM77v9VxiZkYi6ZHdaPRpDsaPFB1ym9yJwlWHjpSfIeF4
/7V0/00uFtfPnHZlew90P8lNH2omMRD62F8ulwf3j/NEnD72IVLYb2ygHIUQ
9YAttpcJDMl2jKkPo3G+YtxKB3p+ji5yTs87RuPM3MCcaFrP8T1/Pv3Ln9o4
X6OJwKra05lZmSzsWvPR8KBIEyYxB9/2LSXR7XiFe9KYg7zt1RqMY+046KJ6
fUsEiYLje7OfunARZK9/tze9Gxlt6F1RSULpRcyN7Xt4qJwuSQU698HhtUTb
PQma//c9On7Zh4BpTsqKrwQTRsWiwydMKCRoxihHWdHzr/fiMceAgzntPWrf
giiYj6jNZgpQmGh6fqKMOA/71FVvv1lP4obiM1OzaA4yPbSl4t518D1/fv2n
vROb7nSQhO+vnAo1Uy46KsrfL3DrhsB7g+XuZbTe4zmveL6Jhx5vWcpFug8/
v0adTKR1+sImuYX1ZgTiTYojatOZWCnZVrkYdP/p9+N8VElsZCy30Glno+bQ
sQlS/hTeVc3zqmeSYG/4NdvoFRfNA+eXaZ6m+baGyr04HwoiGSHNwbMJvvPP
b34mCpLu4+jzl1VKMz3lzIV+Yej1d+f49z9L4IJWFX2O3F6FjvP6BI59Wv+y
IYiJXYxpny4so3BbSEU1RoqEXqqSZ3A6G+LarOdydH9BE189tKwm4ZXIsy6O
58K12av+QhKFe/F9Xy7Q+ubzsktZklL8dQq/55ff/GscFErnVpCIcSnYpOvH
Q9Lejb0u2/if/+ixtmvmdP+yF8yr7SVJjP3kutXjHBvqsfnOsTspZC8O+OFO
z+OQO0PeLIyLauqryqNEet9ermiNoPmF163xbkkjv78/+e0ffs8vseN9shc9
/3sP96nv8yYgLVCn0c1h4m1BxtE+Wj9+XtqlpbeAhAyC1iq08j9/t4T73b50
/+/0P4ZbO1LQEFu/JWz4z+9/fvunyfZN4Sr6+R18c+vNZkuaH50RKqoHh+/8
Dx5QPWFOz89MFfF0P5pfPEzqODs84c/rXH514QKjiGv0/pyVtOxrcxSJ3Iql
t9OrOEjUm71v3QEKHDeREFkhCsYfHacvmMiDsVXL4XD6+c1MFpR66EtB33BV
78m5f6//olrumz4dAsusD92Ma+iDyOUlT8vkXqOXU+m6lE3rSnNegAKXhSnM
4j17FjajUETc85s1CcGcpe4Rtzl4Qa1bNedaJ9ZqBfioXSchuuQgc/wwvX9s
vsnqqvdC0flEg9gvEoe8rU+7axJ4SalKt2xiYqh307YQIwpva1YnKxiQmDBt
wqLmGRy88Z156ngwhfFrj3XXitD3f9u1tWEzfn8+o8l0hYAe+udfarmfNq0d
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

   "], {{0, 0}, {81, 81}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{80.5, 
       FormBox["1", TraditionalForm]}, {61.5, 
       FormBox["20", TraditionalForm]}, {41.5, 
       FormBox["40", TraditionalForm]}, {21.5, 
       FormBox["60", TraditionalForm]}, {0.5, 
       FormBox["81", TraditionalForm]}}, {{80.5, 
       FormBox["1", TraditionalForm]}, {61.5, 
       FormBox["20", TraditionalForm]}, {41.5, 
       FormBox["40", TraditionalForm]}, {21.5, 
       FormBox["60", TraditionalForm]}, {0.5, 
       FormBox["81", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {59.5, 
       FormBox["60", TraditionalForm]}, {80.5, 
       FormBox["81", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {59.5, 
       FormBox["60", TraditionalForm]}, {80.5, 
       FormBox["81", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.7386061144423933`*^9, 3.738606136801836*^9}, 
   3.738606727786079*^9, 3.738606777134985*^9, 3.738609050496496*^9, 
   3.738609404150876*^9, 3.738609592089438*^9, 3.738610197239481*^9, 
   3.7386104989397707`*^9, 3.7386112481853437`*^9, 3.738611379185663*^9, 
   3.73902057579812*^9, {3.7390207472218313`*^9, 3.739020765173805*^9}, 
   3.7390252319801283`*^9, 3.7390306033310432`*^9, 3.739030901841107*^9, {
   3.73903095047381*^9, 3.739030953183681*^9}, 3.739031218447137*^9, 
   3.739098801524736*^9, 3.739099020905966*^9, 3.739099286507547*^9, {
   3.739100148193671*^9, 3.739100150416697*^9}, 3.7391290665592737`*^9, 
   3.739129258294364*^9, 3.739129555970749*^9, {3.739129744349897*^9, 
   3.739129749361842*^9}, {3.739129869084593*^9, 3.739129875331263*^9}, {
   3.7391987791042643`*^9, 3.739198779435565*^9}, 3.739198855178667*^9, 
   3.739198961615756*^9, 3.7398926681239758`*^9, 3.7398927136111193`*^9, 
   3.739892772054744*^9, {3.739892819911413*^9, 3.739892855328863*^9}, 
   3.739892906937237*^9, {3.739892996670786*^9, 3.739893012832604*^9}, {
   3.7398931004491367`*^9, 3.739893191217628*^9}, {3.740339206488406*^9, 
   3.7403392249157124`*^9}, 3.74034001375774*^9, 3.7404971916499767`*^9, 
   3.741363673514193*^9, 3.7413680626085997`*^9, 3.741368100836814*^9, 
   3.741368226047565*^9, 3.741368787037537*^9, 3.741369210301298*^9, 
   3.741716858679538*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stochastic dynamics", "Subsection",
 CellChangeTimes->{{3.739020597201537*^9, 3.7390206003912067`*^9}, {
  3.740339298331648*^9, 3.740339300609028*^9}, {3.740340967314986*^9, 
  3.740340967960235*^9}}],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",
 CellChangeTimes->{{3.739100323505899*^9, 3.739100325239664*^9}}],

Cell["The state of the stochastic process", "Text",
 CellChangeTimes->{{3.741003661494039*^9, 3.7410036760542097`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stateDI", "[", 
   RowBox[{"pars_", ",", "t_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"stateDI", "[", 
    RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "=", 
   RowBox[{"v2m", "[", 
    RowBox[{"pars", ",", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"TMtrxDI", "[", "pars", "]"}], ",", "t"}], "]"}], ".", 
      RowBox[{"vec0", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.739020606576603*^9, 3.7390206265730553`*^9}, 
   3.739020692334969*^9, {3.739020782642788*^9, 3.739020882248209*^9}, {
   3.739021125600603*^9, 3.739021129587159*^9}, 3.740340062213086*^9, {
   3.741003532580999*^9, 3.741003535656907*^9}, {3.741003578357347*^9, 
   3.741003578557255*^9}, {3.7413676152558613`*^9, 3.741367620998287*^9}}],

Cell["Distribution of the total population size at time t", "Text",
 CellChangeTimes->{{3.741003653079632*^9, 3.741003678850259*^9}, {
  3.741003744399356*^9, 3.741003749470797*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotDynDistDI", "[", 
   RowBox[{"pars_", ",", "t_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "x"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"x", "=", "2"}], ",", 
       RowBox[{"x", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"x", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"stateDI", "[", 
             RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"x", "-", "i"}]}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"x", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "out"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.73902109276735*^9, 3.739021137087207*^9}, {
  3.7390211700289907`*^9, 3.739021237091991*^9}, {3.739021270663652*^9, 
  3.7390212875178947`*^9}, {3.7403400384521637`*^9, 3.740340047240601*^9}, {
  3.7403401219890614`*^9, 3.740340155891305*^9}, {3.7403402013516493`*^9, 
  3.7403402284180317`*^9}, {3.741003624719468*^9, 3.741003624923723*^9}, {
  3.741003698184313*^9, 3.741003699599831*^9}, {3.74136763740277*^9, 
  3.741367640531046*^9}}],

Cell["the mean of the distribution of n Total at time t", "Text",
 CellChangeTimes->{{3.741003653079632*^9, 3.741003678850259*^9}, {
  3.741003744399356*^9, 3.741003765926774*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotDynMeanDI", "[", 
   RowBox[{"pars_", ",", "t_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"out", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"out", "+=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "+", "j"}], ")"}], 
            RowBox[{
             RowBox[{"stateDI", "[", 
              RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7390265926990213`*^9, 3.7390266667323923`*^9}, {
  3.739026700258998*^9, 3.739026747288316*^9}, {3.739098812830328*^9, 
  3.739098823150846*^9}, {3.74034003158534*^9, 3.7403400329837027`*^9}, {
  3.7403402513029337`*^9, 3.740340252950741*^9}, {3.741003717933251*^9, 
  3.741003718101544*^9}, {3.741003768664587*^9, 3.7410037777082*^9}, {
  3.7410042058886633`*^9, 3.741004206040056*^9}, {3.7413676324686623`*^9, 
  3.7413676342190037`*^9}, {3.741367666472176*^9, 3.741367668024144*^9}}],

Cell[TextData[{
 "The allele frequency distribution bined into multiples of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "bin"], TraditionalForm]]],
 " bins"
}], "Text",
 CellChangeTimes->{{3.7410038196824503`*^9, 3.741003843368396*^9}, {
  3.74100411932761*^9, 3.741004126733697*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFDynDistDI", "[", 
   RowBox[{"pars_", ",", "t_", ",", "n0_", ",", "bin_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"bin", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"out", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{
                 FractionBox["i", 
                  RowBox[{"i", "+", "j"}]], ",", 
                 FractionBox["1", "bin"]}], "]"}], "*", 
               RowBox[{"(", "bin", ")"}]}], "+", "1"}], "]"}], "]"}], "+=", 
           RowBox[{
            RowBox[{"stateDI", "[", 
             RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";"}]}], "  ", 
        "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "out"}]}], " ", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ/c35Kee8268dn8W9BtORMVflQfSZjfEKIPr0575s
EJ0Wz5gLorfNZysE0R3PTYpBdCjrsXIQPetMWDOIrrpwqQNEfzi6owdEz/w/
bSaIzjm9bBaIlnqpvBRER23/vhxE8yYpfJ0PpKN/uYJp+6Ob/4PoFUw6rAuA
9J8CWV4QbRfRJAyig8KOSoDoE6b3wHThZz9lEP0mtloDRBtI/tQD0Vo7TG1A
dNl9LlcQ3XHigxuIZnp0JRFEl/CIJ4HN4W7jULoHsueRIIg+0XqIKe3+a8eX
K06C6ba5xzhAtGblRB4Q/eJnsBCIdnhuKgqiU/ymqYHojpNN6iD6r72CDoiW
OPraAETzlZ1cJ/7gtWNGO896EA0AkMTPww==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFDynMeanDI", "[", 
   RowBox[{"pars_", ",", "t_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"out", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"out", " ", "+=", 
            RowBox[{
             RowBox[{"(", 
              FractionBox["i", 
               RowBox[{"i", "+", "j"}]], ")"}], 
             RowBox[{
              RowBox[{"stateDI", "[", 
               RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739026174387374*^9, 3.739026200053347*^9}, {
  3.739026260417988*^9, 3.7390264206298018`*^9}, {3.739026459127705*^9, 
  3.739026460050232*^9}, {3.7390988525418043`*^9, 3.739098854599061*^9}, {
  3.7403403803705378`*^9, 3.740340410841455*^9}, {3.741004192121726*^9, 
  3.7410042154405107`*^9}, {3.741367674432231*^9, 3.741367676800124*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Dynamics Plots", "Subsubsection",
 CellChangeTimes->{{3.739100329278948*^9, 3.73910032999163*^9}, {
  3.7410042331450872`*^9, 3.741004235515458*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotDynDistPlotDI", "[", 
    RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"0.5", "-", 
         RowBox[{"Reverse", "[", 
          RowBox[{"nTotDynDistDI", "[", 
           RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmaxN", ",", "\[CapitalDelta]tN"}], 
         "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.73902123815725*^9, 3.739021362754805*^9}, {
   3.739026882462661*^9, 3.7390268846244698`*^9}, {3.739027204071711*^9, 
   3.7390272091091747`*^9}, {3.73902756257193*^9, 3.739027578172523*^9}, {
   3.739027611624473*^9, 3.739027626330061*^9}, 3.739098840293116*^9, {
   3.7390993907805634`*^9, 3.7390994035672283`*^9}, 3.739100306901404*^9, 
   3.739129329250803*^9, {3.741004346751954*^9, 3.741004367998273*^9}, {
   3.741367683327943*^9, 3.741367695243732*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotDynMeanPlotDI", "[", 
    RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["t", "\[CapitalDelta]tN"], ",", 
         RowBox[{"nTotDynMeanDI", "[", 
          RowBox[{"pars", ",", "t", ",", "n0"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tmaxN", ",", "\[CapitalDelta]tN"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7390267505273438`*^9, 3.739026793768496*^9}, {
   3.739026841259755*^9, 3.7390268453100367`*^9}, {3.7390268759805717`*^9, 
   3.739026931144088*^9}, {3.7390276391627817`*^9, 3.739027642503805*^9}, {
   3.739098826307082*^9, 3.7390988307386827`*^9}, {3.7390993223100452`*^9, 
   3.739099326070757*^9}, 3.7390993936326714`*^9, {3.739099585597157*^9, 
   3.739099595140943*^9}, {3.739100179831476*^9, 3.739100182915339*^9}, 
   3.739100312185252*^9, 3.7391293274877663`*^9, {3.741004230747607*^9, 
   3.7410042685398273`*^9}, {3.741004320706829*^9, 3.7410043363463*^9}, {
   3.7410050088206472`*^9, 3.741005013118924*^9}, {3.7413676848959093`*^9, 
   3.741367699924006*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotDetDynPlotDI", "[", 
   RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"nDynDetDI", "[", 
       RowBox[{"pars", ",", "n0", ",", "tmaxP"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["i", "\[CapitalDelta]tN"], ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], "+", 
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}], ")"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "tmaxN", ",", "\[CapitalDelta]tN"}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.739028561256895*^9, 3.73902856904879*^9}, {
   3.7390286216942787`*^9, 3.739028623783659*^9}, 3.7390287289573097`*^9, 
   3.739028774470228*^9, 3.7390988384132013`*^9, {3.739099333876894*^9, 
   3.7390993812488413`*^9}, {3.739099431900242*^9, 3.739099493209257*^9}, {
   3.7390995242830667`*^9, 3.739099566566815*^9}, 3.739100309521144*^9, 
   3.739129328380821*^9, {3.741004380424292*^9, 3.741004428963469*^9}, {
   3.741004463269876*^9, 3.7410044778865023`*^9}, 3.7410045716668673`*^9, {
   3.7413677043163652`*^9, 3.741367713028225*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AFDynDistPlotDI", "[", 
    RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"0.5", "-", 
         RowBox[{"Reverse", "[", 
          RowBox[{"AFDynDistDI", "[", 
           RowBox[{"pars", ",", "t", ",", "n0", ",", "10"}], "]"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmaxP", ",", "\[CapitalDelta]tP"}], 
         "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["tmaxP", "\[CapitalDelta]tP"]}], "}"}]}], "}"}]}], ",", 
     
     RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7390260402304068`*^9, 3.739026154356615*^9}, {
   3.739027665912112*^9, 3.739027667483234*^9}, {3.739027864293002*^9, 
   3.739027939051695*^9}, {3.739027985142706*^9, 3.739027985962234*^9}, {
   3.7390280166579533`*^9, 3.739028064112955*^9}, {3.7390281082314043`*^9, 
   3.739028126889895*^9}, {3.739029060324559*^9, 3.7390291066429157`*^9}, 
   3.739098770132526*^9, {3.739099650947085*^9, 3.739099672831612*^9}, 
   3.739100284125641*^9, 3.7391293337428617`*^9, {3.740340459922958*^9, 
   3.740340465650865*^9}, {3.741004669584037*^9, 3.741004730730626*^9}, {
   3.741367716424202*^9, 3.741367718772132*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AFDynMeanPlotDI", "[", 
    RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["t", "\[CapitalDelta]tP"], ",", 
         RowBox[{"10", " ", 
          RowBox[{"AFDynMeanDI", "[", 
           RowBox[{"pars", ",", "t", ",", "n0"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tmaxP", ",", "\[CapitalDelta]tP"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739026490151*^9, 3.739026544597939*^9}, {
   3.739027681052553*^9, 3.7390277499874983`*^9}, {3.739027804559183*^9, 
   3.739027813219632*^9}, {3.739027959737627*^9, 3.7390280126294193`*^9}, {
   3.739028078274789*^9, 3.7390281314081593`*^9}, {3.739028597896106*^9, 
   3.739028598629673*^9}, {3.739098871412956*^9, 3.73909887319772*^9}, {
   3.739099050154776*^9, 3.739099055018956*^9}, {3.739099684431258*^9, 
   3.739099697237843*^9}, {3.73909982522227*^9, 3.7390998392057056`*^9}, 
   3.739100279690732*^9, 3.739129334826911*^9, {3.7403404764149*^9, 
   3.740340514078746*^9}, {3.741004751657447*^9, 3.741004781723948*^9}, {
   3.741367721972352*^9, 3.741367724528488*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFDetDynPlotDI", "[", 
   RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"nDynDetDI", "[", 
       RowBox[{"pars", ",", "n0", ",", "tmaxP"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["i", "\[CapitalDelta]tP"], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], 
             RowBox[{
              RowBox[{"temp", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], "+", 
              RowBox[{"temp", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}]], 
            "10"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "tmaxP", ",", "\[CapitalDelta]tP"}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.739028561256895*^9, 3.73902856904879*^9}, {
   3.7390286216942787`*^9, 3.739028623783659*^9}, 3.7390287289573097`*^9, 
   3.739028774470228*^9, 3.7390988384132013`*^9, {3.739099333876894*^9, 
   3.7390993812488413`*^9}, {3.739099431900242*^9, 3.739099493209257*^9}, {
   3.7390995242830667`*^9, 3.739099566566815*^9}, 3.739100309521144*^9, 
   3.739129328380821*^9, {3.741004380424292*^9, 3.741004428963469*^9}, {
   3.741004463269876*^9, 3.74100451494611*^9}, {3.7410045810892487`*^9, 
   3.7410046098699007`*^9}, {3.741004863174999*^9, 3.741004863442384*^9}, {
   3.741367726904314*^9, 3.741367731296625*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Combined Plots", "Subsubsection",
 CellChangeTimes->{{3.739100376940053*^9, 3.739100380392331*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotDynPlotDI", "[", 
   RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nTotDynDistPlotDI", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}], ",", 
      RowBox[{"nTotDynMeanPlotDI", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}], ",", 
      RowBox[{"nTotDetDynPlotDI", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}]}], "}"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["t", "\[CapitalDelta]tN"], "+", "1"}], ",", 
           RowBox[{"ToString", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmaxN", ",", 
           RowBox[{"\[CapitalDelta]tN", "*", "10"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"ToString", "[", "i", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"nMax", "[", "pars", "]"}], ",", "3"}], "}"}]}], "]"}], 
       ",", "False", ",", "False"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73902686981065*^9, 3.7390268905689173`*^9}, {
  3.739026938105813*^9, 3.739026941191844*^9}, {3.739027001127503*^9, 
  3.7390270799158497`*^9}, {3.739027110547812*^9, 3.739027201455389*^9}, {
  3.7390272916698837`*^9, 3.739027330986107*^9}, {3.739027373879216*^9, 
  3.739027558165571*^9}, {3.739028781288493*^9, 3.739028802551396*^9}, {
  3.739028840108899*^9, 3.739028841148714*^9}, {3.739100195673394*^9, 
  3.7391002477597923`*^9}, {3.739129322341218*^9, 3.739129324760798*^9}, {
  3.741004888982462*^9, 3.741004991820899*^9}, {3.7410050418092833`*^9, 
  3.741005044287969*^9}, {3.74136775280227*^9, 3.741367762620639*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nTotDynPlotDI", "[", 
  RowBox[{"test", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741004955611136*^9, 3.741004972821864*^9}, {
  3.741367765700239*^9, 3.74136776595584*^9}}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJx1Vvk/ldsX1i1DE2WoSxQySzeFSO7DzRASdY9mUTdKSRqolLrcSHUlQ0JK
g4gGRQOFUISkSEWI9z3vOecdzhG6GpR83+8f0A/7s/dnf56919rredZeS2/j
juWBo+Xk5JT4ocGP/68jiabYpPUyOHquvJWwTwaDxVfamm2luPL7mvJMDQ5H
+i/pqM3j8F5+IOvpfBbZv31fmzyfg+zWetkbAYfi4Q+Tkn1ZTFr2W1GTsRQW
De1tOYuk+FSlkedswmGwzmffdh8p5gb4FciHSGH/Oayd8uRQYO3RbhgkxYSE
UDYrWoqa5hcJ/es5BJz0Mc7eJ8XWZv3xQylS5MXuWG+4g8O8/CnfzY5JEWDi
dDkkR4r0/OSNV6M4LJCcDs9Il+LyEt+Ux8VSFNWH6Fme4HBW5YvCpjwp1E95
nt5bLUW735oZZukcLl71d3t5V4q3evpvnr+UorJ/bODLHA7pAwG0/BMpSreR
DbL3UhxSyq12vc2hMHhhxrQWKTz2zpPrlUrx5O1mnYvlHB42Nvw1vUeKkpFx
IR1DUjTWVVJsPYfFAa1vNHql0F1ckFSuJIP27NOlZm841G3s81f4LsWdRMnb
9CkyTO7TOrSJ5ODq1JI9MFYG2n5Pxw4DGWw8vf/O7OUwwfioeedUGQyvfZzt
PFeGX7t2zmwa4hB4khp6bCjD7BVVdVMcZei37naUU+Tj0Wx6tWCeDDl/Wv5B
e8mgdqzb31JNipcJY0+fcpIh3mHD95K1MoxbrP9mwwwpfsb781t//TZhGo2p
nUyApwONsum9AfPOSuAhtyVa8TQDpn/d7oY7DGLczgRHiWn4Fm2oKX7BYvKJ
msdpMhb5bCuzb4iBol2L7NJXFvtdj35ymcohde0qfccZvE4eVLuuM+T5r/1w
vuwPDq3BNtYZLiw+Z/44s9iD15W/bnbYZg6GecXLvgWymB68yWaPH4fSrfZy
hyM5pNjKxz2LYLFqTOS8kFAOtZ9uT/Pj+d49blLQjVgWUH3Vp3uIQ7fBHupr
JoczcWo1u1NYuMmam7QSOGSlkGxnPoe0mKbf0y6wmOZ741jeWQ7y2y/v+bOE
wwX5K3Krb7B4fq2+4iOPSypR7jhWy+H26mvmwlIWL8pGFmnyOMXE040ZrRyG
l8dt8azl7XrOsTPmcetMFZcn87yGjsh/O9/Cwr3KNs2Ixx2bl+J7sI+Du3NF
peg9C4X0vyq1eZzeGncrvx8cTpyaGW7AsdAeM3PMRB638k2Kte0EKWyHX333
+8xi1O3U0K/DHBYG7fhLRUsKm4h1BqmjOeQkKi0RjpeieIalEsXnX/qHOSp1
Kv/34+CuZ5q8Dk1PfblnLcXspSP7hqZxqFckBRX9LWiLPSa539GKMPGDHVGC
N1giuBm00k4IBLTeUnwmhIbnZWO3O0L8u+3E5B+5EpxbeTcn7RWvg0flS3f8
LoH/nOioPE8GPYdSVr/bxsDL9siQfi6NyS93mqvFMCi95q/w8SKDL+8ybne9
puGtmf3YkdeNQeqARusrBrEvBzq7RzGImvRa90kng38MVl/V/M4g+omh/BZD
BkZxGersCK8zlyly43jdpMb2XbR3ZjDVsqpcT5XFoNf4HkNLfn9sb7e1gEHu
6wurMvVZ1DulrY11YmH65wrFqxsZFN98eFd5Lotbxz2MSB8WLmNC+6zDGGzs
OBTLOLKoWNLhlevPokm408IhioHxtdebtnizcFy/YLJKKAvi9cDTj8f49/S/
8y30Y3GqOs3e8SALJ83Lgv1pDJaXF117tY2F8diTI0uPs9hcFnK05xKDwK3e
88n9LBQFcVqL01nYPm0/Z1XIIGNVRCN5lMXIU4FgXi6LnJk+4Qcf8nYrBt3e
nWbxy7d1MRp3WNQon1pW9pTB6vPPyp5dZhGcJi3qr2LR1/OK+sTHL6fUxbD0
Novi6V5d9Xz+lVaYcBY9DPR3nm+8/Ih/Z9Ujj+wu/j4LlaMbpcxP891j07sH
k0oJ2FfZx8pvJyHLEt3TiSbBeOtF6MeJkOlfHrRMKMLIkEUIe1yEd/nmb81H
i5Fnp+ln5SvGS/XcNZ29Ipgd0twgnyRBwcDi+JRHEpBbald1z5JAwzH8baAc
jTadV8HyhjQexY5oimMlsJTvF6wGjekKrdsMN9DouHtNs+WBBLP6240EAhoF
qv85yEXQeLkrM8H2Oa+/hsG80CAauhW++iNHaczxdrfT7JLAZMwV/24eNyRf
UrsinYbJQE34EU6C+getWb5xNPAhJ/RuHg2BKzda/asEeXU+42xO0ygv9jM/
fI/GyjLCQleBRssq2YqHl2mcmmK9vPcJjWRrv22dqjRK8o/YKxXRULqnstnw
FQ11Rc85m2fwevbVT7OspJHlamhiR9DwP0bWt5jz/o6+ZeTcRGOupczJ5gON
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
ezrrWjPfh/0PLTAjPw==
    "], {{0, 0}, {21, 8}}, {0, 1}], {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQoEHCD0B/tlSztyzi0WgfIZHB4++jpz5UxxKJ/D
QWeC+W57b0kHmD6LT9Gt9+2loHwRh8VnxJcfOgXjSziYtJU8LZGShvJlHKJY
npze6wHjKzjU6Su1/kqG8ZUc5ucLtdqWwPgqDnF/LPOk6mB8NYcU/UdH9Vtg
fA2HZA45e8YOGF/L4ccL7iWFXTC+jsPary0J7D0wvp6DkWSGv3AvjG/gkOfN
f/cYnG/oILKk9ohDH4xv5MAddr58Cpxv7PD4dFrNOTjfxGHLka8s34F8ALY2
TT0=
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQoEHCD0B/uUPUHrZtwWgfIZHHwCrJUqJ0lA+RwO
bRfk5zu8lHKA6Ztk+GxJhrEMlC/icD93269zt2F8oD5hPh5rPVkoX8ZB4pfa
8v2hML6Cw66pJV8aM2B8JYcP/uwH4gphfBWHT9ZnjXtKYXw1Bzc57+PN5TC+
hsO23jXHCypgfC2HXrPp3g/gfB2Hd9sXHBKphPH1HMrK7Ap14XwDh4XbD/Ja
wvmGDgZC8i12cL6RQ9qfz6KOcL6xQ0BylrcTnG/i4HLy3x0QHwCnY0uP
       
       "]]}}, {}, {}, {{}, {}}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{1, 
      FormBox["\"0\"", TraditionalForm]}, {11, 
      FormBox["\"50\"", TraditionalForm]}, {21, 
      FormBox["\"100\"", TraditionalForm]}}, {{1, 
      FormBox["\"1\"", TraditionalForm]}, {4, 
      FormBox["\"4\"", TraditionalForm]}, {7, 
      FormBox["\"7\"", TraditionalForm]}}, False, False},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.741362412844219*^9, 3.7413680631349783`*^9, 
  3.741368101498815*^9, 3.741368788547155*^9, 3.741369211243362*^9, 
  3.741716859246862*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFDynPlotDI", "[", 
   RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AFDynDistPlotDI", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}], ",", 
      RowBox[{"AFDynMeanPlotDI", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}], ",", 
      RowBox[{"AFDetDynPlotDI", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}]}], "}"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["t", "\[CapitalDelta]tP"], "+", "1"}], ",", 
           RowBox[{"ToString", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmaxP", ",", 
           RowBox[{"10", "*", "\[CapitalDelta]tP"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"i", "/", "10"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "10", ",", "2"}], "}"}]}], "]"}], ",", 
       "False", ",", "False"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73902775171004*^9, 3.739027781601762*^9}, {
   3.7390278564536543`*^9, 3.7390278593402576`*^9}, {3.7390281512715282`*^9, 
   3.739028165833247*^9}, {3.7390282074183187`*^9, 3.739028212416668*^9}, {
   3.739028476339081*^9, 3.739028516736415*^9}, {3.739028891736416*^9, 
   3.739028893239809*^9}, {3.739030747921465*^9, 3.739030765507917*^9}, {
   3.7390997439887457`*^9, 3.739099766900242*^9}, {3.739129343191937*^9, 
   3.739129346867207*^9}, 3.739129662662139*^9, 3.739198816018517*^9, 
   3.740340524563833*^9, {3.7410050567689943`*^9, 3.741005069581052*^9}, {
   3.741367768325302*^9, 3.7413677785053673`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AFDynPlotDI", "[", 
  RowBox[{"test", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74100507627297*^9, 3.741005079315309*^9}, {
   3.7413677810924673`*^9, 3.741367781452362*^9}, 3.741369635379938*^9}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1: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
+P/G/zf+v/H/38b/H1RKVfs=
    "], {{0, 0}, {50, 10}}, {0, 1}], {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw9yVtIUwEcx/HTTUYRbjVFcAczhzeWmWaule6nx7PppltNrGhksKZpUGoF
Ed3OQw+9OoYgWWk5snBdaPYQ3YOoKWZRUA+zelgkKR3WmJlty+r8zw/+/Pnw
zXZ1OFoWMwxTunB/P+36vy3Hf4lGs0etES+mSmYQ1Z8cFnuVkhVgbOE0MU8l
WYnbXfGrBX1kNQKfy5Q9cXIGDtz6mn/avkqyBoeGGvr3eMlrkOm0WUzj5LXw
7PrSEkuQtRj0dwyE81ZLzsXkIvXSbRZyPka/7bUZ95MLYXhWHvGcIevAXgiN
pXjJRZg1PJnQ+8jFUFQkXvjvkDfgfGBs97tH5BK0rruxb2WQXIojNvv44Bvy
RhTVz/0IfSCXYdlMtE/8SN6EpnDjzRVhcjks1qzeHVNkPRzseyEyTd6Mrrbj
/Px3sgGj7EjTuQh5CwzBKbc/St6KNL9pyYkYuQLazBE2OUuuRCzhaufnyEZw
Md3Dnb/IQHvdZVflvGQBSD6fsTK/qVdhSNndeIUsVCG9vtuti1Ovhir98MAl
slANb4r2LJOgzoFrDv3cThY4fCoePtoj9xq4nZ2KCbnXwPH6VSeTpM7j7rH+
nAKywON+znqnVe4m5L69l9UmdxNUzQftgtzNmNSk+rxyNyO79doDn9xrMc1z
bEDutbBkhEoey70Op56+dAYX/AduTNPg
       
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJxd0MkKAWAUhuEvK1lZWFhYIEmSzPNwzGxdgrJ2Cy4GmbKxc1UuAYk676nT
39Pb2fyJ1Wa5Dkgqv/fz/uZy/kzIvnr2j86yg3MQDtveOYIehWO2c46jJ+GU
nZ3TdnLOoGfRc+h5uGBX5yLuS+b/o4z7ClyFa3ZzrtvduWEP5ybcgttwB+7C
PbgPm/cW1gAd1hAd1ggd1hgd1gQd1hQd1gwd1hwd1uLvFzwd+Xk=
       
       "]]}}, {}, {}, {{}, {}}}},
  AspectRatio->0.5,
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{1, 
      FormBox["\"0\"", TraditionalForm]}, {11, 
      FormBox["\"100\"", TraditionalForm]}, {21, 
      FormBox["\"200\"", TraditionalForm]}, {31, 
      FormBox["\"300\"", TraditionalForm]}, {41, 
      FormBox["\"400\"", TraditionalForm]}, {51, 
      FormBox["\"500\"", TraditionalForm]}}, {{1, 
      FormBox["\"0.1\"", TraditionalForm]}, {3, 
      FormBox["\"0.3\"", TraditionalForm]}, {5, 
      FormBox["\"0.5\"", TraditionalForm]}, {7, 
      FormBox["\"0.7\"", TraditionalForm]}, {9, 
      FormBox["\"0.9\"", TraditionalForm]}}, False, False},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.741005080275339*^9, 3.74136241361549*^9, 
  3.741368063805438*^9, 3.7413681022110367`*^9, 3.741368789771759*^9, 
  3.741369212311873*^9, 3.741369637038807*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stationary distribution", "Subsection",
 CellChangeTimes->{{3.738512251335237*^9, 3.7385122636196938`*^9}}],

Cell[CellGroupData[{

Cell["Calculating Stationary Distribution", "Subsubsection",
 CellChangeTimes->{{3.7391004085216837`*^9, 3.7391004135963297`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"equs", ",", "vars"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equs", "[", "pars_", "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"TMtrxDI", "[", "pars", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", ";;"}], ",", 
              RowBox[{"2", ";;"}]}], "]"}], "]"}], ".", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "2", ",", 
               SuperscriptBox[
                RowBox[{"nMax", "[", "pars", "]"}], "2"]}], "}"}]}], "]"}]}], 
          ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"j", "-", "1"}], "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"\[CapitalPi]", "[", "1", "]"}], " ", 
         RowBox[{
          RowBox[{"TMtrxDI", "[", "pars", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"j", "-", "1"}], ",", "1"}], "]"}], "]"}]}]}], "\[Equal]", 
       RowBox[{"\[CapitalPi]", "[", "j", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}]}], 
        "]"}], "]"}], "\[Equal]", 
      RowBox[{"1", "-", 
       RowBox[{"\[CapitalPi]", "[", "1", "]"}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars", "[", "pars_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.738512651267112*^9, 3.7385126815971117`*^9}, {
  3.738512717780148*^9, 3.738512724421364*^9}, {3.738512755324379*^9, 
  3.738512780085231*^9}, {3.738603934508222*^9, 3.738603950646862*^9}, {
  3.738609130465026*^9, 3.738609149000681*^9}, {3.738609264205017*^9, 
  3.738609290017881*^9}, {3.738610223616453*^9, 3.7386102634065657`*^9}, {
  3.7386102952973127`*^9, 3.738610375748473*^9}, {3.7391004180897303`*^9, 
  3.739100422464719*^9}, {3.740340583268977*^9, 3.740340606415195*^9}, {
  3.741005583395855*^9, 3.741005588100114*^9}, {3.741367861192381*^9, 
  3.741367863664469*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "statDistDI", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"statDistDI", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"statDistDI", "[", "pars", "]"}], "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}]}], "]"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{"NSolve", "[", 
       RowBox[{
        RowBox[{"equs", "[", "pars", "]"}], ",", 
        RowBox[{"vars", "[", "pars", "]"}]}], "]"}], "]"}], 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7385127060302143`*^9, 3.738512711506703*^9}, {
   3.7385128004046793`*^9, 3.738512808662706*^9}, {3.7385128477973433`*^9, 
   3.7385128870206614`*^9}, 3.738513186323915*^9, {3.738517833180649*^9, 
   3.738517849335445*^9}, {3.738520574666086*^9, 3.738520578334515*^9}, {
   3.738603941629662*^9, 3.738603946432425*^9}, {3.738604519554234*^9, 
   3.7386045254119043`*^9}, 3.738609866817274*^9, {3.740340611847266*^9, 
   3.740340632137392*^9}, {3.741005570094952*^9, 3.74100557181406*^9}, {
   3.7413678668590603`*^9, 3.7413678723178883`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp", "=", 
   RowBox[{"v2m", "[", 
    RowBox[{"test", ",", 
     RowBox[{"statDistDI", "[", "test", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.738610586548079*^9, 3.7386105910505533`*^9}, {
   3.7386106354558697`*^9, 3.738610649230851*^9}, {3.738610825952182*^9, 
   3.73861083827833*^9}, {3.741005576794001*^9, 3.7410055769593067`*^9}, 
   3.741367874926064*^9, {3.741369514019226*^9, 3.741369527666815*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.741369528484317*^9, 3.741369535418006*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzdknsw1QkUxxXj6kH0ThsXIXpQbcjSt9gNqa60hMraPMqjPEKR0l49vEoJ
eXR1e2yl10VWedSW14YWtyUTwr3u+/eoVJJi1842+58/dmZndmbPzJlzzh/n
fOfznaO3I9TVX1lJSWnC5/yz/yte4f9We8/XNMxfSIK7Mq7TgSeCRetyjyq6
DjlFQ1zTyTQcK5t6TgSSSHQz0U+WStAQ+qJoeD2NPG3rbWxvCuuty1mFfnJQ
qvGGWXE0zFhvvt42lcadaGuneCviP+O6nFBfcMONxnvjE1PXmXdjcmP6w4aV
/kiK8bS61EWi5nuTJwfuSnFmzp5CR792uBVGi2aNpxGZzDx00J7E4OCSBYlH
JIiU6HfSK2mYNFYcODSTQqRW7rjvCmRwiAs6nx5IQy/G0CihgUJ1w+OlnIMK
vL7rdT4njUa6avqKFV6j95akyHze/Hs+rJ495Kdl/xLsLL13lzy64LN1Rti0
FlcY2Zsf2XmCwDetwbH7hgVQIpllOo9TsEX4u+OTeRRiTSPNwlpl4OVM659U
2wnTver8QpqCLaPFfNEQgQxOXuZvtWJwFa31IiMa2z7xLqY2kRhQvZptQ0uR
72hpkuZO4ybb0/46m0LYrZDSiio5zM44kbOO0ZjTfUzoaEEjq4Qf8yrzn/Nm
qluHOZdQUMg+aEnDesDvfFR0zm43ur/wUVdzJaEpGlHxni3ABem6t68i9sHx
tk6cpi6JccGRzZGxIpxsFXOtWbUoOt5tbmRLwXKy83unrXKol3kX58hfYIHv
wXaFiMJXgYwe2zYCop35M2r8xUh90GaxYx6NI+z94zjXSZjueXeq+pQU9xve
yTR9aBhrra/LukIhgPXwwiKmAtWLklzn5tAY6J+UpHdodK/Gz4PvQo7J9RN7
MP45j0CClgZ3ToYQLq/6F5dGFSBXxUD50a8ElP2FBr0z+3AtUDzFsaYEdYMu
TV4VBKjNLH5gnRAtEf4c/mUeZk3hhnqARE9ijTaXIUZEYErsnR/r4cxnpRea
UbjXzvC6rS/Hzd4BZv1gF672uZ1p5I/yurgQH1MJbDDU2MQvEOFBwFHjYHMa
iSLJ2eR+EkckuuIOZxm2myJs+l4arpJr8tDRv6gMU6/V6FSMyaV8IGCY10yi
+dx6wfNDUvxMNyQnH32G5T7+1Tw2icNUQ/u8JRLsz2AY6HryAdbdyMaPBNR6
7Cote/vQG16m8ub0Q9y3X+w17RwB7Xe6VlxbITTVhuqyCzhorarMimeQ2Bz8
5fKAaSJc6SjafHJ+FThrT4s3jJDwdi/3LF0ng8maoECvq8+x/Zb/joDOUR8y
ZjMdiggMkAdSrNTEOKvq6x5rT0OfFV6bZk3BsD8x04whH5PrF8+4kOGDFFbp
cZZtdFHg2ND+j3MjBLCsWmqyW5PCxChm6ECODEndJioaPR2o1Hlc/TqIREZm
yIhTnRiW68zC2T80I2nitxsycwl8Wl2Tm9MkQGxLsY+yShx4JtHd9vdI5I7P
ONdc3AvVpGfL9kgjYefraO/+gcAjafz2mDABJjlrpSy8FoMKm31RE0pJOK/5
xLmlIYW/oUq755NW5JULQ7cOUtiiOsPwjg6JrD6F1bP5kjG56ra+Nd1VRUEm
0Za3uRIwKPE5dnqqCNmrqBjhRgqMEd+kjflyWOkW6duu7UGQcfiN3jMkGCLF
SecYCYrZJz80HX4Ku77W7NpRvTfdFsednAUwLM+0ySvbD5tUziZJDA2dJLvr
LNkLXLz8dJdaiO/f+oLY6bcdBB2fZyWlKObhNBvmSyQws6PbOV3wa+P1DDi4
Y9uV/H6ql4CkpOJ4RVAfRBEsKo0oG5PrD9YSDmI=
   "], {{0, 0}, {9, 9}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{8.5, 
       FormBox["1", TraditionalForm]}, {7.5, 
       FormBox["2", TraditionalForm]}, {6.5, 
       FormBox["3", TraditionalForm]}, {5.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {3.5, 
       FormBox["6", TraditionalForm]}, {2.5, 
       FormBox["7", TraditionalForm]}, {1.5, 
       FormBox["8", TraditionalForm]}, {0.5, 
       FormBox["9", TraditionalForm]}}, {{8.5, 
       FormBox["1", TraditionalForm]}, {7.5, 
       FormBox["2", TraditionalForm]}, {6.5, 
       FormBox["3", TraditionalForm]}, {5.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {3.5, 
       FormBox["6", TraditionalForm]}, {2.5, 
       FormBox["7", TraditionalForm]}, {1.5, 
       FormBox["8", TraditionalForm]}, {0.5, 
       FormBox["9", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}, {8.5, 
       FormBox["9", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}, {8.5, 
       FormBox["9", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.7413695358354177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "6"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.741369517068795*^9, 3.741369540174698*^9}}],

Cell[BoxData["0.05950958748673699`"], "Output",
 CellChangeTimes->{{3.741369522084723*^9, 3.741369538340641*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "[", 
  RowBox[{"[", 
   RowBox[{"6", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.741369548647143*^9, 3.7413695497640753`*^9}}],

Cell[BoxData["0.054006670528326896`"], "Output",
 CellChangeTimes->{3.741369551121458*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",
 CellChangeTimes->{{3.7391004359922657`*^9, 3.739100437154636*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotStatDistDI", "[", "pars_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"statM", ",", "i", ",", "j", ",", "out"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", 
          RowBox[{"2", 
           RowBox[{"nMax", "[", "pars", "]"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"statM", "=", 
      RowBox[{"v2m", "[", 
       RowBox[{"pars", ",", 
        RowBox[{"statDistDI", "[", "pars", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"out", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "j", "-", "1"}], "]"}], "]"}], "+=", 
           RowBox[{"statM", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "\[IndentingNewLine]",
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739029200431332*^9, 3.7390292200199423`*^9}, {
  3.7390292551278963`*^9, 3.739029337695829*^9}, {3.739029467397525*^9, 
  3.739029685597262*^9}, {3.7390297757077503`*^9, 3.739029781373611*^9}, {
  3.740340663956358*^9, 3.740340694393018*^9}, {3.741005598524733*^9, 
  3.7410056167722054`*^9}, {3.7413678809667*^9, 3.741367883894334*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotStatMeanDI", "[", "pars_", "]"}], ":=", 
   RowBox[{
    RowBox[{"nTotStatDistDI", "[", "pars", "]"}], ".", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", 
        RowBox[{"2", 
         RowBox[{"nMax", "[", "pars", "]"}]}]}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739029759733828*^9, 3.739029796018291*^9}, {
   3.739029836713669*^9, 3.739029839171789*^9}, {3.739100475778883*^9, 
   3.7391004934904203`*^9}, 3.740340708446431*^9, {3.741003188474113*^9, 
   3.7410032017995977`*^9}, {3.741005624086548*^9, 3.741005630968657*^9}, {
   3.7413678868983307`*^9, 3.741367890081903*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFStatDistDI", "[", 
   RowBox[{"pars_", ",", "bin_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"statM", ",", "i", ",", "j", ",", "out"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"statM", "=", 
      RowBox[{"v2m", "[", 
       RowBox[{"pars", ",", 
        RowBox[{"statDistDI", "[", "pars", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"out", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{
                 FractionBox["i", 
                  RowBox[{"i", "+", "j"}]], ",", 
                 FractionBox["1", "bin"]}], "]"}], "*", 
               RowBox[{"(", "bin", ")"}]}], "+", "1"}], "]"}], "]"}], "+=", 
           RowBox[{"statM", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "\[IndentingNewLine]",
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739029200431332*^9, 3.7390292200199423`*^9}, {
   3.7390292551278963`*^9, 3.739029337695829*^9}, {3.739029467397525*^9, 
   3.739029685597262*^9}, {3.7390297757077503`*^9, 3.739029781373611*^9}, {
   3.739030072195467*^9, 3.739030112658246*^9}, {3.740340795689466*^9, 
   3.740340815486328*^9}, 3.740340938766375*^9, {3.7410056599857693`*^9, 
   3.7410056690837507`*^9}, {3.741006426980296*^9, 3.741006450329356*^9}, {
   3.741367892499173*^9, 3.7413678949789047`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFStatMeanDI", "[", "pars_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"statM", ",", "i", ",", "j", ",", "out"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"statM", "=", 
      RowBox[{"v2m", "[", 
       RowBox[{"pars", ",", 
        RowBox[{"statDistDI", "[", "pars", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"out", "+=", 
           RowBox[{
            FractionBox["i", 
             RowBox[{"i", "+", "j"}]], 
            RowBox[{"statM", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739029200431332*^9, 3.7390292200199423`*^9}, {
  3.7390292551278963`*^9, 3.739029337695829*^9}, {3.739029467397525*^9, 
  3.739029685597262*^9}, {3.7390297757077503`*^9, 3.739029781373611*^9}, {
  3.739030072195467*^9, 3.739030112658246*^9}, {3.739030190520699*^9, 
  3.7390302506526737`*^9}, {3.740340829610972*^9, 3.740340848626472*^9}, {
  3.741005674453623*^9, 3.7410056805329037`*^9}, {3.741367898138625*^9, 
  3.7413679008266287`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots", "Subsubsection",
 CellChangeTimes->{{3.739100450186627*^9, 3.7391004509055347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotStatDistPlotDI", "[", "pars_", "]"}], ":=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"0.5", "-", 
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"nTotStatDistDI", "[", "pars", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"nMax", "[", "pars", "]"}]}], "]"}], "]"}], "]"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739029554482748*^9, 3.739029558225601*^9}, {
   3.7390296997965517`*^9, 3.739029745751244*^9}, {3.7390298141602087`*^9, 
   3.7390298269471903`*^9}, {3.7390299061570053`*^9, 3.739029908357936*^9}, 
   3.739100452731143*^9, {3.739100842267119*^9, 3.739100842914118*^9}, {
   3.7404973726944847`*^9, 3.740497450665503*^9}, {3.740497533799975*^9, 
   3.740497534423641*^9}, {3.741006162840917*^9, 3.741006202070208*^9}, {
   3.741367908546315*^9, 3.741367912025713*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotStatMeanPlotDI", "[", "pars_", "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"nTotStatMeanDI", "[", "pars", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"nTotStatMeanDI", "[", "pars", "]"}]}], "}"}]}], "}"}], ",", 
     
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"nMax", "[", "pars", "]"}], "+", "1"}]}], "}"}]}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.739029841652543*^9, 3.739029894037711*^9}, {
  3.739100491026184*^9, 3.739100510114785*^9}, {3.741006206745748*^9, 
  3.74100623439222*^9}, {3.7410063291514997`*^9, 3.741006329496398*^9}, {
  3.74136791004286*^9, 3.7413679152896357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotEquPlotDI", "[", "pars_", "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", "[", "1", "]"}], "+", 
            RowBox[{"n", "[", "2", "]"}]}], ")"}], "/.", 
          RowBox[{"EquSubDetDI", "[", "pars", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", "[", "1", "]"}], "+", 
            RowBox[{"n", "[", "2", "]"}]}], ")"}], "/.", 
          RowBox[{"EquSubDetDI", "[", "pars", "]"}]}]}], "}"}]}], "}"}], ",", 
     
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"nMax", "[", "pars", "]"}], "+", "1"}]}], "}"}]}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.739029841652543*^9, 3.739029894037711*^9}, {
  3.73903002618708*^9, 3.739030031684023*^9}, {3.739100544486391*^9, 
  3.739100547936286*^9}, {3.741006240077407*^9, 3.741006258820424*^9}, {
  3.7410062913707657`*^9, 3.741006318816029*^9}, {3.74136791648705*^9, 
  3.741367919632625*^9}, {3.741369152641561*^9, 3.741369153015801*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nTotStatDistPlotDI", "[", "test", "]"}], ",", 
     RowBox[{"nTotStatMeanPlotDI", "[", "test", "]"}], ",", 
     RowBox[{"nTotEquPlotDI", "[", "test", "]"}]}], "}"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"ToString", "[", "i", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{"nMax", "[", "test", "]"}]}], "}"}]}], "]"}], ",", "False", 
      ",", "False"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739029898112917*^9, 3.739029912854027*^9}, {
   3.73903003598691*^9, 3.739030038381789*^9}, {3.7391007703363237`*^9, 
   3.739100906054872*^9}, {3.741006334844514*^9, 3.741006347481675*^9}, {
   3.7413679215841837`*^9, 3.741367924703429*^9}, 3.741368120395657*^9}],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{{0.917794, 0.920966, 0.881936}}, {{0.8644881395630364, 
    0.8679777340285091, 0.8351843410933394}}, {{0.8288824236371451, 
    0.8325841557217194, 0.803956512249582}}, {{0.7836419987777017, 
    0.7876132717426448, 0.7642786063967675}}, {{0.68668003847008, 
    0.69680150862544, 0.6844429590673597}}, {{0.5824344895342619, 
    0.6018519925120114, 0.601116772983058}}, {{0.6155603986191516, 
    0.6320239189926727, 0.6275951760688205}}, {{0.7410975717103881, 
    0.7463663917499449, 0.7279403126457111}}, {{0.892916454384331, 
    0.8962366739372528, 0.8601172634197319}}}, {{0, 0}, {1, 9}}, {0, 
    1}], {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[{{0., 6.917126929264373}, {1., 
       6.917126929264373}}]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[{{0., 7.368421052631575}, {1., 
       7.368421052631575}}]}}, {}, {}, {{}, {}}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{False, {{0, 
      FormBox["\"0\"", TraditionalForm]}, {1, 
      FormBox["\"1\"", TraditionalForm]}, {2, 
      FormBox["\"2\"", TraditionalForm]}, {3, 
      FormBox["\"3\"", TraditionalForm]}, {4, 
      FormBox["\"4\"", TraditionalForm]}, {5, 
      FormBox["\"5\"", TraditionalForm]}, {6, 
      FormBox["\"6\"", TraditionalForm]}, {7, 
      FormBox["\"7\"", TraditionalForm]}, {8, 
      FormBox["\"8\"", TraditionalForm]}, {9, 
      FormBox["\"9\"", TraditionalForm]}}, False, False},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.7390299132069187`*^9, 3.73903003874794*^9, 3.739030610298293*^9, 
   3.7390308159642057`*^9, 3.739031226510015*^9, 3.73910055146803*^9, 
   3.7391006180304403`*^9, {3.7391008016117783`*^9, 3.739100906463917*^9}, 
   3.74034089722511*^9, 3.740497403252446*^9, {3.740497528301495*^9, 
   3.740497537155334*^9}, 3.740498612897011*^9, 3.7410026071791143`*^9, 
   3.741006349252304*^9, 3.741362414314002*^9, 3.741368064462741*^9, {
   3.741368102830814*^9, 3.741368121102207*^9}, 3.741369212897365*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AFStatDistPlotDI", "[", "pars_", "]"}], ":=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"Reverse", "[", 
        RowBox[{"0.5", "-", 
         RowBox[{"AFStatDistDI", "[", 
          RowBox[{"pars", ",", "10"}], "]"}]}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739030114949901*^9, 3.739030164470937*^9}, {
   3.739030301034588*^9, 3.739030302325942*^9}, 3.73910066499358*^9, {
   3.74100301150769*^9, 3.7410030224702253`*^9}, {3.74100636522381*^9, 
   3.741006367997739*^9}, {3.741006480541057*^9, 3.74100648353131*^9}, {
   3.7413679274953203`*^9, 3.7413679303028097`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AFStatMeanPlotDI", "[", "pars_", "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"10", 
          RowBox[{"AFStatMeanDI", "[", "pars", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", 
          RowBox[{"AFStatMeanDI", "[", "pars", "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739029841652543*^9, 3.739029894037711*^9}, {
   3.739030324247993*^9, 3.73903034373488*^9}, 3.739100657572178*^9, {
   3.7410030253588753`*^9, 3.741003043723613*^9}, {3.741006371336646*^9, 
   3.741006373838023*^9}, {3.741006499970316*^9, 3.741006504481934*^9}, {
   3.7413679288149023`*^9, 3.741367933502997*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AFEquPlotDI", "[", "pars_", "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"n", "[", "1", "]"}], 
             RowBox[{
              RowBox[{"n", "[", "1", "]"}], "+", 
              RowBox[{"n", "[", "2", "]"}]}]], "10"}], ")"}], "/.", 
          RowBox[{"EquSubDetDI", "[", "pars", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"n", "[", "1", "]"}], 
             RowBox[{
              RowBox[{"n", "[", "1", "]"}], "+", 
              RowBox[{"n", "[", "2", "]"}]}]], "10"}], ")"}], "/.", 
          RowBox[{"EquSubDetDI", "[", "pars", "]"}]}]}], "}"}]}], "}"}], ",", 
     
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"nMax", "[", "pars", "]"}], "+", "1"}]}], "}"}]}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.741006391699844*^9, 3.741006407987488*^9}, {
   3.741006543454503*^9, 3.741006570152759*^9}, {3.7413679347196302`*^9, 
   3.74136793751116*^9}, 3.741368127063674*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AFStatMeanDI", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r0", "\[Rule]", "0.2"}], ",", 
    RowBox[{"\[Gamma]0", "\[Rule]", "2"}], ",", 
    RowBox[{"s", "\[Rule]", "0.9"}], ",", 
    RowBox[{"\[Sigma]", "\[Rule]", "0.0"}], ",", 
    RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.741369307755468*^9, 3.7413693080653954`*^9}, {
  3.741369340308118*^9, 3.741369357990885*^9}}],

Cell[BoxData["0.3599439775910364`"], "Output",
 CellChangeTimes->{
  3.741369308935203*^9, {3.741369348464326*^9, 3.741369359142671*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AFStatDistPlotDI", "[", "test", "]"}], ",", 
     RowBox[{"AFStatMeanPlotDI", "[", "test", "]"}], ",", 
     RowBox[{"AFEquPlotDI", "[", "test", "]"}]}], "}"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"N", "[", 
            FractionBox["i", "10"], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", "False", 
      ",", "False"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739030385405455*^9, 3.739030393555503*^9}, {
  3.739100674927045*^9, 3.7391007463543787`*^9}, {3.741006574439518*^9, 
  3.741006585890626*^9}, {3.741367940320197*^9, 3.741367944903037*^9}}],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{{0.917794, 0.920966, 0.881936}}, {{0.6694407239534569, 
    0.6810994993963615, 0.6706631253570269}}, {{0.6316321975926615, 
    0.6466625251603721, 0.6404417841556627}}, {{0.7759373586464352, 
    0.7799545355897418, 0.757521287324102}}, {{0.7972373738645206, 
    0.8011276460567868, 0.7762023673783335}}, {{0.8690767500313034, 
    0.8725390057149426, 0.8392087607295562}}, {{0.8191108840184932, 
    0.8228708345968052, 0.7953864285195883}}, {{0.8413509080714219, 
    0.8449783533586966, 0.8148919389845775}}, {{0.7004883235443989, 
    0.709378448356172, 0.6954802814600519}}, {{0.7366177076076846, 
    0.7422860167780839, 0.7243594404294394}}}, {{0, 0}, {1, 10}}, {0, 
    1}], {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[{{0., 4.885653717353789}, {1., 
       4.885653717353789}}]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[{{0., 10.}, {1., 10.}}]}}, {}, {}, {{}, {}}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{False, {{1, 
      FormBox["\"0.1\"", TraditionalForm]}, {2, 
      FormBox["\"0.2\"", TraditionalForm]}, {3, 
      FormBox["\"0.3\"", TraditionalForm]}, {4, 
      FormBox["\"0.4\"", TraditionalForm]}, {5, 
      FormBox["\"0.5\"", TraditionalForm]}, {6, 
      FormBox["\"0.6\"", TraditionalForm]}, {7, 
      FormBox["\"0.7\"", TraditionalForm]}, {8, 
      FormBox["\"0.8\"", TraditionalForm]}, {9, 
      FormBox["\"0.9\"", TraditionalForm]}, {10, 
      FormBox["\"1.\"", TraditionalForm]}}, False, False},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.739030394010318*^9, 3.739030610748578*^9, 3.7390308164476433`*^9, 
   3.7390312274598427`*^9, 3.739100628270659*^9, {3.739100705144236*^9, 
   3.739100746795244*^9}, 3.7403409520017223`*^9, {3.740497552747656*^9, 
   3.740497555917448*^9}, 3.740498613072825*^9, 3.7410026072799187`*^9, 
   3.741006586841567*^9, 3.741362414538485*^9, 3.741368064607472*^9, {
   3.741368102976142*^9, 3.741368130083753*^9}, 3.741369213185356*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finite vs. Infinite population", "Chapter",
 CellChangeTimes->{{3.7410022627154427`*^9, 3.741002267433608*^9}, 
   3.741002581484736*^9}],

Cell[CellGroupData[{

Cell["N-Total", "Subsection",
 CellChangeTimes->{{3.741368433454012*^9, 3.741368437976385*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotComp", "[", 
   RowBox[{"\[Gamma]0in_", ",", "\[Beta]in_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "PARS"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PARS", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r0", "\[Rule]", "0.2"}], ",", 
        RowBox[{"\[Gamma]0", "\[Rule]", "\[Gamma]0in"}], ",", 
        RowBox[{"s", "\[Rule]", "0.9"}], ",", 
        RowBox[{"\[Sigma]", "\[Rule]", "0.0"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", "\[Beta]in"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]0in", ",", "\[Beta]in", ",", 
        RowBox[{"nTotEquDetDI", "[", "PARS", "]"}], ",", 
        RowBox[{"nTotStatMeanDI", "[", "PARS", "]"}]}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.741007022767549*^9, 3.741007147336404*^9}, {
   3.741013784836713*^9, 3.7410137858115396`*^9}, 3.7413630149022827`*^9, {
   3.74136307482302*^9, 3.741363096828137*^9}, {3.741368025509377*^9, 
   3.741368031953575*^9}, 3.74136901262523*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nTotComp", "[", 
      RowBox[{"\[Gamma]", ",", "0.05"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.741362688768346*^9, 3.7413627012341633`*^9}, {
  3.741362903256435*^9, 3.7413629351659727`*^9}, {3.7413630678773403`*^9, 
  3.7413630688401833`*^9}, {3.7413631206188173`*^9, 3.741363124988085*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nTotComp", "[", 
      RowBox[{"\[Gamma]", ",", "0.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7410071502900467`*^9, 3.741007216057193*^9}, {
   3.7410073051430273`*^9, 3.7410073092303057`*^9}, {3.741008574109131*^9, 
   3.741008609660977*^9}, 3.741010685866577*^9, {3.741010918641375*^9, 
   3.741010923360004*^9}, 3.74101381046441*^9, {3.741362624757495*^9, 
   3.741362625064357*^9}, 3.741362693277239*^9, {3.7413628816664057`*^9, 
   3.741362882972231*^9}, {3.741362937090085*^9, 3.7413629378588333`*^9}, {
   3.7413630701205473`*^9, 3.7413630702321653`*^9}, {3.741363126289187*^9, 
   3.741363127236106*^9}, 3.7413631917346973`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nTotComp", "[", 
      RowBox[{"\[Gamma]", ",", "5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7410071502900467`*^9, 3.741007216057193*^9}, {
   3.7410073051430273`*^9, 3.7410073092303057`*^9}, {3.741008574109131*^9, 
   3.741008609660977*^9}, 3.741010685866577*^9, {3.741010918641375*^9, 
   3.741010923360004*^9}, {3.7410109534685583`*^9, 3.7410109637254057`*^9}, {
   3.7413624896171827`*^9, 3.741362489724896*^9}, 3.741362626338485*^9, {
   3.741362888562646*^9, 3.741362889910142*^9}, {3.741362939085125*^9, 
   3.7413629426607533`*^9}, {3.741363071635322*^9, 3.74136307198392*^9}, {
   3.741363128756012*^9, 3.741363129756914*^9}, 3.741363193116847*^9, 
   3.741363228835424*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"temp0", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"temp0", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "3"}], "]"}], "]"}], "-", 
          RowBox[{"temp0", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "4"}], "]"}], "]"}]}], 
         RowBox[{"temp0", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "3"}], "]"}], "]"}]]}], "}"}], "]"}], 
     RowBox[{"(*", 
      RowBox[{",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"temp1", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"temp1", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "3"}], "]"}], "]"}], "-", 
            RowBox[{"temp1", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "4"}], "]"}], "]"}]}], 
           RowBox[{"temp1", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "3"}], "]"}], "]"}]]}], "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"temp2", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"temp2", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "3"}], "]"}], "]"}], "-", 
            RowBox[{"temp2", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "4"}], "]"}], "]"}]}], 
           RowBox[{"temp2", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "3"}], "]"}], "]"}]]}], "}"}], "]"}]}], 
      "*)"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7410107968006144`*^9, 3.741010894231995*^9}, {
   3.7413625572817297`*^9, 3.7413625913447733`*^9}, {3.7413626947090673`*^9, 
   3.741362726018415*^9}, {3.741362765531601*^9, 3.741362773292499*^9}, 
   3.741362869821067*^9, 3.741362917017488*^9, {3.741362959015592*^9, 
   3.741362988199677*^9}, {3.741363030733807*^9, 3.7413630394311028`*^9}, {
   3.741368789830722*^9, 3.741368797159396*^9}, {3.7413690380163927`*^9, 
   3.741369051244643*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., -0.6445220261294238}, {6., -0.24139100549903242`}, {
      8., -0.0625237158815376}, {10., 0.03677089875949648}, {12., 
      0.0971156949984583}, {14., 0.13531903059206823`}, {16., 
      0.15981872808622485`}, {18., 0.17536065285141691`}, {20., 
      0.1848339375053536}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.7500000000000004`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{4., 20.}, {-0.6445220261294238, 0.1848339375053536}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.741363085030623*^9, 3.741363107031221*^9}, 
   3.741363178398204*^9, 3.741363214316081*^9, 3.74136324488803*^9, 
   3.741368290703794*^9, 3.741368841224502*^9, {3.7413690310429773`*^9, 
   3.7413690519899883`*^9}, 3.7413692636373367`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Allele Frequency", "Subsection",
 CellChangeTimes->{{3.74136844321305*^9, 3.741368446077063*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFComp", "[", 
   RowBox[{"\[Gamma]0in_", ",", "\[Beta]in_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "PARS"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PARS", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r0", "\[Rule]", "0.2"}], ",", 
        RowBox[{"\[Gamma]0", "\[Rule]", "\[Gamma]0in"}], ",", 
        RowBox[{"s", "\[Rule]", "0.9"}], ",", 
        RowBox[{"\[Sigma]", "\[Rule]", "0.0"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", "\[Beta]in"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]0in", ",", "\[Beta]in", ",", 
        RowBox[{"AFEquDetDI", "[", "PARS", "]"}], ",", 
        RowBox[{"AFStatMeanDI", "[", "PARS", "]"}]}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.741007022767549*^9, 3.741007147336404*^9}, {
   3.741013784836713*^9, 3.7410137858115396`*^9}, 3.7413630149022827`*^9, {
   3.74136307482302*^9, 3.741363096828137*^9}, {3.741368025509377*^9, 
   3.741368031953575*^9}, {3.741368448733941*^9, 3.7413684557818213`*^9}, 
   3.741369059579702*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AFComp", "[", 
      RowBox[{"\[Gamma]", ",", "0.05"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.741362688768346*^9, 3.7413627012341633`*^9}, {
  3.741362903256435*^9, 3.7413629351659727`*^9}, {3.7413630678773403`*^9, 
  3.7413630688401833`*^9}, {3.7413631206188173`*^9, 3.741363124988085*^9}, {
  3.741368461171136*^9, 3.74136846136133*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AFComp", "[", 
      RowBox[{"\[Gamma]", ",", "0.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7410071502900467`*^9, 3.741007216057193*^9}, {
   3.7410073051430273`*^9, 3.7410073092303057`*^9}, {3.741008574109131*^9, 
   3.741008609660977*^9}, 3.741010685866577*^9, {3.741010918641375*^9, 
   3.741010923360004*^9}, 3.74101381046441*^9, {3.741362624757495*^9, 
   3.741362625064357*^9}, 3.741362693277239*^9, {3.7413628816664057`*^9, 
   3.741362882972231*^9}, {3.741362937090085*^9, 3.7413629378588333`*^9}, {
   3.7413630701205473`*^9, 3.7413630702321653`*^9}, {3.741363126289187*^9, 
   3.741363127236106*^9}, 3.7413631917346973`*^9, {3.74136846354741*^9, 
   3.741368463721691*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AFComp", "[", 
      RowBox[{"\[Gamma]", ",", "5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7410071502900467`*^9, 3.741007216057193*^9}, {
   3.7410073051430273`*^9, 3.7410073092303057`*^9}, {3.741008574109131*^9, 
   3.741008609660977*^9}, 3.741010685866577*^9, {3.741010918641375*^9, 
   3.741010923360004*^9}, {3.7410109534685583`*^9, 3.7410109637254057`*^9}, {
   3.7413624896171827`*^9, 3.741362489724896*^9}, 3.741362626338485*^9, {
   3.741362888562646*^9, 3.741362889910142*^9}, {3.741362939085125*^9, 
   3.7413629426607533`*^9}, {3.741363071635322*^9, 3.74136307198392*^9}, {
   3.741363128756012*^9, 3.741363129756914*^9}, 3.741363193116847*^9, 
   3.741363228835424*^9, {3.7413684661233263`*^9, 3.741368466241693*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp0", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"temp0", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp1", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"temp1", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp2", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"temp2", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7410107968006144`*^9, 3.741010894231995*^9}, {
   3.7413625572817297`*^9, 3.7413625913447733`*^9}, {3.7413626947090673`*^9, 
   3.741362726018415*^9}, {3.741362765531601*^9, 3.741362773292499*^9}, 
   3.741362869821067*^9, 3.741362917017488*^9, {3.741362959015592*^9, 
   3.741362988199677*^9}, {3.741363030733807*^9, 3.7413630394311028`*^9}, {
   3.7413688150795307`*^9, 3.741368822969729*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., 0.36882070428797936`}, {6., 0.4010725202376155}, {8., 
      0.4221640583587488}, {10., 0.4369341735465542}, {12., 
      0.4481515781099223}, {14., 0.45705721600602667`}, {16., 
      0.464308580449287}, {18., 0.47030213309522256`}, {20., 
      0.4752996774923663}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., 0.36882070428797936`}, {6., 0.4010725202376155}, {8., 
      0.4221640583587488}, {10., 0.4369341735465542}, {12., 
      0.4481515781099223}, {14., 0.45705721600602667`}, {16., 
      0.464308580449287}, {18., 0.47030213309522256`}, {20., 
      0.4752996774923663}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., 0.36882070428797936`}, {6., 0.4010725202376155}, {8., 
      0.4221640583587488}, {10., 0.4369341735465542}, {12., 
      0.4481515781099223}, {14., 0.45705721600602667`}, {16., 
      0.464308580449287}, {18., 0.47030213309522256`}, {20., 
      0.4752996774923663}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.7500000000000004`, 0.36349675562775996`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{4., 20.}, {0.36882070428797936`, 0.4752996774923663}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.741363085030623*^9, 3.741363107031221*^9}, 
   3.741363178398204*^9, 3.741363214316081*^9, 3.74136324488803*^9, 
   3.741368290703794*^9, 3.741368474767166*^9, 3.741368841453761*^9, 
   3.741369263819332*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Density-dependent Selection", "Title",
 CellChangeTimes->{{3.736769316749917*^9, 3.736769337320917*^9}, {
   3.740341018413444*^9, 3.740341020724524*^9}, 3.740498632752812*^9}],

Cell[CellGroupData[{

Cell["Constraints on r and k", "Chapter",
 CellChangeTimes->{{3.736771552111032*^9, 3.73677155695089*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"n2dd", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"n", "[", "i", "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"r", "[", "i", "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"n", "[", "1", "]"}], "+", 
             RowBox[{"n", "[", "2", "]"}]}], ")"}], 
           RowBox[{"\[Gamma]", "[", "i", "]"}]]}], ")"}]}]}], ")"}], "s"}], 
    "+", 
    FractionBox["m", "2"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.736765925081023*^9, 3.736765968986207*^9}, {
   3.7367693443706417`*^9, 3.7367693924500093`*^9}, {3.736769932406015*^9, 
   3.7367699337683477`*^9}, {3.736769981238819*^9, 3.736769986046405*^9}, {
   3.736770646279513*^9, 3.736770656450264*^9}, 3.736789373668709*^9, {
   3.736789431742051*^9, 3.736789432183392*^9}, {3.737216313274102*^9, 
   3.737216314687693*^9}, {3.737286572643139*^9, 3.7372865731233*^9}, 
   3.739736217808923*^9, {3.741003255383795*^9, 3.741003271513626*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalDelta]ndd", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"n2dd", "[", "i", "]"}], "-", 
   RowBox[{"n", "[", "i", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7367698566027803`*^9, 3.736769866368392*^9}, {
  3.736769919434391*^9, 3.736769920703907*^9}, {3.736789376404464*^9, 
  3.736789376762146*^9}, {3.741003275786007*^9, 3.741003278125442*^9}}],

Cell[TextData[{
 "We can define a trade-off such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"r", "[", "i", "]"}], 
     SuperscriptBox[
      RowBox[{"\[Gamma]", "[", "i", "]"}], 
      RowBox[{"1", "/", "\[Beta]"}]]}], "=", "constant"}], 
   TraditionalForm]]],
 ".  If we have a baseline genotype i=0 with growth rate of r[0] and growth \
limit of \[Gamma][0] then a genotype i with a growth rate r[i] must have a \
growth limit of:"
}], "Text",
 CellChangeTimes->{{3.7367745508759623`*^9, 3.736774585211945*^9}, {
  3.736774760133833*^9, 3.736774831976907*^9}, {3.7367748981682367`*^9, 
  3.7367748996205673`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r0", " ", 
       SuperscriptBox["\[Gamma]0", 
        FractionBox["1", "\[Beta]"]]}], "\[Equal]", 
      RowBox[{
       RowBox[{"r", "[", "i", "]"}], 
       SuperscriptBox[
        RowBox[{"\[Gamma]", "[", "i", "]"}], 
        FractionBox["1", "\[Beta]"]]}]}], "}"}], ",", 
    RowBox[{"\[Gamma]", "[", "i", "]"}]}], "]"}], "//", "Simplify"}]], "Input",\

 CellChangeTimes->{{3.736774833332465*^9, 3.736774905706986*^9}, {
  3.740497827305434*^9, 3.740497831749529*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Solve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,11,1,19061674018732901241,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.73720923967065*^9, 3.737209285065509*^9, 3.73720984639268*^9, 
   3.737216348493292*^9, 3.7372876884886723`*^9, {3.737727573855577*^9, 
   3.737727600870048*^9}, 3.7377286089505053`*^9, 3.738333707329136*^9, 
   3.738337838481797*^9, 3.738409993585822*^9, 3.739101238305798*^9, 
   3.7391013349804068`*^9, 3.7391014549743843`*^9, 3.7391816973047543`*^9, 
   3.739199011008925*^9, 3.739736221012051*^9, 3.7404978329553843`*^9, 
   3.741002188980131*^9, 3.741002226865788*^9, 3.7410032897324944`*^9, 
   3.7413611194961987`*^9, 3.7413613558430634`*^9, 3.741368555343042*^9, 
   3.741711958777688*^9, 3.741711993481841*^9, 3.741712749953032*^9, 
   3.741713401369762*^9, 3.741716780333165*^9, 3.741716814991733*^9, 
   3.741716866248547*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Gamma]", "[", "i", "]"}], "\[Rule]", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"r0", " ", 
        SuperscriptBox["\[Gamma]0", 
         FractionBox["1", "\[Beta]"]]}], 
       RowBox[{"r", "[", "i", "]"}]], ")"}], "\[Beta]"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.736774878935854*^9, 3.736774906785221*^9}, 
   3.73678938469925*^9, 3.7367894676323767`*^9, 3.7368527074660788`*^9, 
   3.736861281920343*^9, 3.736861857762003*^9, 3.736878299432516*^9, 
   3.736878339895018*^9, 3.73720923968006*^9, 3.737209285080205*^9, 
   3.73720984640735*^9, 3.737216348504504*^9, 3.737287688497654*^9, {
   3.737727573864373*^9, 3.73772760087924*^9}, 3.7377286089698467`*^9, 
   3.738333707357613*^9, 3.7383378384945517`*^9, 3.738409993648481*^9, 
   3.739101238330316*^9, 3.73910133499653*^9, 3.739101454988789*^9, 
   3.7391816973142776`*^9, 3.73919901102389*^9, 3.7397362210358877`*^9, 
   3.740497832981724*^9, 3.741002189031847*^9, 3.741002226876008*^9, 
   3.741003289742173*^9, 3.741361119518868*^9, 3.741361355856707*^9, 
   3.741368555353842*^9, 3.7417119588019867`*^9, 3.74171199349677*^9, 
   3.7417127499665213`*^9, 3.741713401386416*^9, 3.7417167803478317`*^9, 
   3.741716815004781*^9, 3.74171686626195*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "tOffSub", "]"}]], "Input",
 CellChangeTimes->{{3.736774953626192*^9, 3.736774956831748*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tOffSub", "[", "i_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Gamma]", "[", "i", "]"}], "\[Rule]", 
       RowBox[{"\[Gamma]0", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"r0", " "}], 
           RowBox[{"r", "[", "i", "]"}]], ")"}], "\[Beta]"]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"r", "[", "1", "]"}], "\[Rule]", "r0"}], ",", 
        RowBox[{
         RowBox[{"r", "[", "2", "]"}], "\[Rule]", 
         RowBox[{"r0", "+", "\[Sigma]"}]}]}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"r", "[", "1", "]"}], "\[Rule]", "r0"}], ",", 
     RowBox[{
      RowBox[{"r", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"r0", "+", "\[Sigma]"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.736774449500852*^9, 3.7367745156268997`*^9}, {
  3.736774915064961*^9, 3.7367749604953012`*^9}, {3.740497837630344*^9, 
  3.740497840069415*^9}, {3.741002388320406*^9, 3.741002409171152*^9}, {
  3.741002462257496*^9, 3.7410025036560507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]", "[", "0", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r0", "\[Rule]", "0.1"}], ",", 
        RowBox[{"\[Gamma]0", "\[Rule]", "20"}], ",", 
        RowBox[{
         RowBox[{"r", "[", "i", "]"}], "\[Rule]", "0.2"}]}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"\[Gamma]0", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r0", " "}], 
          RowBox[{"r", "[", "i", "]"}]], ")"}], "\[Beta]"]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r0", "\[Rule]", "0.1"}], ",", 
        RowBox[{"\[Gamma]0", "\[Rule]", "20"}], ",", 
        RowBox[{
         RowBox[{"r", "[", "i", "]"}], "\[Rule]", "0.11"}]}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"\[Gamma]0", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r0", " "}], 
          RowBox[{"r", "[", "i", "]"}]], ")"}], "\[Beta]"]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r0", "\[Rule]", "0.1"}], ",", 
        RowBox[{"\[Gamma]0", "\[Rule]", "20"}], ",", 
        RowBox[{
         RowBox[{"r", "[", "i", "]"}], "\[Rule]", "0.15"}]}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"\[Gamma]0", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"r0", " "}], 
          RowBox[{"r", "[", "i", "]"}]], ")"}], "\[Beta]"]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r0", "\[Rule]", "0.1"}], ",", 
        RowBox[{"\[Gamma]0", "\[Rule]", "20"}], ",", 
        RowBox[{
         RowBox[{"r", "[", "i", "]"}], "\[Rule]", "0.2"}]}], "}"}]}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}], ",", 
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Blue", "}"}], ",", 
      RowBox[{"{", "Green", "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Beta]\>\"", ",", "\"\<\[Gamma][i]\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.736775092461615*^9, 3.73677525702872*^9}, {
  3.740497843537519*^9, 3.740497876677565*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwV0ns01HkYBvCpNq0kJdkWbSiXSuT7JbKj9y2VIotoJ1LWCJsw695FDk0t
xm6plFxaUi4dSpcN2VauKSvZIcnESmJG9EsldjD2t3+85zmf8/z5vHp8wU6/
mRwOx4m9/1PbV7PMl+8CwuWLNYTTFB/ypnbHBOyCvxaJmr1Yh+3ok6cGecKW
TduS1rF+o+WxzPdbPvzGy5mWKSjafmHkm7olCM67P2BcWEcd9ImcMDkEMp3y
rm+mKC7KjlXc0P0ZDqifeV8hp/jKWrU2Ues81A9Xj3wcpSjZqROVL8iDXP0u
vay3FOOM5gfz00tAoDSePf6KYuE05Mx99DtMbFg3T9RBUUvsFRZjVgE5g9t6
3JrZ/k6BZabNAxjtHepvqaPYY1u0Vra7Bj5KeesTKiiW5eYeq5lTD41OKo/D
blJcqmZuF5bYANb3WwMXFFB8FDLCNYVGKAywCpVmUZzRvq2kqqEJRBX2n0PP
UZy9oaojxe4p+B18dMZMRDG/ySKzVN4C/u/tc43jKKor3JVSuGKYecBaWxxF
UXflqWRBeitcE01Jy4IoprrzhoaZNrj4fFRLzKf4dFZQEs+sHbaaGmVkelAs
Lk7HhqTn0Os3Gp/rTNHlhbqF/pMO0E+zN9y9lWLa9NWNwtWd8Hd728IdXIp2
hg2rhEIJ6C/0GQwnFEtbLFxC6l7CPuaa3/aVFJsi/jjtrdsNjYpgm33LKF7L
+lWF6/cP/Lvqg56uJsXI3uhbEtceuG0e2a6hSjEg3DIwS9EDjZLod9tnsXs+
XFItzn4FsU0RyqvlBPvOf2nwy3e9YGMq4ju9J1jpV/VZQ94LzQmJbbn9BGPG
LvkvyngNoQE9Fle6CKooJb5Ote8Dad7lnjetBI+1pymSZX0gGfMdFjcS1C8Q
JOxMfAPWQbzxkWqCFz+5Lc2y6IfDNW/d3MsJfpi1z3XPs3544FE6+4cSgktT
Is5eEg5AScPj7pI8gibdN0N3GUqhQe9AfGEWwWCTu5Uv66XgcOfqLfE5gnFj
9UsGwmQg91HM2yQiGHVickGAxiC8Pu1r7BFP0PYUaAbWDkK0ZuDm0miCVhcd
kriCt9C22cR6SwjBxfuPZpxQG4KrnZVdR/wI1hWXlzv/OQQjplOisT0EeWXa
kSnewyCVfPbWciOoU7M1O0cxDAWOR8eDHQje2R7bTovewRJ5c5ryRoJrzkmK
uDsY4OdxPR2sCV7w4txTcWZgzFB713LWHEODh52uDISvd3KZtCLYVh7Sc4jH
gOf8YvsbrGO6Zyy+y2fAcb+7jTrrxpXGsWsOM2Cwwtms05Lgj1URLt/kM3BC
TcoLpATFSel7hwsZOO5mtdeONdetMvB+EQOq6p18HdYL+uec9LzFwMTE14Jm
QrBMJfPehfsM3BYIkwlrJV61vlorA8ttJlvlawn+pNtv1v2MAZ3W492trDtl
c22vdzAQJfGSFbO+HuPOc+xmIN5KhePN2j13IDlBxoC/sqt5rRn7LwfnpX8/
xMAL5fANWayNLc3zDRgGvoqQOkaynmw4UlX7iYHVwicBRqz9z2Q/OTvGQIah
bRSHdYtnXaePnAEVc87JF6YEbVbIBtZOMdB4WTP1Nusrw6qj09MMrDgUdyWZ
9X8kcEVO
      "]]}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwVjnk4lAkcx6dsqRQ2lZKRJddrxhwvS5b9/Tyz20Z2QzKOpEjKMTZnCaum
wrbVKB3j7FHJnWNzlJVbWSIi4ZkVmmks+3YSOVZ/fJ/P83k+/3y/8Q528l1K
o9F+XtwXbvbZUOHj7QCtBXa3x+dIbObPuUb77YFvdftGbBc9xH50JjnQHeJS
LxncmSXxlYbbFp/vvEFHfr7mwGcSrb8y8En+MRB0PcXE808kRgQcCP/MOAYx
nZKZ+vckqmXGzhdpn4WtgrmoDDmJLy3WNCRoXAENU/c3B3tIHHDSjMgOvg0+
zm9sn+aSGGegHOQtvgs7ypI9Ik+SmLMAN1Y9+hPykzJDLNxJ1OjaGxLNug8j
9c24wFrsZXfMUi0fQor6WMLYChKHrPPZctd6ePLYUHlMwsWKrKyYesUm+JRs
3qtYzkW6CocXktACgxYeUlMRFx8J3lqZQCv0PDU6Fe/HxSW9O+7WtrRBubD7
pMSGi8u+r+0T8TrAT8tt2prOxew209TymU4wEBVHdX/k4Np55+Uiqy4gM2gX
3Z5yUNvowrlgcTcUqSVY6+ZxMNmZPz5BPYOM27KgT0IOdigEJvJZvZBzUyEg
bz8HCwrE2JL4HOqEhsxiSw46vFhrqtPeB8fill5OUOfgtYVbNkLjfjiOyu11
b9nI028hhMIB8PcSuMy2sbG809RB0DgI5jm/HZ3MY2Nb2IOLXtoSeL1145v9
Z9mYm3Zeycr3H1AeDCNPHmRj+HBkyYDjEGi6KBEXeWz0CzXzT5sfgrSVuq6a
2my0bt5Y15X5EkASMpEyz8LRKyv0/vhlGG4+EM+pVbKwxrd2ct3MMATTA2VB
oSyMnko/pJYyAg/ts+jjJAuVlieMJP80CkodmywyKBOM6b02f04+CjkKQhfv
YhPUuRMc75TwCjp2xlUNh5jg9Q+76WmmUjj1brqslG2C7xT2OXr0SKFnk50g
9D0T6aKwS+lCGQxXz8anlDCRISk+ukf/NTTKgx7cCGNiEONezWDTa8hVPRPj
tI2JcVNNG2UhcpgMmLU/M83AiNOzqn7rxmDfllubI2sYaH0BNvg3jEGkm5Z8
IZaB5tftEq2C/4VT9zcZbbNh4PqDJ1JOq4yDsZ7X/q9XMLCxoLJy11/joMgz
rE5pNUZ+xeZwkdcEJJn5iUuTjFGzfnvmjfkJEEaVT7u5G2OZbWwvmf8f+LZ7
HflbyxiZlwfyrewp2NtPHC6UEXh1L61KaRcF/uo7dlZKCaTp6zX3O1Lg4a1l
3vCKwGeVgqFjfApWj34wfDFCYLRkyfp73hT8IMXwZUMEthoZxjKPU7AyUKXY
q4/Aw7VhDlrZFOjbeBRoPCawK1HsOZFDge1xWrb+IwKtdtf4V+dT8KTHOYfb
QqCqVPGMewkFFx6ubLFrIrBCKbXqajUFe+6mBp6oI3A5v05HpZuCyWcarpIq
An/VlrIkPRRc5p0fHKsksF++yrqwb/GfNPfIVAWBhdHO/J0SCrp/H0pXLSfQ
OUt2Ll5OwbpSSwGvlMCagNVil3EKhuiT5g4lBBqacbL1KAoct7ut8iwmcLYl
qrbhAwX1SesfRxQReCgps/3SFAUb1AX3hIUEdro39h+YoaCKHpQnKiDQcqtc
xp6jYMBlbU56PoE3J9Z8XFigoDTUsygvj8D/AeCWSfs=
      "]]}, 
    {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwVxX040wkcAPB1JKxw1HJeauf5zbwMY1w9bvp+O9freUs0XOVM6Lyt0HJR
6eGK5K0I4SaVXkjnKakuaxhz4ZTKeWt5WVuL9etF6STu7o/P8/maL/CP+IJC
oXj/5//Nw2mN4Xw/CNTF9sRZDrbzPgelRgVC/zP/qh2fOJjgpZgpjA0Bl7SM
nA0zHHxuFrwy/Fs+SB5igflHDnpoM8ML18WCZ6OOj/QdB4UxYfs+sZJB/7Jh
uekEB01Eh+bq6Edh9e7gjK4BDo6uXtKaaVYEghvUoLBGDg75WwirBRegIEZl
lRPHwTSmQRy/9BoMr1OaFNty8NI8VOp33IDFyULzpyoXNOvdnpDqdAe6373u
zTvrgpeuX3Qrc78HQybv05795IIjHjVsdVALRPEjV7eYu2BjVdXBlkVtkDNb
m6Lod0ZLQ2fPhEwZiHlzA+FlztgR/4brCPchXTW1pyrYGRf0bbwmkXWBwVQi
Wlo648I1kv58zx4YDO7tKBpjY3WXa9nNmQcwyln/8cM5NhrPBejkc3thakVP
aEg0G+m2udmC0kfw5l6QqIPFxsIA3qSGfAyKhQdTBGNO2KMVm8Vz6gN6nM/h
kSQnrK0tRVnW32ChyNa+Oe+IfgPGrlbd/fBVd+f98VOOWDx/fm26/SB88NJ9
10B3RE9rmV16+hAMxs6bbKh3wJsPXP3ipcOg+tl3pm2zA3Yl/ZEXSpfDkpgD
fS5PWXi5PIfKjXgG9buaKrcls3Df2P76oS0joFj2vqKTxsKoRLfo8rkRoEeM
5ibW2aNHu2lzr2gU3k43N+71sUdFkS7jhM8YyPVeSYdUdiiOkHxYOjMGKWYW
LuUZdpg6XRFpcmYc/IPfLg+wtUOqTuZ44QYFkKN6h2/LbPFgX/FctloBfynq
Cp/H2aLVRcEx/8znIK1LCNNZboslU1sty12VMLHf4BvjOzb4Vmvnlh+fKIG9
lXY5d5cNWuYnnaxIV4GFT6TaRs8GWfLf9wZavwDPSA1Fp4GJcawG8XDbC6Bc
qVt7MZyJadNtpqoENfympD4ULWaiMGPWKGrpSzhf4J12/K41euQCLbr1JbSv
1Ex9irTGVSWbs7iCCSgbeP3Ybak1LtuVcibDcBJMuLmtxh0MlNbeuuXbNAl7
Jq8wrgoZyGs035cfqgGZ0FfebM9Ai5b1oso5DVR0kmne4wRe33Soj1PzCk4a
jQ3/WUSgw6mhGq4XCVJuvTjZh8DT2ym3qb4kFK+UpHG9CaRYM9oHt5DQ8w91
G8WLwMe34keSeSSYKgPdMzcRmCpfsKyBT8KFpwXqku8JvG9rc8jhFxKMjpwf
bXIncLckyW9FNQkTNH02jUlgb1bpDs0lEgo7k3jDDAK5W8XRd2tIOMGcLqgi
CDRSLvo1pJ4Egr0GnawIbKSW3T59lwRLrYYjmywJ1OE1Wxk+IuE7xdriIyYE
7qErneRPSNj+pIzcaEzgoFrf42o/CS9GZkKMviTwamoA7wc5CbnVrdEiAwID
qlTZx9QkPDweGi/WI1Acs7h02yQJlZrmnUd1CbRxc65mkCS42tP5PosInJUd
kLROkWBT0nlWrk1gZIGo++Q0CcJkmrxai8AHIdLBsBkS+EVBDoIvCHQn1Cr2
ZxLyZPl5qxYQeE6z5P38PAk3VE3aFAqB/wIQokQK
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta]\"", TraditionalForm], 
    FormBox["\"\[Gamma][i]\"", TraditionalForm]},
  AxesOrigin->{0, 10.000000141317152`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.001, 1}, {10.000000141317152`, 19.998093848381824`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7367751462127113`*^9, 3.736775194531047*^9, {3.7367752357612467`*^9, 
   3.736775258245846*^9}, 3.73678938484503*^9, 3.736789467793418*^9, 
   3.736852707880163*^9, 3.736861282059434*^9, 3.736861857909512*^9, 
   3.736878299634001*^9, 3.736878340276802*^9, 3.7372092402530317`*^9, 
   3.737209285216797*^9, 3.737209846666542*^9, 3.737216353873115*^9, 
   3.7372876886266336`*^9, {3.73772757399185*^9, 3.737727601042149*^9}, 
   3.737728614967136*^9, 3.7383337077233753`*^9, 3.7383378387482233`*^9, 
   3.738409994040873*^9, 3.739101238449088*^9, 3.739101335192993*^9, 
   3.7391014552101793`*^9, 3.739181697462027*^9, 3.739199011163254*^9, 
   3.739736225997035*^9, 3.740497877370329*^9, 3.7410021892701674`*^9, 
   3.741002227055572*^9, 3.741002417169663*^9, 3.741361119893773*^9, 
   3.741361356060563*^9, 3.741368555535211*^9, 3.7417119590562763`*^9, 
   3.741711993605322*^9, 3.741712750039537*^9, 3.7417134014888906`*^9, 
   3.7417167806090937`*^9, 3.741716815183804*^9, 3.741716866445408*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tradeOffPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Gamma]0", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"r0", " "}], "x"], ")"}], "\[Beta]"]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r0", "\[Rule]", "0.1"}], ",", 
         RowBox[{"\[Gamma]0", "\[Rule]", "20"}], ",", 
         RowBox[{"\[Beta]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"\[Gamma]0", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"r0", " "}], "x"], ")"}], "\[Beta]"]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r0", "\[Rule]", "0.1"}], ",", 
         RowBox[{"\[Gamma]0", "\[Rule]", "20"}], ",", 
         RowBox[{"\[Beta]", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"\[Gamma]0", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"r0", " "}], "x"], ")"}], "\[Beta]"]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r0", "\[Rule]", "0.1"}], ",", 
         RowBox[{"\[Gamma]0", "\[Rule]", "20"}], ",", 
         RowBox[{"\[Beta]", "\[Rule]", "0.9"}]}], "}"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0.1", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Blue", ",", "Green"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.737728627073009*^9, 3.737728711799057*^9}, {
  3.7377287487340307`*^9, 3.737728782712844*^9}, {3.738333771528285*^9, 
  3.738333771787286*^9}, {3.740497881853381*^9, 3.740497912365388*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwVzX9YywkcB/CQO1KdJz0cF2c0Tpnvd1vmcabPpxoqTKrHtRQi6vxI1g+T
rVCHUjySLsw91w/Xo7jk1z1tl1P6sdL6ZZtau1qopqlvyTo6a7f74/28n9c/
7zdt79HA/VNtbGy2WvN/L38sNly7VgEtXppPFgsbueXlr+6VVoC5+ZYsd5KN
gXf6dfWVFXBd5nhllZmN4oKANlNvBbynY1rEBBvbL7rKtrvJwOn94DrVBzYm
RzVdmCmXgcd56W3jWzaqv3YhTujkoPpTd6hDxcbUk/KEkG+fgCZ7cjTiLhsX
PBzM4qZWwfDaeSvMEWz8LGyN5yifQe5E79VoOhsXeh6qLp9VB4XFg6FOoyw0
SONcupMU0PzvwfjMJyxcXxNsF/+0ERR7T2iX5bCQm1JoK+co4dHOiJDEgyxM
2li8PzW/BQaeMrhLNrCQZvS6GzraClxBp7cdnYXaz/2MLW7toLtyqq7RloUd
QpFIyH8BL5wvF9camGiKiUzsPKyC1RzaA9sWJg54nJvIK1TDO1AH1j1k4qLd
ub5ZtRroHq7xe3STiW5BOhet5SWcrtpeO/csE3coxUVRHp3AJzycVsQysb50
5viKYC3wZUkFFWFMdAhWKnmZXVBdF6L4zZeJeXskR3PKdOBTtsq9nsPEj5zI
n7nGvyEsQuG3wZWJx6/cEtJpPZCo27e838n6X/L2Ao2mh8/0llLBNCYeom7k
6yr1oEw8c3P5GInaAzwXVkAv/BG3KU76hkQB7fpIcU8vbPqYs79LQ2I1zprh
f/IV5BwvEyQqSORnC9PO2r+GYy2XWiVyEmt8TT7U7deQWFVTNHCXRH9veriI
9wZ43apj0/JJfH9kc9cN1Rso4jluC79K4k+TmVJjbB+Y7BOGFqaT+H1VTbV6
aj9MXuWLv0gm0VJ321t/uR/qfnSNio8jsYxZMn0eYwDWtEnd+NEknm7+lWGo
HIBzf3mvI3eR6Nl6P68v1ADOOxlEWhCJC23l0ZIhA4QMHcho9SPR/mRs9mrJ
WxBrC2vTkcS+HV6W+fMHYVLR4yjjkNgbOaMtr2QQnnPcBc8ZJNa/HOzz8TVC
9KqkOQJXEiuzkoK/em0EzT/+17d8Q6I6wea7hLh3UJKpMdvPIbGjOt/zy9lD
ILLrbODbkWj2WitjFwxBQ5eTJGgqiSzb5EunmMPgOydjJMhEYKB7d/GnpmE4
sMBuiUMfgTlpHnSHXRQs3uh4j6Eh8AOKRnL2ULD5TNiYUU1gkFkud9lHQVp4
CrfEaqdEn8CV0RQ8mfTUL7P6UlRgymYhBXxBxpHFKgIz/GM7089SoCpK+MW5
ncDTs+9kfVFGQamdMnBKM4H6JirkYjkF68Ma+U+VBGI623XuQwqOkJKAFKsn
p8hl9AoKPLIskeYmAsVjDQO8ZxRsDA9r//ScQJFmwCv1JQWFvPzKsQYCO7Ld
HWZpKdDHpzk/sHrNtqMd2ToKFpkcjgmtHq8fjynopYCkzV43qiAwrmK6tMpo
3Vc/dqLqCWxP8IvyG6Ygk3k/93erWawsVtsIBeOhWxbHWD1S4tygN1Fg+EHA
G6ojMCAqJCf6IwWirY3dd6wuWyrdPTJBwbJgTfJhqx31PW4iMwXnJWLXlVbH
SJeOWywUCLvkLcZaAv8DxYpduQ==
      "]]}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwV0Hk4lAkcwHFJS1SsjvVqGOOIdPGO2uqR30881lESnhqDamscG2JHU5Oj
WEeFqQyhzZN1lKhWtukYk2OGSDs2lHJMoskR8spGto3Z9o/v8/n/yzgY6R2k
rqam5ve1/7W8Fzd86ZIYTNw29KtUTLSvrHxz+4YY4jjLSyZnmOh9c1DRVC2G
nt5tL8c+MDGuyKttql8MpmYe7E9KJrafM6/abV0Fm3d9iDj0mIknQ+TpCyVV
IN3ZOF8gZGKHAW3DCYUEqLtJ0R1rmJgUK+Gx6DUQeOLBiGYUiZuUPjMfyRp4
YBu+V/swicPuYzGZLjUQv9QyV59DoqehUcKTiBooFtIP27FINBSfTLN/WAM5
bbf9HyKJt6cdC0z8aiF7NiG/Q5/E8c0czlG3OtDKsZmYrLJFQ9GIwD5JCsO3
dMmthC2u8EjlcTKkEDFvr6h+mS1++4YRmHFRChvZQXe89GxRS89vraJUCsJn
1ct5mrY4Hdb0JFYuBU0Rb3xwygbbzUo0JctlEC6qNQ17ZoPpWYGJW67LgF7E
vtd5wQa/cFuPbmqpBytWQOHxZTZo5BAmq9RphEa1UrgRsx6H86NpvTGPwa7n
o2nm2Frc1uCrfbTuCTgznz7ccGMN2p8q1pBsagGB5PcCixhrjHEpDUoqfArJ
ftMmC7irkTHqeIv9oRX0Py7iZV20wu4vg+t2WLeD8dvqh/QaS+zk8vlcz2dg
uM4yplbTEqeOcI51hT8HnU9qruqcVThkd/pzXnEHXLnfNTtSZ4HG+3NcBY9e
gDzYfK7UzgKtfRS0btVLeNTBIz6XmuOelriSELsuuLY/3H7O0hybbiycXu3b
DdrdWfdKHpjhYt+WFueMHnBdZFFV9oMZ5h2Ij8yuUEDQFXpj41tTnNnEybUf
fQXFO+t26yaY4vGsq1wLxmtoPHe3YImZKRqXv0tnMPpg5YW0riVtDAyjLhcq
qvvAfJzwehPHwO5gZxrp1Q/FVy3H/EkG+jF+nSh93Q/Bkz8//nPMBGWoo+Ue
+wZi6311JkpM0FPITU5dpITrlYmyeUEm2OA65USVKcH+9rbHr0xN0H27RSDf
+S3kRGaFNDTTcTLCo+fy87fQWEslavnTMWUuI380agC8xM6p74aMcau0Qdah
PgjtSz2G5AnGqGos296XOQgl0vjXZ+jGWGFbvuC7dUPgK/KnqcRGmPjXb+uG
q4dgPb9B1bzPCB1a/8gbYA9DQEqFMlVFQyMNSWj8+2HQYMvIhjIaLoqNEm6M
fwePUq1W/cKi4cAeRxVBjECXqP6433wa9nO02vLKR6AguXV98r2V2PRyZMDJ
dRRY93u0/w1aidWCGF9d5Si0zh9vTiFWYgdPzYoXPQbLDoZfDn1uiJ2yQgdN
vffwU0rBZF26Ic46bqliFr2HzYqDomk3QyQ1Tp5PsB2HvWdykt10DNF7TW/p
P/JxuJDYcGxrM4HZyXYWi/dRoPY+co+PgMCPyJ/IPkBBxp3NAo8MAn1mJRLa
IQoM+MNKp3QC9Y85ea8NpcDRRTlhd5bA8yHepzy4FKgfFp4xSCEwzT2q62wq
BfO8sWwgjsBEvZuCbyooOJacnJQbTmCfnGKdq6Tg2q6e8qwwAvEs03yFiAJ5
l+eH84cJnJsnqbIQU6DvF91zJpTAuL+bh5zrKRi6pmEexyGQ/2LIMeklBeR2
ZUJoAIGdwjWLdbop0J0yyQ32J/D7XZGdQgUFXYMGcg6bwOmm6SNF/RTMmdKF
P7IIjBYvyJeOUiC70i0I8CWwnecW4jZOAacXLvn7EEiSArJtgoKouvX1bG8C
J8qXNfdNUZC2LZPr50WgVwgrO3SGgqJHM59YuwisMMvfP/GZgu1P2i6zPAlc
0vfamj/79ZfLin2snQQeyTebVqkoOL2xzoG1g8D/ACAypTE=
      "]]}, 
    {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
dQn8Hze/ZcI=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.10000001836734694`, 2.5178508652099514`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.737728667663059*^9, 3.737728712203883*^9}, {
   3.737728749669858*^9, 3.737728783328648*^9}, 3.738333708070857*^9, 
   3.738333772279551*^9, 3.7383378388338337`*^9, 3.7384099941559153`*^9, 
   3.739101238538651*^9, 3.739101335266469*^9, 3.739101455310951*^9, 
   3.739181697560975*^9, 3.739199011239334*^9, 3.739736227960288*^9, 
   3.74049791375738*^9, 3.741002189352418*^9, 3.741002227134737*^9, 
   3.741002418334147*^9, 3.741361119993326*^9, 3.741361356143558*^9, 
   3.741368555613989*^9, 3.741711959138206*^9, 3.7417119936672173`*^9, 
   3.741712750102992*^9, 3.7417134015524063`*^9, 3.741716780683749*^9, 
   3.7417168152405767`*^9, 3.7417168665039043`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/ailenemacpherson/Documents/Output/tradeoff.gif\>\"", ",", 
    "tradeOffPlot", ",", 
    RowBox[{"ImageResolution", "\[Rule]", "700"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7383337161682863`*^9, 3.738333766341909*^9}, 
   3.7391012660371933`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Evolution in an infinite population", "Chapter",
 CellChangeTimes->{{3.736769400689321*^9, 3.736769407052925*^9}, {
  3.736790266413701*^9, 3.736790267890788*^9}, {3.736876093543746*^9, 
  3.7368761006539173`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ndd", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"n", "[", "i", "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"r", "[", "i", "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"n", "[", "1", "]"}], "+", 
             RowBox[{"n", "[", "2", "]"}]}], ")"}], 
           RowBox[{"\[Gamma]", "[", "i", "]"}]]}], ")"}]}]}], ")"}], "s"}], "/.", 
    RowBox[{"tOffSub", "[", "i", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.736765925081023*^9, 3.736765968986207*^9}, {
   3.7367693443706417`*^9, 3.7367693924500093`*^9}, {3.736769932406015*^9, 
   3.7367699337683477`*^9}, {3.736769981238819*^9, 3.736769986046405*^9}, {
   3.7367872510680656`*^9, 3.73678725133465*^9}, {3.7367875168379307`*^9, 
   3.7367875259575443`*^9}, {3.737208197378318*^9, 3.737208199487698*^9}, 
   3.7372084334095583`*^9, {3.7372158091090097`*^9, 3.7372158134527197`*^9}, {
   3.737215918775525*^9, 3.737215918953923*^9}, {3.737286537865602*^9, 
   3.737286538240115*^9}, {3.739198833626648*^9, 3.739198837154255*^9}, {
   3.739713696211993*^9, 3.739713697715673*^9}, {3.740335281879182*^9, 
   3.740335282052822*^9}, {3.740496804973815*^9, 3.74049680637307*^9}, {
   3.7404976182683773`*^9, 3.74049763446096*^9}, {3.741003386128779*^9, 
   3.741003393102458*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalDelta]ndd", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ndd", "[", "i", "]"}], "-", 
   RowBox[{"n", "[", "i", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7367698566027803`*^9, 3.736769866368392*^9}, {
  3.736769919434391*^9, 3.736769920703907*^9}, {3.736787522873136*^9, 
  3.736787531626338*^9}, {3.7403353666992397`*^9, 3.740335370135275*^9}, {
  3.74100338928866*^9, 3.741003408262474*^9}}],

Cell[CellGroupData[{

Cell["Equilibria", "Section",
 CellChangeTimes->{{3.741002289568174*^9, 3.741002304015357*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equDD", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalDelta]ndd", "[", "1", "]"}], "\[Equal]", "0"}], ",", 
      
      RowBox[{
       RowBox[{"\[CapitalDelta]ndd", "[", "2", "]"}], "\[Equal]", "0"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "[", "1", "]"}], ",", 
      RowBox[{"n", "[", "2", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740335383666864*^9, 3.740335406818509*^9}, {
  3.741002307445209*^9, 3.741002308555296*^9}, {3.741003330472468*^9, 
  3.7410033320603533`*^9}, {3.741003413879302*^9, 3.74100341508051*^9}, {
  3.7413612825345373`*^9, 3.741361297681489*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"n", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "[", "1", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "s", "+", 
          RowBox[{"r0", " ", "s"}]}], ")"}], " ", "\[Gamma]0"}], 
       RowBox[{"r0", " ", "s"}]]}], ",", 
     RowBox[{
      RowBox[{"n", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"n", "[", "2", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"\[Gamma]0", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["r0", 
           RowBox[{"r0", "+", "\[Sigma]"}]], ")"}], "\[Beta]"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "s", "+", 
          RowBox[{"r0", " ", "s"}], "+", 
          RowBox[{"s", " ", "\[Sigma]"}]}], ")"}]}], 
       RowBox[{"s", " ", 
        RowBox[{"(", 
         RowBox[{"r0", "+", "\[Sigma]"}], ")"}]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.740335386295274*^9, 3.740335407250853*^9}, 
   3.740339938680469*^9, 3.7403399879158907`*^9, {3.740496812642386*^9, 
   3.740496819450692*^9}, 3.7404976423939857`*^9, {3.7404979203834133`*^9, 
   3.740497929271175*^9}, 3.74100219493845*^9, 3.74100222830702*^9, {
   3.741002425325985*^9, 3.741002444867185*^9}, {3.741002512833214*^9, 
   3.7410025316476707`*^9}, 3.741003383277493*^9, 3.741003415566532*^9, 
   3.741361146910892*^9, {3.7413613505966787`*^9, 3.741361360871862*^9}, 
   3.74136855573455*^9, 3.741711959254987*^9, 3.7417119937592363`*^9, 
   3.741712750192543*^9, 3.7417134016486588`*^9, 3.741716780807081*^9, 
   3.74171681534866*^9, 3.741716866600195*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EquSubDetDD", "[", "pars_", "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"n", "[", "1", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "s", "+", 
           RowBox[{"r0", " ", "s"}]}], ")"}], " ", "\[Gamma]0"}], 
        RowBox[{"r0", " ", "s"}]]}], ",", 
      RowBox[{
       RowBox[{"n", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}], "/.", 
    "pars"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.741002314812764*^9, 3.741002346889638*^9}, 
   3.741002543400772*^9, {3.741003434548292*^9, 3.741003434970867*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotEquDetDD", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"n", "[", "1", "]"}], "+", 
     RowBox[{"n", "[", "2", "]"}]}], ")"}], "/.", 
   RowBox[{"EquSubDetDD", "[", "pars", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7410066371388397`*^9, 3.741006662741503*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFEquDetDD", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    FractionBox[
     RowBox[{"n", "[", "1", "]"}], 
     RowBox[{
      RowBox[{"n", "[", "1", "]"}], "+", 
      RowBox[{"n", "[", "2", "]"}]}]], ")"}], "/.", 
   RowBox[{"EquSubDetDD", "[", "pars", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7410066371388397`*^9, 3.7410066479094763`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Dynamics", "Section",
 CellChangeTimes->{{3.737208042408675*^9, 3.737208044763852*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nDynDetDD", "[", 
   RowBox[{"pars_", ",", "n0_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", "n0"}], "]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"t", "=", "1"}], ",", 
       RowBox[{"t", "\[LessEqual]", "tmax"}], ",", 
       RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"out", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"ndd", "[", "1", "]"}], ",", 
               RowBox[{"ndd", "[", "2", "]"}]}], "}"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"r", "[", "1", "]"}], "\[Rule]", "r0"}], ",", 
               RowBox[{
                RowBox[{"r", "[", "2", "]"}], "\[Rule]", 
                RowBox[{"r0", "+", "\[Sigma]"}]}]}], "}"}]}], "/.", "pars"}], 
           "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"n", "[", "1", "]"}], "\[Rule]", 
              RowBox[{"out", "[", 
               RowBox[{"[", 
                RowBox[{"t", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"n", "[", "2", "]"}], "\[Rule]", 
              RowBox[{"out", "[", 
               RowBox[{"[", 
                RowBox[{"t", ",", "3"}], "]"}], "]"}]}]}], "}"}]}]}], "]"}], "/.",
         "pars"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
      "out"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.737208057755501*^9, 3.7372082510886393`*^9}, {
  3.737287454408121*^9, 3.737287454899273*^9}, {3.7391000586313057`*^9, 
  3.739100058835929*^9}, {3.740335439585185*^9, 3.740335453475708*^9}, {
  3.740335505001142*^9, 3.740335509867734*^9}, {3.740497668818448*^9, 
  3.740497679323032*^9}, {3.7404977905337143`*^9, 3.740497819443193*^9}, {
  3.741003442372301*^9, 3.741003442784214*^9}, {3.741003509063217*^9, 
  3.741003510566848*^9}, {3.741004438872592*^9, 3.741004439087523*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"temp", "=", 
   RowBox[{"nDynDetDD", "[", 
    RowBox[{"test", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", "tmaxP"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "tmaxN"}], ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "tmaxN"}], ",", "2"}], "]"}], "]"}], "+", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "tmaxN"}], ",", "3"}], "]"}], "]"}]}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
         FractionBox[
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "2"}], "]"}], "]"}], 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"temp", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "3"}], "]"}], "]"}]}]]}], "}"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7372081816857*^9, 3.7372081918625927`*^9}, {
  3.7372082762931004`*^9, 3.7372082935085077`*^9}, {3.7372084707969847`*^9, 
  3.737208492311429*^9}, {3.737208544201949*^9, 3.737208558047208*^9}, {
  3.737216018745685*^9, 3.73721605424275*^9}, {3.739020511040214*^9, 
  3.739020521270797*^9}, {3.7391000992205687`*^9, 3.7391001025689507`*^9}, {
  3.7410034820229816`*^9, 3.74100350060504*^9}, {3.741004453257821*^9, 
  3.741004453429551*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[0.01388888888888889], AbsoluteThickness[1.6],
          LineBox[CompressedData["
1:eJxVyw9M1GUcx/EfjKAlp3L8uQsQCJAIUMELgTsPPnfIAR4H9/8ucbgJpDEk
ETplNL12WFtAKxzpzObZItA5UNZgFAahddAf1LFKI7qWeZopcPzRRoXl+n2f
1rM9e/ba+/k8tfNFfaUvx3EV/9xH7//Pavz7zuY4wzdMxfsH8eaguCbw+TFA
yPtxfJ7ZKhrxDQbtvmm+v/3UAjkE5YP67mOTIbzFmOpvTo3uC+UdiYMVGVMC
RxjvGAxkhCw6FSLesSg70b5Y5yXHQ62VxTa0iXknoP3uCu+9+Cd5JyJIp/lQ
c5qchIG/dIO5MeG8U9DzR6333dfJ6/HqleiT+JWcil2Ta36OkEfwTsNXyZfv
xb5G3gjv8z4peaNkCcYuNopf8Ink/SyOpHne3y0hp0NldN1auYO8CV+4W74L
O0zOQJwr8tukD8iZiE5ade2XEXIW3Hv6lsYnyVLUz1grKrxkGe6e/1gn9FvD
ezN6u+ekWSFkOVRn0h6uiyVngwteGShbT85BeeP2A6cyyUDil72C4wredqB6
7hO5uZC6AnP7Jb4+WuoKiJYSOodM1JVoeavJ3ruNuhKj0s7mxTLquQiccSw7
d1LPxYTvb5+NVVLfgoH2+oVXdlPfAuk7HXHXq6jnYbp8bPSHaup5sAXeOHis
hroKJ/2XVWF7qaswUxIwXFZLPR/3S2WWhn3U8yGHeF91HfUCPPB0tcnrqRdg
vuimzUvmCjEv+1rS8hL1Qiy0jRcF2ahvxe3ZRZeDbN+Ky2XWHA/ravhlh81K
91NXIz9K7XKQuSIon5DsGWG9CMtPXyr+nXUN4sPmOxIOUNcgUnjVXkzmitHf
eta1l/VinNZYlG+wXoLE0nMnOlkvQc/t5qoLrGvReG5V8hUytGjddFT9E/uv
hbkrNWmaPKzFmyPDoiW216F37ffP+TXQXofHRvUpArJdh+l+50gIeVgHj9i/
MILM6XEo+cjNGLbXwyz3G1jL9no4W+zuZ9heD5stu3Yd2xsQfna1I5XtDejq
cCdI2N6AiVBhdTrbG6Af8uzIYHsj3uv/VJDF9kbUXa85JGV7I+LubLsgY3sj
Xh66NL6Z7U1QNd0akLO9CRuE0U3ZbG9CQHrAxhy2N6Gz9W0XM2eG5nx6Adje
jNLAiT5muxmVf86HKtjejPLDF3cxcxZ89CCqmxkWrLjqvMNstyBYdCZKyfYW
GMqr1MycFaXjnlpmWCG68bCN2W6Fe9DW89/eipgar+uR/waknovh
          
          "]]}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 3.8315790594048154`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Medium,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 99.}, {4., 7.368418811903695}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[0.011111111111111112`], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1:eJxd0kkO3jQYBmDDimUWLFiwCAghhBAK80zNWAptSQdKoaV155mGeQYfIUfw
EXIEHyE3wEfIhjWIQUJ5/k306PXn13H+hy7ePX7l3hDCH/eE8Pdz/2sH/n1u
B/YOce/7cIfvj3/+8/v9Pz9A/iDu8cP4Efwo+z+GH8dPMP8k+UD+FH4aP4Of
xc/h5/EL9L9I/hJ+Gb+CX8Wv4dfxARz3zji8QY7Dm+Q4vEWOw9vkOLxDjsO7
5DgcJD/I/b9HjsMh8kPMv0+Owwf79RmHw8wfJj/C/BH2P8r8UeY/JMdh3Dvi
jOvI/seYP8Z5ySsOx5nH+fh+v0oeTjB/gn7yisNJ5k8yT15x+Gi/Pn7E+XHF
4RT9OON6ivv/mHmcccXhNOc/zTyuOHxC/yfcH3nF4VPmP2UeVxzOcP4znJ+8
koez9OOM61n6P2MeZ1xxOMf8Od6fvOJwnnmccT3P+dM+73HECWdccMUt0X+B
fhxxwhmXC3xv8kYeLtJ/kf8TecIZF1zZr5GHS/TjeGk/n8gzLrjihsPl/f79
ZfpxYn0mL7jixny4Qv8V+skTeSYv5BU31oer+7y/yvfHifUZF1yZb+ThGv04
4oQzLrheo588XOf+r9NPnsgzLrgy38jDDd7/BvdPnnDGBVf2azjcpP8m/eSJ
POPC+oobDrfox/EW948z6wuuuOFwm34cb9NPnnHBFTf2C3foxxEnnO9w/+QV
Nxw+px9HnHDGBVfccLhLP4444YwLrrjhMO3d4R4POOIRJzzhjGdc8IIrXnHD
Gw5f7N3hHg844hEnPOGMZ1zwgiteccMbDl/u3eEeDzjiESc84YxnXPCCK15x
wxsOX+3d4R4POOIRJzzhjGdc8IIrXnHDGw5f793hHg844hEnPOGMZ1zwgite
ccMbDt/s3eEeDzjiESc84YxnXPCCK15xwxsO3+7d4R4POOIRJzzhjGdc8IIr
XnHDGw7f7d3hHg844hEnPOGMZ1zwgiteccMbDt/v3eEeDzjiESc84YxnXPCC
K15xwxsOP+zd4R4POOIRJzzhjGdc8IIrXnHDGw4/7t3hHg844hEnPOGMZ1zw
giteccMbDj/t3eEeDzjiESc84YxnXPCCK15xwxsOP+/d4R4POOIRJzzhjGdc
8IIrXnHDGw6/7N3hHg844hEnPOGMZ1zwgiteccMbDr/u3eEeDzjiESc84Yxn
XPCCK15xwxsOv+3d4R4POP7vvwDD5rGp
          "]]}}, {}, {}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Medium,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 500.}, {0, 0.9999999999999999}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->{780., 245.61684774746024`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.7410022288407583`*^9, {3.7410034978240213`*^9, 3.741003514134605*^9}, 
   3.741004454375814*^9, 3.741361147464074*^9, 3.7413613676083803`*^9, 
   3.741368556153305*^9, 3.741711959923296*^9, 3.741711994219982*^9, 
   3.7417127506045513`*^9, 3.741713402031328*^9, 3.741716781280506*^9, 
   3.74171681620329*^9, 3.74171686701657*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Evolution in a finite population", "Chapter",
 CellChangeTimes->{{3.738607211182466*^9, 3.738607215690178*^9}, {
  3.739892592542673*^9, 3.739892592692618*^9}}],

Cell[CellGroupData[{

Cell["Transition matrix", "Subsection",
 CellChangeTimes->{{3.7386019367030067`*^9, 3.738601939261675*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BMtrxDD", "[", "pars_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "out", ",", "i1", ",", "j1", ",", "i2", ",", "j2", ",", "k", ",", "k2", 
      ",", "b1", ",", "b2", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", 
      "temp"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i1", "=", "1"}], ",", 
       RowBox[{"i1", "\[LessEqual]", " ", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"++", "i1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i2", "=", "1"}], ",", 
         RowBox[{"i2", " ", "\[LessEqual]", " ", 
          RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
         RowBox[{"++", "i2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Lambda]1", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"i1", " ", 
               RowBox[{"r", "[", "1", "]"}], 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 FractionBox[
                  RowBox[{"i1", "+", "i2"}], 
                  RowBox[{"\[Gamma]", "[", "1", "]"}]]}], ")"}]}], "/.", 
              RowBox[{"tOffSub", "[", "1", "]"}]}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r", "[", "1", "]"}], "\[Rule]", "r0"}], "}"}]}], "/.",
             "pars"}]}], ";", 
          RowBox[{"\[Lambda]2", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"i2", " ", 
               RowBox[{"r", "[", "2", "]"}], 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 FractionBox[
                  RowBox[{"i1", "+", "i2"}], 
                  RowBox[{"\[Gamma]", "[", "2", "]"}]]}], ")"}]}], "/.", 
              RowBox[{"tOffSub", "[", "2", "]"}]}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r", "[", "2", "]"}], "\[Rule]", 
               RowBox[{"r0", "+", "\[Sigma]"}]}], "}"}]}], "/.", "pars"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"{", 
              RowBox[{"i1", ",", "i2", ",", "\[Lambda]1", ",", "\[Lambda]2"}],
               "}"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j1", "=", "i1"}], ",", 
            RowBox[{"j1", "\[LessEqual]", 
             RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
            RowBox[{"++", "j1"}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j2", "=", "i2"}], ",", 
              RowBox[{"j2", "\[LessEqual]", 
               RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
              RowBox[{"++", "j2"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"b1", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Lambda]1", ">", "0"}], "/.", "pars"}], ",", 
                  RowBox[{"PDF", "[", 
                   RowBox[{
                    RowBox[{"TruncatedDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nMax", "[", "pars", "]"}], "-", "i1", "-", 
                    "i2"}], ",", "0"}], "]"}]}], "}"}], ",", 
                    RowBox[{"PoissonDistribution", "[", "\[Lambda]1", "]"}]}],
                     "]"}], ",", 
                    RowBox[{"j1", "-", "i1"}]}], "]"}], ",", "0"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"b2", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Lambda]2", ">", "0"}], "/.", "pars"}], ",", 
                  RowBox[{"PDF", "[", 
                   RowBox[{
                    RowBox[{"TruncatedDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"nMax", "[", "pars", "]"}], "-", "i1", "-", 
                    "i2"}], ",", "0"}], "]"}]}], "}"}], ",", 
                    RowBox[{"PoissonDistribution", "[", "\[Lambda]2", "]"}]}],
                     "]"}], ",", 
                    RowBox[{"j2", "-", "i2"}]}], "]"}], ",", "0"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"out", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"e", "[", 
                    RowBox[{"j1", ",", "j2", ",", "pars"}], "]"}], ",", 
                   RowBox[{"e", "[", 
                    RowBox[{"i1", ",", "i2", ",", "pars"}], "]"}]}], "]"}], 
                 "]"}], "=", 
                RowBox[{
                 RowBox[{"b1", " ", "b2"}], "/.", "pars"}]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "\[LessEqual]", 
        SuperscriptBox[
         RowBox[{"nMax", "[", "pars", "]"}], "2"]}], ",", 
       RowBox[{"++", "k"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"out", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "k"}], "]"}], "]"}], "+=", 
        RowBox[{"1", "-", 
         RowBox[{"Total", "[", 
          RowBox[{"out", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "k"}], "]"}], "]"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "out"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.738603248884701*^9, 3.738603249149768*^9}, 
   3.73860340685178*^9, {3.7386034684425707`*^9, 3.738603600077634*^9}, {
   3.7386036546548557`*^9, 3.7386036589008636`*^9}, {3.738603689052676*^9, 
   3.7386036908467216`*^9}, {3.738603736383997*^9, 3.7386037383538837`*^9}, {
   3.738605879978243*^9, 3.738605961730234*^9}, {3.738607881556683*^9, 
   3.7386081001077147`*^9}, {3.738608131775378*^9, 3.7386082945195217`*^9}, {
   3.738608344936099*^9, 3.738608350929275*^9}, {3.7386085393972263`*^9, 
   3.738608636667198*^9}, {3.738611069274447*^9, 3.7386111839448023`*^9}, {
   3.7390313573904552`*^9, 3.739031380420195*^9}, {3.739128457686996*^9, 
   3.739128471625355*^9}, {3.739892742057619*^9, 3.7398927440606003`*^9}, {
   3.740335677617056*^9, 3.7403358288177834`*^9}, {3.740335868994053*^9, 
   3.74033587153701*^9}, {3.740336044128132*^9, 3.7403360470841637`*^9}, {
   3.74033614870277*^9, 3.7403361654022427`*^9}, {3.7403362224485617`*^9, 
   3.740336232076232*^9}, {3.740336280608095*^9, 3.740336286246498*^9}, {
   3.740336449889326*^9, 3.740336477400231*^9}, 3.740336726921022*^9, {
   3.7403368044749823`*^9, 3.740336818392873*^9}, {3.740336873092758*^9, 
   3.740336886429195*^9}, {3.740336941133028*^9, 3.740336946580105*^9}, {
   3.740337098932068*^9, 3.740337107499905*^9}, {3.74033714689641*^9, 
   3.740337302902378*^9}, {3.740337335601892*^9, 3.7403374009140263`*^9}, 
   3.740337463401938*^9, 3.740337528268751*^9, {3.740337606469116*^9, 
   3.7403376344187202`*^9}, {3.740337730421254*^9, 3.740337732046987*^9}, {
   3.740337765673956*^9, 3.7403378487349463`*^9}, {3.7403379489092703`*^9, 
   3.7403379643007803`*^9}, 3.740337999611865*^9, {3.740338094103794*^9, 
   3.7403381487915373`*^9}, {3.740497115770775*^9, 3.7404971433404408`*^9}, {
   3.7404979763649597`*^9, 3.7404979977961063`*^9}, {3.7404980678258753`*^9, 
   3.740498108026471*^9}, {3.7404983478282127`*^9, 3.74049842998372*^9}, {
   3.740498463315456*^9, 3.740498477112167*^9}, {3.7404985275887938`*^9, 
   3.740498542804055*^9}, {3.7410035560720778`*^9, 3.741003556510841*^9}, {
   3.741361553649701*^9, 3.741361559655054*^9}, {3.7413616033314753`*^9, 
   3.741361814986107*^9}, {3.741361848555745*^9, 3.74136189466606*^9}, {
   3.741361944584646*^9, 3.7413620156417913`*^9}, {3.74136208360811*^9, 
   3.741362116970922*^9}, {3.7413622103526983`*^9, 3.7413622218562202`*^9}, {
   3.741362267203475*^9, 3.741362319687879*^9}, {3.741362377628443*^9, 
   3.74136238281735*^9}, {3.7413685755697327`*^9, 3.741368587218874*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BMtrxDD", "[", "test", "]"}], "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.741362350974128*^9, 3.7413623559862556`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3Qk4lWvfNvBIQpNK0VxokqlJNDhVQlIUaVKiiTQYm4giaR6kQiUqlCYK
KZUGlUijscG8rOm+bg2KaHg93/d+z3s8+/ju993P265l7S7HsY/fHjr2/l9r
Z53utdZ5//s5r56xpGWLFi2m/+cf//jz//v1FlQqlUqlUn+95RtULpiXv/zP
v/5/X5Kfi0qlUqnUv7M0f6lUKpVK/fXS/KVSqVQq9ddL85dKpVKp1F8vzV8q
lUqlUn+9NH+pVCqVSv310vylUqlUKvXXS/OXSqVSqdRfL81fKpVKpVJ/vb9L
/p66HDW4OJrFlOCpS52PsBjbs3yr4Cgj8bmoVCqV+nv6u+Qvl100D03tcpxF
dCvbt6lhLIJvaZrt3Sn9ubzMx+/qwwgWh7Yu2pO8iYXZ+ZqgoFnSfy4qlUr9
u/i75y+XIWG7PaYfY/ExePaGNntYPFrs0spgg/TnV7rB3MnXQlmM3ro+VX4p
C5nR3zb17iT958KY3pMct7Jwf3bcz34Ui6ODCtPPh4slPheVSqVySfP33zOf
5/WmVTiLEnlXNcUNLNymD5+oZSb9+TUvoYvrkS0srlnFyp/VZ5GV0d3XLkT6
86vr7nNqK1ez2DC1xD+mjCBfRs+z/xWRxOf6UYs9JjvscGSh5HN9duQpgnOf
UrVke0j/uajU30mav3+NcvHTV37ax6KhVYDJvKbnxczX403utZD+XD7z8v65
NG8WNZpPy07WEjzXXT5iqFj6n+ej8nJ83aaz8AxXPm28mmB1+Al1w31Cic/1
o4YOuHVFZySLszGaY0LkCHSOzas9uUEg8bl+1PNxHe5e7s5iUsoUFd9oBjnn
DXa4rOFLfC4q9Uek+ftztXs8oJ/GNharFkS+lzFm8TXuwBf5BOm/riwOUWM2
zGZhIX9kE7Od4IPdyIHH8qU/v2bFO158PojFoqCT7wryGdSL/eSHy0h/fpka
RT9I+kLwWUWvqKseg4Bgs4i11tUSn+tHfWo84YXwNUHgBh2t76liOBgMP6mm
ypP4XD+qV1fz9NnpBDNEok6DDMV4VM+EaOdWSnwu6l8rzV/JWOMg6pnly0KV
uZk2vQOLxPYuow7pS38uaxze2+ofP2fsjDDeW9afYECmnoXzM+nPL/k2myed
+EjgbGB13UWFwSNhCK+jkvTn186849a9bxBM/npV4aWxGJP9ViYeKpH+53nj
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
X3P1l2n/l0qVfmn+Uv8Ojg4xSVm1m4Wq3A47uRkskno/vNmpRIzS8+UmchtY
OH68OyFOgYXVxoRPY/uIodXX91FE0/Vz3MMyfYsMAll1E91lC5vf57S55k80
D+f3sWIRPSdj0th5BNqmqx21HYRQ/dZo2luXxYMuFnOKhQxcnHYUGo9sfv0p
rsefa/5VWpnttD4T3Cj34mX0YxDwTVf+njbt/1KlW5q/1L+zVl5ySZ03s2De
X+xup8FCrlfM55jFYowu9Hibv5jF2t2V146mEeif9iPtrEWA+8tZerYsyt/1
6y3yIeAtily0P6b5XVeWys8wnObEYqHilceTzhL03+blNk9bhPB3ri5ztZvO
286sXKeSwY1zW/fzNAQ45DHo5VMlFkfI+0leixk0jh6xe+LL5pdfHdbb39w2
nkX+ioqNo4YTGDeeeKpSK8CVC0P6L60jGD1OxkSlB4PY158nu/WoxvK3bTLS
HhAk8B7piZeKYdB6+crHZs2vP9X3y7Bdh7RYJI4+ujzwNYPvZrLWuzoJcNM1
hNf/FcEV2HnYJorRb29I8s1WPDCh7629jhBkBXxrF5Mhgr7OtLqzB6T/82/U
f5XmL/V39PnbiIU8NxavzleGWr4g6HI6/q1nmAi+S0/erZzKwjT4bjrfiaBX
lml08Mqm/BVrVGSi6bps3OTWu7QJwksm70mvaH7XlejeOGjcWBaT5g5XHdmH
YGVXFVnFWwIYBunrBbdiMSE9Yre7DYOw5NEig7hqlOkZxBtUEHytv2UqnyOG
/n698/pTmt/nt9cLY2Jmt2fxKbzvimwPBhEWveI+famG3+WHq+JvEfTrGjXe
wKrp56qspY32MlXQ9rlerX6I4N6Wma67zoqgtOt6irtj88svi751gUpiAgsZ
oyQnRgx/hYHetTE8aC5vb2wfRpCirnc545QIfuIe9bemVmBWr4XVS6YTXB/l
V5IbL4Sox47ZsWubX3/qqfGEF8LXBIEbdLS+p4rhYDD8pJoqD5CZkndlFUED
fIvCu4owsWi6oczrMigvtC/6oND0c+TXoxPN1wvQNmty2aYFLyV+jp8tzV8q
9b+cc6tq+Ac7FuuVNcIO+hFMrF92SnRJiHn7b1mtH82isqVf9HY1Ao2dKzIu
XhCgZhqjXqHHYtxFn4Itbxlsym0xJNys+eXyYxdcD2vLoq/s0+e93RhETlyr
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
/wXiS/5ZImRUzH7lOpxF/0mZd199ZbBlxZeLlq4CJAjfO5R8IChPbKF6ox2D
ou1pg9PqefAfnhVWe4/gftGIUOOFYmzPvz3Ec2QVkvNCbV/FE/glD18SyIrw
fHiR39F20n//beq/SvOXSqX+arn2L3PtL+ba/8u1P5dr/+zPPhfX/miu/ctc
+4u59v8+3meb6OtOEJvhM820lwhfhrdfP5f8gvevOfZfc+2P5tq/nLV7ltIJ
awLltM0u6jFCrF3csfC9XSnd//svX5Kfi0ql/n5y9Ze5+r9c/Vmu/ilXf/On
n4ujf83VX+bq/3L1Z3XyBtnKg6DCMst0obMQ66/2armufclPPxdXf5yrf83V
X+bq/+7PvF6ttIdBVI5hnweO1bC/qNHZs+fzn34urv47V39coSRa4Uhvgudb
jsyoLxTgUpSpwtvnr5BZ9uK43CoGCRoBrdNf8LCj+9MAY/F/9Zdp/lKp1OZu
73tDx9ztx8Kum7vS4HQGVbOzXuWm85FxKn1vQyXBqytiYdIzMeYnnnHZ4cCD
cY4sKm4SyPDzHwRPEkP3ldPFtzWVUH0pWzcpmWDsjJbxK3uJ8XRpYG5ciORe
1+Wa//TqG4MTtxNkq6jsCvQT4UzUsqyuvHJYO/YN87Ig6NsncOb3YCEyLs3+
dP9BCWpVTgbLDCFgrOXvDGsvhGw7vovR6dcSOxfX4881v9rgoJNt8xkcjDGP
tTrEx8DGTrqZ5QXIVW10XePJwLa45KoWn4fuo69M6TjhqcTOxfX7h+vxLxU2
Gs9yZ/D64Grnyjc8LP9y635or6cYWGj9qFaLxZOLitUDgkvwWrV45si5yyT+
fUalUql/1pcdy44+Zgi2jZXr2P6DGC+EHbrYXOZhgMZkxadXCKY/37MmV0uM
PsMaV7onVGLRB/P6ZWebciExhxE3irCg2/vFAfrN731V1xltnHacIDBVi7/q
9lIElbiIj/OKK7B2/F3nA6YEG5Qvqs5dK8Su1nV3DvmWICf4BW9bD4JzvWO8
dmQL8N15kFfvKMnd/4rLziP9tu9dRmB3/HSX3Y1CeGddEscfLIN6ZeezHs8Z
uBqtq+bv4GOC7HCT2uQCTHBfrTZ6BoOV4bumDpvLw2SLt3wjvUcSP8cfnR+z
7Yr6TIJopXGrSYoQfTVkNXvfLsU33Sm5HkEMZET1S1YNrcaF26+PDlr6DIsO
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
C7q4SnwuKpVKpVJ/R/8DIW/URg==
   "], {{0, 0}, {81, 81}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{80.5, 
       FormBox["1", TraditionalForm]}, {61.5, 
       FormBox["20", TraditionalForm]}, {41.5, 
       FormBox["40", TraditionalForm]}, {21.5, 
       FormBox["60", TraditionalForm]}, {0.5, 
       FormBox["81", TraditionalForm]}}, {{80.5, 
       FormBox["1", TraditionalForm]}, {61.5, 
       FormBox["20", TraditionalForm]}, {41.5, 
       FormBox["40", TraditionalForm]}, {21.5, 
       FormBox["60", TraditionalForm]}, {0.5, 
       FormBox["81", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {59.5, 
       FormBox["60", TraditionalForm]}, {80.5, 
       FormBox["81", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {59.5, 
       FormBox["60", TraditionalForm]}, {80.5, 
       FormBox["81", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.741362357585702*^9, 3.741362387078455*^9}, 
   3.741368557411677*^9, {3.7413685918883944`*^9, 3.7413685953087063`*^9}, 
   3.7417119617455597`*^9, 3.741711995808874*^9, 3.741712751902553*^9, 
   3.741713402996806*^9, 3.7417167821224737`*^9, 3.741716817589919*^9, 
   3.7417168684985037`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
vy70bKDfIz7p6U6q6Ad/OJC8a27oy0D2tB/IvGt1dCeEu+/+5K2sJ3Z0NEJ7
Wz0mI2ZL1Juve3q6nGV4W9WxIvzeK5SoDEhJx/B60a+pOxQcYN1APhjvDqRc
7W0maLVXYqrCTxH15uuenk6dclXfFHx2n02miMHyPwdShipM1VyGai5DVR9l
qMnzlD3NntNe+WCVgVbb3PWUZJP68kDK0IZlsOM37VwGO5fB7lKGl1V9NuOz
tZjq+C2iPT1yP0kp699UfS4W5Up7mfX5Zbo3Da8X/Tf11bRSgJSeu6tm8B/v
bvmp7HZ7OaYKfqKCy9+lfl5bfpK3u97TeJLyVX7iV+92WeuohJgq+YnKe5aV
9EJXN78xWNYPTFlv99E3fH1gZTXSl6l8XNYqURLPsrZi22opw1ROTzCVz/AT
35DPdeBzbS0VmKg2gnr0IZ9T6mQuFuVP/TrVCSn1IXi98FckGyEhbqu3xPj5
6NSzrQX7GdtdTEX0HFMP2an1JD0L0+lrpn2Fn/jNo1KnCqoJpmKuU/E960Qr
wKN02o7Ux8E6Ddbpva/T1wZcJyoH9lpeTL35usfhVifq223FmEq4rETlM5o6
teIzLU23MeXjlaCudVcWvcjbqbUZ87OS26rdWsC5FkKv6DcNlcpz5hJRxdSv
cXf5NbqXjNdv/4KGBzK5kMpuVX7j/95tVlR6ik2XFUXIgFvEDmbF7Xuwgp5r
ttDSXbOFVmyaG68jK7q0rKDRUK9HTf4XfuJP78dq31YqbLnO1b7hWW3aNtFT
fDlZG6z2YLUHq91HtVvR2m7Gkai5nKrdzOMRXvc4OjTVbsV7LU13MBVwdQq4
2mpcvVpteyN2Uw1XMNHGlKCuz6nV7u2BFvMVsBnP4pXNeI6o6Tze7tTk19vr
wOcuQTM/0WzMoa+bLqqjQJaSXwOOAin/jxKxByneS8LrBT8n1tEoUJevjBay
LH98t1lWSsMbsY1ZdqdPluVBs/kyJvKzFrRPlpkuga3+NDGr/oxgnC7LbLUn
wFp9CK+s1YfpuZrjqkapLKvP72O0EHuIr/8Ts6fuJFhriDHWmiP0HLLLkz13
+mhw/2+QPYPsGWTPo8gee406B/FSZyLFWKV2DXvsTQU4NuVi4kGXaY+jzYM9
LcgaW90pTKcxP6JYnboz0NPdpnmO2GOrOQZNlQTH0FS5j2jVAfW7Kntw1Gqq
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
NiKa8LqplBNdMZXxZjqy38VbHz6yu2i4NRd5NIsSy57pTbymo81vzqQJBEe+
k34oMWxa2a+huDWSugrkbLwUr8ZNMr0Uy7YiJgoFRIr3csaA6UIsB1xr5H/r
LedQTvRaOtuLKHMheYOAIahCWVdt/ynZj0jRftz2Y6jZ82vMr8XNQJitdmdi
lom2ce40qN33O7yq3ft/RPf9Bup3oIEQ+1GqVQyFWPO0gs4M6L/87Zabcv7n
0uxrT/JeEm1feCmbGDXHobvD4tyDkKJSxKewm5bLeargInoLzv0shSspkYnM
iJuWwhXQ3VbPp8j7MNXm56oOjXdXMRYFoTSRuW5C1piuJlHiuV4S30uGbo6u
b+Xo+tY+8uOITxwtZFw9gx7gBAJqTwRQlDyFJTKKRO3xESjIIOjiE4yVKL1m
ueHT61QHnPUZL8Rh86cZYh0vBdSdIuSfb0LFhlcwv4oNCvpI5ZYfQHdLBZWv
g06Jp4h7xXdD4R99o+5kMNQyIlAtIwJxWQ7+BazJIq6eQhptCcOgefqz0NvI
S/0tJqqvvUHN70J/1eGG6PFdlgOEKridQVBzTB0FlJBBW9UB0cO77HNZUHQk
aoJo9VKAWguXg6ND9NCuoBeN+JwTeMRbAXPVArrmJnm86wRMEO14PNM4ZJsf
M1Bl4zFfbJUB1ENoENWM52NQZIR0UXc6hNtvIIurfN1X8d3ydf8P75Wv/Qr2
3t/R4GewqHBWV3vkr/SNIxzNevTvULf/92CbTL20jI+eYICW1E9AL5rx194L
sdgGIJbGAYilcWBi6Wi6D7G8wgIhsXyNxfJVIRYXkTrF8jcWy99ZLK+jWP4A
tilkRzVPNAjhoFg+Cb3YeQ6KZVAs9xLLShYDoU17qZjTy+5TLEkK8hWLhdEC
c6c+gFhGqmOBL4vlDRSL//2JZf3LjONCaC7cia3BTizr2zpiCWCBkFheZ7G8
IcQy2UvbiaV8/GGJxUsVzhneEWhmrw1J0fzQH1vWq1uoTNlNxt0nI7OPsWU5
29Y+CkYSTSKvpfFir5ey5Iv3dMcWtMQJZ8OHhTMM2RzKQ7QzBUH96XB8121c
ORelwJapFmHl5u+SaUBmQRbhI1VsfA2qsn/KFqZGJEeGQy1a/yiSg382CBCf
ur2/heZpZP21TH2KaOJTYJ/5Aoqktb8iIZR9axWBpR7FTxH15uvu9oY+LT2F
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
XJtGMMN9Llq5guaZcsYy3ixjZxoESmdXc0WfI6IKmufoJCZC2aov4HfLGPiu
bPUXGamz21aiO/qp73Y2g3nuZ8CYSotHxrQhJMZUNJ9mPQMOqxjmmuVzSn05
B2UO1y/+ZiFnNzN/N0vV7JYqpwB0NRUsRV5OZUvXS7V3k6FbtmBXgC7TOVSv
w4ykKHF6X0fLxKh5jnm06TtQtoJh21aSB1fZys9CeeZL2KrrnbhkxI/ZHwdj
Mq35G6dR88XfYJrxEcae4ro/+Y+qu/E+617fR92fd6n750TdW+vc6v4Jte4f
cq17W8Ng3ftd96PsDUO4+F4KRj5ee9Z9CdY9kerLdU/muifp153A5nDkoWnK
XwQH9Oue9S0VyZGhClc8D+WrX9TWvcsO5lkfA2MS1z2ZdT4J6z79qQHX3U4n
tuJs3lpBW2lWdkSl6+5Oi6buVkLxvzkDZ7ez8TkLnwBhyZvFmwrudW+4OBnq
T5BRVH+SRmyCbXTvF6ju1Tt+TkiWmF/FeoZpX/8K8uM7mlGcF8QJMUkAazEl
oD3L219GnhAMF2oFyWHWx6HhrRewD7AMiB80+dTE7rn1y66Agoy4JzxWPcYN
Zz3dQv76eq67Vfq48nZDn+MBdNhFqH80w6XFMFza2A/zCd69YtrTKcaDFtCM
BwoE3H3y45b6Pcxn/Me0KHq0q0sHqrVK3XtmAHnTEUvhbtHCBP9mNz+6edOB
z8STUM47XEUWpJPV+5m3U/96hA5KEL0eJ2LHkyoEZKcq2iylSNRMCDiwhVBw
JSVkvWRUnLhPUDEnUDOB8Z8Q6BGtlgEVsw27MgIrwWTwltRuKwK7tZASXTHl
cN6GXEp0xVQ/RNiJ9+LlElWphAir9exoFeWPforV/ylW/6fE2Z0C/aKjRWkm
vS7q/3R/61lHUC+Y6JA4QXVBX3QP4j4nwpcFmhZTa+0x1WXAS3UcOKwioTvr
aReAcHrNzi6b3affh3WiA3M8muRTrLGDdXpE6tTZLnTPvXuLfvxdqlMB1iSf
Etcp39DXqap0GC5B2DNaD1Nr7VGuAyauE8fg1BxS68RlUbtQpfcUg7I4N7Rj
GI3KQ2SYiS4QEih9K5/zIij3rWikxH2S+9ZPct/6STE02y0D45EO1EIzBam5
gUrpoRexfAlRQgaBEeUIewmX4KWAJpRtV33llLK0tqBcrHc0yKgcZkKxS3ys
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
dEa0y15xzyWgL7iw3HRxEgNv+DC4xjCGt6rY+Aqjl4iEv7NehS5bKS/tuAe4
KnnR9+pPBBFIGXH1wB+I7vsdGKc/CcYUGjKNqd4kgxRUgownwdHI+XW7B8Iy
fW0g/F6m6T765Lcw9dUAY1I92mpxNelpm8IDAO5suNpVuOJumC5ORD6OZD7S
Njx1BQRPQnAkIr3M6C/dLdVO3Azi2fFAgsElbu3/HdG9vwFjxuOeAe7pLl3u
Dx51/tQMgD9V/edPc80gf95z/ixSUYG9FGAgnMLdF3/0PHTPhPbBH7d+atM3
oWL91zB9XaavMY88+MN9EuPvHvg990m/BWP6UDBOZf4kMYjCVORP6tCHwJ/d
yI+l2mUn7P/dt3do61hZylD5c2s+Ix+beJNX0kvY11+iLZlJNHRemiTvKbx1
5Y8xZxwaJAyvISdFvgwOWb39Z/hu9XY26rb/DE26X7DpreHRIV9GwPMmMEKi
O34J5rdeAPMcAuMwzyVACvwNDQtexD6ofkA8spZuAnPebD5t10s5eTfvTYHm
3Mf4p9TTfCUZao/7EWwUbTudZKStE4E4jSzrE9FaBUzo7WGgibLVX8R3y9e8
hPfK13yZgKOgy1qkO7Y5gXs6wDT/C1DH41hdGo1jdamosdOfgG6e+olxrLfb
CavHOXz/YfJotjruKDNK85UkQmrSwvOdCGBe0hMqGAfVHWUvgIfKM1+kumd+
ibgA3c0VToARque8z0Ed9x11KdR31E0zQH3GY+BQ2sZP/1F1qnqAOpXfZ52q
B+vkUacshmGlE9i8lNPY8NqjTpcTCSuMHQS8XE6Y0K3Ttp8SiBPVafULVKfV
X+B6aerU2w2muc9BHffLdQxuU5eEdUrzGXCdmit38XZ3YyEtJxOlIwSWqFMQ
pQwWnKIZz0WD6Xws9bfnGZkU+1Wl7q51qjvwVxyjv4vPVW35d7xXteUHOBX8
kWb84b7AVkcHBtAV015LKTQsew3rSvxAKdI35n0WTG+/CA5lybaf9QQVNMS5
5awLMvMg4DaOTg10qG7f2t0JkPQiQOQw2paPGkb3xgzjI0H/f3tfApfVde37
CWqG9ra9v/e7993b9ia3TdMkTdKYJk06vNfptfe+ju/eThlknhFEQcFZFEXF
WaM4IipOOM+ziAoaZ1FQQGY++OCbmZT5//Zae5/D9wHaCLZJGvL7nRXPAc5Z
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
Np8w9H2lZxj0/wEWO0bz\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DMtrxDD", "[", "pars_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i1", ",", "j1", ",", "i2", ",", "j2"}], "}"}], ",", 
    
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          SuperscriptBox[
           RowBox[{"nMax", "[", "pars", "]"}], "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          SuperscriptBox[
           RowBox[{"nMax", "[", "pars", "]"}], "2"]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i1", "=", "1"}], ",", 
       RowBox[{"i1", " ", "\[LessEqual]", " ", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"++", "i1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i2", "=", "1"}], ",", 
         RowBox[{"i2", " ", "\[LessEqual]", " ", 
          RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
         RowBox[{"++", "i2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j1", "=", "0"}], ",", 
            RowBox[{"j1", "\[LessEqual]", " ", 
             RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
            RowBox[{"++", "j1"}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j2", "=", "0"}], ",", 
              RowBox[{"j2", "\[LessEqual]", " ", 
               RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
              RowBox[{"++", "j2"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"j1", "\[LessEqual]", "i1"}], "&&", 
                 RowBox[{"j2", "\[LessEqual]", "i2"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"out", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"j1", ",", "1"}], "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"j2", ",", "1"}], "]"}], ",", "pars"}], "]"}], 
                    ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"i1", ",", "i2", ",", "pars"}], "]"}]}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"BinomialDistribution", "[", 
                    RowBox[{"i1", ",", "s"}], "]"}], ",", "j1"}], "]"}], 
                   RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"BinomialDistribution", "[", 
                    RowBox[{"i2", ",", 
                    RowBox[{"s", "-", "\[Sigma]"}]}], "]"}], ",", "j2"}], 
                    "]"}]}], "/.", "pars"}]}]}], "\[IndentingNewLine]", 
               "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "//", "Chop"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.738603094991034*^9, 3.738603095202489*^9}, {
   3.738603148013921*^9, 3.738603209573564*^9}, {3.738603422207438*^9, 
   3.738603434646339*^9}, {3.738605136380169*^9, 3.738605138207283*^9}, {
   3.738608674320796*^9, 3.738608702437211*^9}, {3.73860873601292*^9, 
   3.738608849295722*^9}, {3.738608887117259*^9, 3.738608897540615*^9}, {
   3.738611369432076*^9, 3.7386113712117147`*^9}, {3.739031448615966*^9, 
   3.739031451284761*^9}, {3.7391290076819487`*^9, 3.739129023465837*^9}, {
   3.739892599511722*^9, 3.73989260074675*^9}, {3.73989274733768*^9, 
   3.739892748357478*^9}, {3.739892782242737*^9, 3.739892797283333*^9}, {
   3.740336611392618*^9, 3.7403366162462177`*^9}, {3.740338274048341*^9, 
   3.740338350527541*^9}, {3.740338395095387*^9, 3.7403383952541428`*^9}, {
   3.7403384705882597`*^9, 3.740338688987356*^9}, {3.740338726752824*^9, 
   3.740338858041297*^9}, {3.740338949703933*^9, 3.7403389738820667`*^9}, 
   3.740339190082521*^9, {3.7410035585582*^9, 3.7410035587982264`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "TMtrxDD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TMtrxDD", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"TMtrxDD", "[", "pars", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"DMtrxDD", "[", "pars", "]"}], ".", 
     RowBox[{"BMtrxDD", "[", "pars", "]"}]}], "//", "Chop"}]}]}]}], "Input",
 CellChangeTimes->{{3.73860378236869*^9, 3.7386038392995663`*^9}, {
  3.739020733454639*^9, 3.7390207558978767`*^9}, {3.740339202749695*^9, 
  3.740339218128181*^9}, {3.74100356500159*^9, 3.741003570647057*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"TMtrxDD", "[", "test", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.738606111276239*^9, 3.7386061192269917`*^9}, {
  3.739892650005889*^9, 3.7398926562414227`*^9}, {3.741003573210824*^9, 
  3.7410035733824177`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
hcJ+dcb9dDC+dBD2mynEvDSkr19P4nnC8vRsIRZu+SxaWOJJwXuo5PBcWQqn
2+euqDzFfR7Tr000cKRQ4FZkJNBPwtHoV69V1+jZ7xUOtK0Mmk7ha9gM2Stn
CVwIaYjcJcCATnV1Y2IniRsTN9eN/c0BqfbkbknJ6KkrT9Svk1J7TsLtqnVM
eDcb+8x3TuwXa0NYqNZgryeJCTVJV/caseFVEfdUOmj01F+KYRkfVY+SuPax
NlithoXZTyVrP6ymQUFW/b2aBIl5qzcuGN/MhM3huz7R1Oi51z3lg6QubS43
jxqnupGdzoSWT1ic6el6JO7IL4tM5frNgnNraFIMLPG09MoX//POsQxH/j7O
2YoWArG7zh1TLGZgq7rJnUtp1dB8LSJkKk9gqaSUV2hkO6QIu7Fn4z+NuL3/
NvMOm+oncesmzSzFKUIMfG6oe51SVola/QHRCA6FvW9lvx+Y0IjSYGFfP28D
yK9XM5PdSKBC4NJe7+kdaD97k/rUlof1qgHt7m0ELGihKx2/MIDUifJL66ph
fepd9hMtErYqWcIl91n4ufne9ElizVDWqw1eHUJin/DG35/S2bgr+C3b4U4r
EjrOtBQzSMwqjt2xhMZBj+v84qVeHZi6QuTuK66/vsqceS2riECWk/RlZYKB
ND4tazcjCvUBQ6/NwknEiBqoOYsN77fXQOnbDX8OlkmcVXNd1Irlg4rzlFID
oG8Z4h/PrVvsdrQIeDnRcWGJrlGSezm+0LviVaaS8EjYd9rzMhPvNN+OPetf
B7W4/j1hJ0hI3Q/U9B1igX9z7Q7BRzTMnpreqZxMov2G3RQnOQ6sEhQ8joa3
4X2irdXMQRIujIMC3ssJiLs+9Vh6gI73/LH3d6tTYDoQKbpCJPZun5qsH8TE
pkSZrCenKMyboFm3p5xE3yl+5fY7w49r6e1Xwsr2BHJWekw3YHeg0J6c/GBP
KQ7VfmpazCZw8YR9ZNA3BqYYfhYq1KqB/+Czizd2kDDK3Rgvd42FSzES8taN
TZC67bXdwJ9E2PG6s8Yv2LjdQdKCjbnzJJixYGkjiaYvtg6DyRzs1zs+I1a0
A4HbvIruzqewTGP8A50YAir24VKP7zLwI0xd+ZcehfwP29w0vbn2T8+80vKJ
hYa4U09PelEomiM3zlSOwqIE8/TCMxwIX37S5GRO4eTJqMyCdBLfzr+8JM31
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
MCM8hIWnDyzlTNSbQW9evCEqlBt/f70s6c9l42hIx7Mjz1uxfUuHliyHW6+e
7YzPJzi4M1B0f/zTDhRWcWyfcOeXDBU89KqBQA5tgwLfLCZ2C2bse8atT72L
TPKYydz1JrG4ZfVuNsxTh06l+1KIa49ffnIvBfsH2dP2VP958ZFHHnkcvUw2
dFvDuUzi0VPBbqG8Zly7xuej4mQ74nb9Xb4j5VXo4wnkppxkWkxtx21XY9vr
5McRt+vvMkC4/VdqNAFzWdVkjUY6Tqs6v6EJVI64XX+Xh+Ujty4VIiHWFT2t
OZCbP3yRVM6q+/N0Un+Vr1Mc/H8cI+GfU6Yd3cpCq7XFGFLnr58/lK8/s6Ll
IYULDyvM3wZQ8Clw1za5R2DF5/OJNd4UVCTOhd9VpqDacLoz9iovT+CRx9FA
oXdXTlkVkGjqT7rTrdmMW93+seXiVvC9kRA9J4aDOrmui9vOt2LSnN4V/vRn
I27vv8uFyre3pw9yoLIqXiGN2Qb28Yq0n5UZUJ9isb7eiIDGAtm8wvsdWPdN
YIwwf/GI2/vvMsM4TEY0ilu/JeUSKWV0rJXxCAluqMDOu5aGFjUEru937usP
Z8DN9OK+s+Kj59zghDOCpPI0EgJjFh9Wuc3EFofd6S9S6uBp/GGC+1ISoiHt
HYKiLPB9/bCAKP/zvlsNx8uvau9M5cbfPSeuvFrSzIKE2DjTil00uEzOP+Hl
ROJhgeydQA02XmjU/Vq39q/v+w3X/3e4/rkjPR//yuH6Lw/Xv5jX/5fH/yYO
1/93uP65d8W3EzYXCJA/L2CTDB3NH2/ZG6748+7fcJz4/WVTDwf9+ZflOz+2
gXlt8OHZbR+G7f/Ld+33zJxCAm3bNC6J2DHA0pl+w+DAn/cdf7j+y8P1Lx6u
/+9Ij+NfOVz/6OH6Lw/Xv3ikx/GvHK7/9XD9o3cOLvio+IyE8ac8o8VMNl7O
XHRu9uDw+uXh9L/D6WeH05+O1PwMp78eTr88nP53OP3sSI1rOP34cPrr4fTL
zGMcjYXcdaLwunIJax0b+wfMTTZp/nnfZ3n8P+Nw+t93jRpDAQUcfJq96r21
YBucHkm7Ry1LHFZ/Opx+c6TGNZx+ecD09xrKisA94557P4o7kP+elfwlpwQ9
9zzH76olkB/56Ep9FAPzplhMyFxSjXOnd9CnLiExTWPzb/7JLMQdzmzLCxi5
+ms4/TXrk5PAjyYC04QUJOI/MrBfWU/R3rcaVSX1J+9LkyhNzjqSRjKRMtB/
4ZZcA9o5/c2XLUlIv++v+T2Wjfemtj/4n49c/BpOPz6c/rqnvFgtxYaEQ5mP
dvAcNqrdbCePb6DBvGm+dmQ4Cfox+08WXH/Xfvj5Gwlq+Pj1TzNOu83Y6AiJ
BdO2KG0tY2HyD6PQuMU00NX2Es5uJFKsn1P3d7KxY57Gbg2TluH116auuuU0
bryUOFmZlcPB5hZRZ691HZjwaFfcWX8KrnJNb2QcKOw8+LG8ahUB++WqF8T1
KVRb++/Y5UviV88ch9x6Fkw+aGksVqRg5H3lvFUrgfLmituUJBOZ7asFXgpT
WPXRtdntBoE7Vi98+LaMXJ+m4ewvef2yS6ufxLXXzuPfiBFgvNsXYC9Gh76m
Z2tSCnedt37IVVXi4MKYGvPdCW1otDDcdu82iTtyDswr/mxkzD8m91lu5NbD
cPM/nP2xrBk2+eYk5FI9N4d/Z2F1oKn/nJs0lF8zFElcRuKdg316mhQLGvOk
Y8b/GDm/NNz6GW7+Dyz4EKbHtf+ydPAvGUkWLDb49qZ9a4Cqwld4cusIz/nH
V8rFMtD3saM/CKNnH++vUvja/rMujynwhS6OeBnUiA1ybp1+9sbQsnR6ptnC
gR9Fdi21asNnkXmuB8am4kRN9OWyhwQyZx0JuPiSjieKj2SU91RA8zTfGaMJ
JKaPc1k7ZM0Ev7JLh+SKOuxekvFL2oDEIHX+aFghN34VL3ngJ/7P+/nh7I+u
GrdjwTkCwtXh5KVfHQi7t9F30d1S1Gzgf0RrIyBRrP5dppoBvum5BiW0avTo
VDS1a5DIPbc797oeC9GXs7aTpY1o2Drn0KXzJLLid3SJ6bHx+6obpez5z+el
rFNTpztw5/9mplclO4aOYm0BW9a2imHtzy+jLZ67lERhDnJ1RFjoq+2SXlTY
AImqlWNlHEk888j51KjEjb/q8f6S4i1wDG9YavSGxHk+YoefJAdzVmWW2N39
5/WeHxsest5z188mnQNDAbZM1EydEWKpXodsn95HK9aSiJc6G/L6IAtk1lBl
R1XjsPbf8SyZ2/iCRNi0vTRrPg6k5l8vLF/fBhm55QoxBAmZ7lbJK984MBjY
9qb79T+vlxlu/cecUxer5K6fWEO7nA0H2ZCIClZR8h5+/nX7BS0Nufav3p66
+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
gfsvlR6/GOmDesHHuswDLxC+Xm9fjw+B9fIfZkRNHoA5Zbj34YtaeEzYbHKq
g0BM1JdwlXwmvm3QnvrBnbd/7p9a18AKtfEHUwlETFrgNfplAANGLUMbjjZA
4UVw1XiK5r9htivd+FgwmjXIELzS8rf9c//UunwlD7C155IItuPPu1vMgv67
co9ZXm08/Zc/FZR0RHqRoDotRZes46A4bPx5vdU98N9/cTQlmcSBfXkLTQS4
mCQbXVG0/c/hFy//a57+0Tz8l3n5F/+pdWWefHv8dTaJDd57C0vkuXhQNbh4
d1IfVJWCRV++I5F3clzWoXAu1Dqb1CULePtH8/Jf5qVf5qX/5aWf5aU/5aXf
/N37xkt/zUu/zEv/y0s/e/Z6kUaJKAmzkjG3N/dYeGl/l3/K8O+/R52XfpyX
/pqXfpmX/jd+dMWXXCcCTTcq/D3q+zHkPWVYpef3f27JS//OSz9eb5f8rf4D
ATePgIkl01koLt621a+oBUs2vGtduotA9nGTu9ZH+zHjQf8i66wanvpfXvpZ
XvpTXvrN15WvzFl7SeyL9Uz9UsGGXUntnuPTf7/O/V3hPN/L37noNU997NDU
B3/ytGq9TjH01ho67qXP7a9Xi3QeKA4gMd9SzMS0jqd+dqnV66YrGjROHf2h
ucKejWftxI0UxU6Mju44ejKARApXpmuGHQct+wUkFyb+fvxa0zzhkk4ygQ/+
JU3pxAAuSiha5+g1YOKe3IuRHwngpNb4RTNZOLpts2dpTQsY28+q1KmT8GfY
NAuYs7FkXPySmX0d6FWPmrDnBM3LmixFz2vR+NsrcFd3G2/96e9el+idLXaf
6fM4KM73+WwWC285S/buNm7jqb/mpV+O1TTE3WIS9q8ul0434sKvMr9zaBxv
/ezvXhcv/Tsv/Tgv/TUv/TIv/e/vXlfb1wMychkknukpUqOS9Jx+2ub2maA+
rE5/0Dihhcbl2+nd3g+46EvRD2YPMDA7QpESpvszv/b33RxDApbMJS4tEbz1
11b39KQs91G4desKw/IOjT+hKVvCJnLwOm3b5430ej9L1Y/70Unj79PEnO9z
WFh7M0vmewOJNluDpb8iubBfp5YkVMXA1bQH8ndjSch3rbbkNnHQuq/CRaO2
F87mdTvWh5O4vaVhxa4HHFyQQmCyUS/GqZdcjaX56sygEMV9IVwocqXt1yT+
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
Qrvvf+pHe5Dgthv0/KO6W3JpFJeAjppifa0aC9c1fSQVDlEo+3mQii8gMbtq
s8ZSSw5qevKYMiEUtF9bXZDaSqH8TcDZnXW88fec7K3Eyg6aD/Y3r9ycx4X1
Ap+GBGm6nj8JVeX7kHBU5n++ToOD9iU/JPQMeqBlpJUzOY2eN85sy/skxsX8
9wYPbrv1QbPv2ReZIRLd6go3VtK8bpcsJqUx+7HA+vFPD0UK+VdumF3vo/v1
RJ33HFkW9vfseH6H5oHHXNxOOz8hccJj6iKrFRyUjnu/ufc8BX9TCWraRgod
dwqf/B/23jwox/99H9aiZBclRBsVhaIN6SAVJVnSQpLSLipLJZQkipRoIUkq
ZUsoSUKRpF37vt/d23VdkUpUPNdn5vnn+c3cM1/zfRvvzzM//5wzTZnzvu7z
dSx1H68zJPWfy8+W3rsdaU6/34amp7aXe3Axb7v7gnP7ehAmbOLF+kbiqL98
+rj5BJQLxBTcpHvxsSFW6CHNX14WuSmLWTSu/EobbFZhIVE89svsfRQso47t
fkL7gLi0oXee0hwwKJFX085RmDZJanCxBoXDP4aEE6L+fP6X1/kVtdhE1q6g
4LoruPAhzW97RSyexe1n4VCI4HmZ/RTyO3clK9Hv5/18MsBYh4OgbSbrH9D9
M/Z53DymReGZxsrIazf+fP9Bx12u3SZovhz2Fjg4xgTBPqi8z7sBk4QWPOKY
kSi9YTipM5sNo7fpX30q27E6hyVk94gEFTt6QUmYC48Om/P5W7oRMvvH4fuC
tD9/tY1fYwuNr+0p4z7d7MUUJe07u4wppIe9Oya+h4TVrTeM/TT/+11pj10Z
QCEn1+dpqRwFb52yO80O/9zrpQKa9tp/4eKWdlrOi6fdUG6MXaxq+RreNr7U
xBoC51upu4wIJlYUKcceqayD6bL4Zp0tJFgm81mS19j4vG61q6B8O6QK4p9M
SiaRUCf4cl4HB79W3VJQYHVh/Mc85V9DJNINC+TD5xAIefdW3Xt2L9ozd6uF
aVO4sVnF3EmaxJWm2MhF7/45vRG5qb1T2ZXWaW4NqpeE27DTMiPzsJo9ICsx
SdqLQGVEvsTybwwIvH97ZXpAJVyztBT5RUgYN2o3BR1nIVtyyyRvmyb4zqmI
KTtIYuDcghy5mbQfmbz+K391B2JnHreSeEOib3LOuh0GXFwjBoIF+7tRnWTt
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
ge2zukk9vDeB7Qudkha3ewZDr/5FpwEMPYAy
   "], {{0, 0}, {81, 81}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{80.5, 
       FormBox["1", TraditionalForm]}, {61.5, 
       FormBox["20", TraditionalForm]}, {41.5, 
       FormBox["40", TraditionalForm]}, {21.5, 
       FormBox["60", TraditionalForm]}, {0.5, 
       FormBox["81", TraditionalForm]}}, {{80.5, 
       FormBox["1", TraditionalForm]}, {61.5, 
       FormBox["20", TraditionalForm]}, {41.5, 
       FormBox["40", TraditionalForm]}, {21.5, 
       FormBox["60", TraditionalForm]}, {0.5, 
       FormBox["81", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {59.5, 
       FormBox["60", TraditionalForm]}, {80.5, 
       FormBox["81", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {59.5, 
       FormBox["60", TraditionalForm]}, {80.5, 
       FormBox["81", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.7386061144423933`*^9, 3.738606136801836*^9}, 
   3.738606727786079*^9, 3.738606777134985*^9, 3.738609050496496*^9, 
   3.738609404150876*^9, 3.738609592089438*^9, 3.738610197239481*^9, 
   3.7386104989397707`*^9, 3.7386112481853437`*^9, 3.738611379185663*^9, 
   3.73902057579812*^9, {3.7390207472218313`*^9, 3.739020765173805*^9}, 
   3.7390252319801283`*^9, 3.7390306033310432`*^9, 3.739030901841107*^9, {
   3.73903095047381*^9, 3.739030953183681*^9}, 3.739031218447137*^9, 
   3.739098801524736*^9, 3.739099020905966*^9, 3.739099286507547*^9, {
   3.739100148193671*^9, 3.739100150416697*^9}, 3.7391290665592737`*^9, 
   3.739129258294364*^9, 3.739129555970749*^9, {3.739129744349897*^9, 
   3.739129749361842*^9}, {3.739129869084593*^9, 3.739129875331263*^9}, {
   3.7391987791042643`*^9, 3.739198779435565*^9}, 3.739198855178667*^9, 
   3.739198961615756*^9, 3.7398926681239758`*^9, 3.7398927136111193`*^9, 
   3.739892772054744*^9, {3.739892819911413*^9, 3.739892855328863*^9}, 
   3.739892906937237*^9, {3.739892996670786*^9, 3.739893012832604*^9}, {
   3.7398931004491367`*^9, 3.739893191217628*^9}, {3.740339206488406*^9, 
   3.7403392249157124`*^9}, 3.74034001375774*^9, 3.7404971916499767`*^9, 
   3.740498586186995*^9, 3.741002603508149*^9, 3.741003579815318*^9, 
   3.741361158723626*^9, 3.74136233636805*^9, 3.741362396865265*^9, 
   3.741368560224419*^9, {3.7413685939870253`*^9, 3.741368597399819*^9}, 
   3.7417119648408327`*^9, 3.7417119982814617`*^9, 3.7417127540892982`*^9, 
   3.741713404331612*^9, 3.741716783764592*^9, 3.7417168199635363`*^9, 
   3.7417168715331306`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
y6TaFr4EluVvonr7mDqx+yOmH4JtXzulE3JXSrArjqvTSdFJdBo4M+aAO5+7
IlFUDYWNVIN5F3is+6HcQQevEi09AwFPVhO71wrqkQ3L++mgvL90xemgbEQL
VHfkjMRJIrrqJ2Ba/y5taXW0sWXnDqo+O5qQpefi8ZNMh0PphTHYp0SaKInO
RUNyPpQVriPFLdG1qMI3gdd6ED/J9AB47UfB57pMC4ugzktQ4c1teh+tF6Ac
1Xr5IOlCFi0bdW+wd0RX/hhM636hcV0RO+Jmnvolesd0GPZxNPVL9I7pHDKZ
qV+id0zXYB83Ur9E75juxz4ewd5d4j4ydV5s7mNzH4N9tF0ScjhQurC/ZSPv
wT5y71b9mPv4Jvbxna9dHzdIf2hwZEP11FehetqruEwQNfBnUq/WZW/Qad4y
Mi+tS18H66qfg21/JPVwf3um7cB+qFOI3sEtt7Rhlek8Nh3LijZSDyW6gQxI
0jPUQ4keAW/JCfC5r+gimGI/yzLA7yuiC9tC1AD+8kKoCFib3nfLBajsrYPK
PrREEjXwZ9+wVmDa+Cv8zrThlzo+5MFt+3vkUtCRY4Ed10djoeRELzKTdQaF
jgXn5cng5i2vTBfR8gie4h20ekh0O64je3DdOI39JEoryTnwebLpol4LivPr
95voor4jxb77i6GioqTpfcctUCWuNZVx3Pc47jt+9o24n4+29NLRFvG2efPv
cX3hXh9hp+qRzlCCWwbsr+g10wTs+yTqr+g104VsXmN/Ra+ZbqOVFHt9ivt+
ivt+FnucRRf3nak3p7nvzX2/s323XYbKvjrqL/W9H/cdP/vi78Vev0N9X/c2
9X3tz8G86beaIwT74U5QcqwH9Vf0minaV5cnUn9Fr5mmsQmM/RW9ZrqV7cby
0pPc95Pc9zPh+x6w0EV9R4p9D5ihotJx231fJf2hzpUDjpQfgWM+6Xmi2P55
PwL3qg9QD14UnME68SLU2y9DjYdiaYhSkk4u1HjzKbWVQv15TmqxXbU4J3jh
fUTxuwo71FWWQl2Vm94oURfUVZdBXU05fZKol/4F9bWUmEuUQl4roL6uii76
xLSy9AIYV/0M19u38R1Ecbuy8idg3x/b5PGotV/i8AJ1xIolXgeO5Jf5jlek
+6pKzkJe4jcgf9638D6iBsibex9YNlw/Uuem21BymUMa1CEVFGKBsxPSBnwz
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
kIWJ4pQufI6L5WqK5+74W1iNytle6im9OE6AXmSl4DskJITMeeDJX6Vh9VpP
gYBbX0wVKYniPnzRi7gjfyWsl9LGha5k2hrsByKh9BRBfcu0PwH1h+JjUjaM
hErOFMfEa9yiYfUabyFYdyHL7v6UPUd8wkd79d2fhmAmssdKqkWpqUh5kXOG
JJrAGWVS7yWajPObpgUnLFgLPuvBprB6RUWpUv1Mr9RAM8k+Q4XVqWqlz5NJ
W2VWtlk6kbXfOJM/LKs7LzJIRXkJpzYxJbhMwl0hyBp9GOAaDavbDilo94yv
bt7FiZJq4Dw3fg7H6rgBl8FxlCFjHPfLk/G9Tk7eI3AbF04zZY4prI7GQ/ng
u6CcsWjKGYuG4ORJi0upkEueY/osA4RQ/HaEHAa5+yMGy9DUhzrRV9ScuMQO
HkHpvdlpnPqpV9egKFirYXWyQ6l+dOMaFOQoNW0QVbmV2tyb35NiHGQaKdWH
alxpYDgDdEbIMJ1cf2I5py7qlRoUS8FbvF3D6mxkrH+HK1Lp1XWpNv2eHKXE
5BL9lOBOQl1dlHDWuA7HFaqRJTIIBV0ALioBUMQKUNDCDeCzHfliWL0oxCP0
9WD1bQSKq1NwoArXMfoq6TK9SqOR0RDC6kNbELgwsfogZnUqjYa2swQfIhh+
8fc5H9iy8+/M6lyqffeHXPpMs1Cf6NMEVkfbec79dJGxgtRApQy5iKFcCk0q
iMaeo8YQUKLcyp1i9Rx+D4UR6dVAxpv/0MzqzazezOrNrP6VZvXirxCr53yF
WD3368bqdxMV5QC+Tvy+U6eUpzLvVPhdr0K6lnheabNisBcJNEux00GD/eo0
4nHm9ynM75OR32cxvwdzR1vR2f6bcjPIK0MghXU1dFBTJ7wy+VA+rCXZ9SQS
g8krQ5UVyFNz+zb9BC07XJ4suoobcL265qskEveq2kclJAiFQs9U5K2JgNJv
sKfmGyQmKDYUBX/zdr6oNResAysqikXIFcW4Buz1xeQeTfsaeZIoGxDfTZUd
9MH6DtiWP6K4cB1pibamGrUoLn1ZaATtQ0UCQuvjXpmmrcGXnYqis+ROiY58
O1WdpjiaCvblCOovp2LeBXSRJHnZh+PN1/r7dBIWa6kWi9VjPcAeF9kDQ7Su
xqdI0rOqYSRcTAnPnU+DCd+du4m6Qq9ojDSol0BTgpJUx9tVV7aEkin9ljDj
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
faspBO9kGZUq9q/yyefg4j1oF59PKJMrlXZ2Va/kLdnifODQXrZUDT9mYAG1
7e7z0DTcs0t4nwe/7mZd7bRbMmvev+Ttj1lO36lcj2zU3jXZNNsYZOZGFfqQ
m28Dc+bm27qEN/sdj+LibH9U56j/UEfHiZ2RDmIZV1mZrrJ5pqVmzeEsfAjj
oHndtbEzrl+/xW72Id+ZOlxRfmQ+Tul88hIGjp1QHil74b+U9XnIsepmn/Gd
k3xdyKjVvnAfLi78+zpd+Gs0VxB6PjgOcT4F1Scd4pI5GzMaXlrzFYQ0N5MW
frPco7FUpSOVT26usndazhtVsbrH6YKl0t5e3blm6Z7GzMIXX6C9/3tN27Vo
SGrrBZ+99foUlrsLh/qgKLgwHG8nLTiFl17ilKuWuaCj+pzgonOhwgFkHYos
/PYaUzjiM6bgEXgWlpzwsf+gUqGjW6Cd8WtdlKqbY9Vzzrd+cnjPvNH6tSEG
WLtnRha+LMDSZ07yPgw5/545UakKI/e4wBf2pp1dfV0yM6kNcAcuzL19uPXF
Qwsf/v7SS8k8m3b2+cuT9/6ke2x/BBc/3fvnVoUwcHQx4gs0W/88c98yAq/l
KbVspQOT9/5YoB7rI0npkBtw2ULCgpJyzhdYWPvPYCEvNK072tvNnr377b/l
iQddZ0qKS0x1bQMcVteCnUOQNwJBnvPY4b4vFXQtduhT3qsrKlyFurqnnnjD
ZfFyoiabehxBBryf2CEIwmRN6w3BW4MgIz8XS9188q1BkNl/wskn8j3eEgRh
yWd0rN4aBElK+7x1COL+bf++PaatvcMcOKhnWcMm/D2msrzMlJZVmNb2PXlR
sNlbX2Ju7n2VeXzWKrmb/Sw5WK98ZrLpceXl5oorrzSXXdbd3DdCzjjt+1Jd
csiTQ54c8uSQJ4Y8a2ePNlfeMMQU1e22ONJVVk6BefDW/ubSy7uZK7p3Mz16
9TNLN72cjrk7TWWm31UXmaHTMghUsGmxufics8zND4wyO3btMnMmjTDnnXWW
GTlzWQ6B3k4ItLv5yCBQR92RQaCO6iOEQJVHCIHKjxIEerdZO/NRc8GVfUxJ
oy3Q3ddmRtzZz5x36d/NnOc3mB3bNpqbr7vKXNKjrymsbVOoSaU+YLYsnWvm
zJ1r5trrqakTTI9uF5v+tz1k5i5eblp37zFTHhhiLunZz5Q0OR6sPeax2/uY
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
qtKCTEH9lLrPtYPfYer6I5lfN0Btnike/WVTNP4beIrxVNORZyvjsxB9vcgY
dG4iXNqgD0U1Vrh0ccudmkIN4624TEzbhtOnxbNcK3fKlV2gkks5HajBo3bB
X0zhuK85YW61aDF+SjB41v8D+qoNtTEHvo05UzaaweBBeox6iSUlarc/kkUg
DRdWheAy5b9QA2M7LBehtTKXuW9H9pJepnze6XDBU2lnZX/VPeLiVOCKL5Zd
qjQ5cbfzVdzsjBsm0FMmy72MvPJqyxea5po1UDdDtQ51nPAzuD5k8/YwiHKA
alsO4N+lHPMSXeAsFuROIJnbw1zdGPSJssT1oLrmRPgCL8W3jTTBYZjWEoHb
caFKjS3aLBlIrKjKpm9RCuMMLRK0suJqbxwXcUfl4lO8aGFQ+VgAg62EwVaB
wfa28ghM4/nk7QOjFKlSjqYhxseSPyVhXPAsK3HxWVa6Z4lDsoxL4rO041kO
prrAvuP14vIiLbHJn0xcnpxSelscPzGyeUTnV8PlsZH13Vg0y4559OiVjcsj
9bgT8tnoty7vHjkeszTHChqmrVVcvhHYTFy+IZW2dL73R1yGznH5ThIf5dmy
63L4erNPZNlS2triJ74DBCQWBh4Rv4lKUPjHwOV5p6W0xJrlNGEqZfEfk3G5
f+aQqd+QZfje805pOVftoK6mri8CC3VUUxeMNsVjvmKKnvgWEZl7xBPfUp+e
T2Gt7C/ksA3vEaCKQignXO695a6sswrCPzxCht0XwWnb0pDKVNgOJCu8uJlE
ZA0ynEYctnrFXrVY0NjT3Tjf2JXzB76cv5v1jQcSZWg3DtZSvxCtGFotlIZZ
JQJsHbClTc7QhKBKky5S+G/lnMc5E2rBwDjJDuyK1Gyp2p8sLl9CXGYICPQX
xMJoJakey8P485A9HofX/GRin6xzXe3E5UWqOFmzjri8zmFh3ZYYLtdzj0WN
QRCpMciuak0OEcTZ5CcmuIQLLAfTGuIPLTTMG7ZTxiGwYg7A6bam/BguI+I7
hO3/gSMBYN1BEi5nM9vHhSAgDpG8R0TVOqGzcmi4XOvLCaO1CEm4nO0qZ+8R
a8l1E6avx7gk4zKr5r0+TA6Sc5Ccg+RIFwrc7izW/5U9dPxC7xw/H12QrNHi
IBItPpogWUvBgkgp2NEEyUnlYTlIfltA8l80EsBeKLUKyV9jrCBwEYPx3zhM
SB6QaV9MaYIsMXoxqIupYwWDA+ZjBJK/LDCsMRRuD098U728txySBymRq1UQ
ppX7KiRrK4IjbMxB8muE5DDkyXo5cpCcFL2IQTKTekczJNe9bSG5dAF7gSK9
QTJkddse5gvOc0PLvG20j6Xec/1mcqhc1hRnjOY1siB5++O2dylESIspGGt1
pS4UYDnUV85+73V95EIDplrmXF58yG0gtJ1C8qbbGKjLs8sTSxHtnmH4KJ70
XwJ735brO4BksYDB75rSuaeYMgEigWR6iOCwrFp9PWAYMLhaWRFvTIbkNb2x
xPE99LvJci+d/KNIS638t6m55V2mdmBXfI9BtIPfYUrEQ3claN+zzwfvPgKN
C/+mHAmre/FZeqV0ewAE1/CNOXtPVp1K/StP6Fbq31uevkfZTllXsb4/G8Tw
5+v6Ef1tJlHt3D9zxyoa+xUMlNpxXxMU/oPsYogKWBvq+g1816+cxwXpqxmx
tpZtbNmp8zifMjpMlRIx1IIuKK156UxZT50gBaW6Vqi6vNorWeZSNocJPrVz
T9W2xGWXA5XF4mV1J/LFdw0gX60WDamVewKF65mVsVZ2EcSQBYkVj2ErnjXN
teuhOwpUFpvmz0Bl29GsvbBIq8UVAluK1HNZcSXGL5T6uykWk3fPF86LPpyA
SJOJzNm7xjq/X9DWbjCtTa/gAvqIFfRpetm0Nxdxgue55RVKB6bD6UDSoock
zBCLPqTnm8JYs1wEEn3KxXZX02j8Wjd+jS/hIm7TNu00ba0luJCCo0RfmzxL
R3tV9jPbFGHgUoRttus3rk3E9ztZR86936zxW2xzBrrHrXHPl7W77Eh+vo6q
w0H0RnmkGjinmgikJVNFTPWNGxbohEPs7VheSoueqYBprlyhOqSyZQd++15t
9u9rjSB67abbuVTCbL6U/sKZWoVnacE2rQyyypl/LZ/vDps115og2AawWlBd
kAl82v17mxIRvWrZlczW51meFkAPyh7gHgbeVfxPAaE/RtOBYGsA07HFStiw
ol0QkpU9oPcOIfpecUb/CjWDFDUHYKf/UtD6nS4d2N+lA0vGf9t3ArMGbsoP
TIWgtTtoKM3CuaZadpLqNazRsra33dnux7NYt+sBTV3l6wJRO4lsM01lC1Np
b7GMwzCTR6ZYZM4rAXHPnoMNVR/gLGYoC8cBtwvHQQSxUM4jDB15jgklYEF9
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
raXQj/gBrnxDZZb+YtlJMuRVqHKLa6OwzuTlUeQyCLw481hP4O4740GsEd9M
0CEcrxhDva91u9LWtrHW90D0mcVFVfYDPYXoU8rzbRzo69dpN92c7CpmifXM
SiD7WXHIHcxtbaUmoSCinifiWvJvWCvQrGeOcNXLo/ThcdoI/JljZqLSdDIT
e/zMscu0yyDigY4z8QoNuVm4119xVw8UgT9QzLCV9iGegIqlVv8HgkLWJpbc
gPqoNHNzt6JfF9D2i5YMofqdQKsFcxZuCSDoYcizsw0VTOrkZ6pJWjGzEg4/
2UDbU4D2xEhNKrs+YkVqcKMsVV3KVeKjdjLuFXP////svQe8HMWVNd7MPAkb
nHb3W+/nXYfP3rXx2sZe2+td57zOZr1eRzICmyCbIIEkcjYGJKLIKCBAgSCU
EEI5SyiAUEBZejnnKL1U/3vOrarp7uknP/EksP1v/359rXnMTNdUV526Vffe
c2Ijq0+gnfp5s/eBvwXEUtp+30P/YMoE9MuZ7qwUaAB88vyEjgjIZxDL5STg
x2WvZFAlAu0f32uaRuGgook0cAK34jN/yZTM/BYg1h5ufItecOUK7iDs1voC
pdaLy1/AdwvnbTJvGDNuNoGWijBFcyhV1cQdv7OglHnN1yGoRQVAkVzFnHHF
BNoSBdqpn0NqIctPAqXQIEte6KQJ1BvV60bElCgutyc8uZMmdCELF5iF71Jf
p9n9Y2gvi5y+2pej7lGty+zSQbUnUPett7fHb4NMYBnjFp6aJzYEFzgu+qPp
urmTOh6nxIWFoFhh2eHCTD1aWBEu8lifv78V19fttbPWtlEkqzfa5oMNtlDL
cvzZ6RBnVPSPXZz1TEix2gkQeQW+YvvYK8khpNatr3nFFkWh9TVL4G2zrGrR
Q+QbY6BvFVgi5zqPJvgdsxLV05IZ3vbjIsztDzSzsN265+/ybanNUynj0Ldu
bca7tTOxDYxuCCtW2IxGFVajTTxP2uuZ5T6QImuKrCmypsh6FJE1ntCWImuK
rCmypsiaImuKrG8ksu4Yx4Lj6o0s0GEVLIleUaBjSUQ1VnC4x65hZE04dl1x
MVkYw1wROBdzHBCOXyApeWHAx65TPmf23v9OYOqDf0f7f0zZnB/Fjl2H47A1
wtQIUcV4XX6/j117ukzLLe8xTSOIqQ5fTSl0h2fogevXiK9ft8eueuBKZsrl
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
S+XKyDxTNwhzar6uWrAl80kEHqFlASFG1Vpc8n2wSvLeVr914POsJBa3LXuT
5lmJTbBjUSAt8gdVfCXXPUiniJf6WwnlSBoIVTUgdkQhaLVweSqWnOG5c87g
PCtPnmd/eL9pHY4z7FaeULSMDHSe3aMzjFbctuJnvgwGH8yz55hCLC5a6czv
5s2z0me+4qgrrFP3CTvP/ovzjHbWd5R7f9FpnGdKsyHzZ+lv8uaZnmEoj4M9
yRjYPAOJx0sqrj3cvm9A84yuIN9h7ZgE+YjDmHZcyuLu4QCmXXE+e0U67Y7A
tBtO7SyI9WStVUGgMz2X4JmHnHYfMK2XctqNODLT7qs5bZtA48YDm3ZD+jw6
fP3TTifcpem0S6ddOu3SaZdOu/8/TLveXp12w2PT7o5jZRv3Fkw4tfe+Fdqf
nHAZR2XznGzmZsY2czgzPJLTTqbxEZ12Xa1Hdtr588YjNe2ajvC0a3pzp12V
pTAL55mWMGfbk2YGSggIik3UNBTYc8k6Dv9HfaHUo4GV00D3ho53LY0Ya0wy
rtLklZvypx0qMZgzbDPE9cfn1fVBMDjOr8lKlli1CKcciqpY76K2YvGZzMZ0
4f/TYtPOpdX3JiXRJJyRAjW7Y0d+zBHvqPHHirRtFbxPF2nDukgb1tVajkNR
01uP7HJra/eY5lveZ5pGZeR9ylLVeGXGFN77TrPv/nfJK2sf+Bue1ZTM/C6m
+0x/xDn7h5zu73XwwSPTSrkXzsi6eEbW2bRPj0xtwMBps2PKl87+Hia/2jnf
V503AacMrZI7QkYRv/6fwvfQ3+x/b2fzoY9Rs14Y91zwYZMSMuPoIdeNZE0l
YMHfo7fH9jPPnWl5tEp2QAsSgQ1DkI81LOl4g83lCpWibB7DegFARfgePPPu
5Hk3bVdrqT1ujYUr7HFr1lmUk9iEmHAeWGPRLMJH5B55R7AVJp5Mo0ewcdq6
57zIbCQPqHIVvz1yj3CyF36HzPPG4nlRsVwcIeVVCC3zAroZt/BWrRGY2TYQ
mGlv2R+jRNeyVgicaTWlKy97wR2RIs1fj0elu8EHFuYxrX7lei+slnV2A3g0
r8SFU3WxWa4kXbaQycFMqyAm+U1DZcE43cZ9wxE8VOnES3sRCYszTXKVnP8r
F0mjxTQsnfU9XHhF29VSnAcz8G5Qj9hEkFVbT28mekTMIc3fdpX+UkwdmV4K
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
q21r2GnaxDuQC+2jzpUKXZfmSOoHmS7OgU5xk+te+aOpWXeVPnJtljRK8FCz
xawdS5X5BjpMzk41TcUvmKYSBLKdnW9aqtaYFup9O/uSaQX1RwNyslpz4WyM
ZY5qZ0vywtnAhe6OatNFNYGu9irpSvm36ZL1qmHnI2gX+uw+7Tlp4hNIXmDj
1E6RJs6VZs1j49S+KE1cjWaicdautU3cxiaqoMBr0qRCNJONU1vMKHJHe3WQ
tRbRVwel4aWo+2BOPL5eJe7Z9EZ6gVMLXF4FmAmQ5sTMtiZmtjWVJjSxGk3c
6hu3zU6f/ClV5DUPstaqbnpcH0Ka2NmMC00UqzoXIA1oLlsgDW4m+sm/9Ynm
tSW/u5K1IJLaYiJon2NTaCMGw3YdqOd9IiNJkN7dN+vt9vw+oFPZtwbFu8P3
FW9NLuLyAfZBM7/TjVNaWT36f4+6CNqj33t6OnHhHtZ2+T4YfHgo/h/2bwfH
fNJ0XCxO5fBAbg8rXTssML3lm/mOT4RuL9hjE+NLnv1yoCnzXa1lkfdh71nz
0iikXcn3uXSc31C3pudgY3Bi2EnYeofs3G8MIBFD/clNNzKRs6erI/c+6VbM
xvpd44Mcscl4phbJvta/D4shnYlI4uQcIp00KvI+5Rhay8w4uuHVa0yrOIt4
R+59BxKdckyVyPvkd+jimrwXcavl4T6WO/7NH41k3AHJ8IALWt5jmX+KKX7m
i4GTDUIGV1dLSf5jWXc5H0jG55qda6pW/c70HGiIPZY7+UAyntrrJlY4iE8T
eyxPer4ZPXCZQKDslbEZfSzz8kQ4m8VflzfGHoseI2X8YdLa9LGkjyV9LH+p
j6Xzjk+bA7K2HODacoBry4Fhucfibm8fCR9IJuGxnGgbYR+Jk6RMfiSyOe7X
I5GltF+PBJno/XokB/r5SA7285F0HslHcqz/2i7+pIgXAfWsWPoiqDpVlayO
r2DpL4tnIhdf0Yqv3SXN0l2A3Qs07zedTXvlwpZG7cH67eZg3Wu48Iq2p1w2
Z6Wv4JKfCCve0JgTTPOIwDRfjiHTzLqV5lEB34tfcIIbWs2FprNhl+nktkRt
xYu/Us63576BYaTZfDO+6YfRR0Io0CV79i6ycqntlO6vgRqtzHWZ8SsZaFh5
nqla/XsOrxNCn3X7iKy1ndIH6sqo/J4GJG5mfQeGnP8sPGXt11CfVthhqLxy
qsM5kXsiDMPIZ+llUzOOlimmsgmJq6k2ly3h0Ax/Ns8rlk2FqpqGCgSwv6rb
HOnnJM+2S9qRFN6BZxv5bILH2iXtONTR7esc1vi4Rmp4xMFH2iqPvblqleyf
cVbdVK7Cnot5DOXpl2nHm5pX/sAYTYEl1CYrK8RvQ0nl5aAYhK768z+Se8Bm
xf7YFEF7fcIHA2i0fwj2sQ+Z1lEFpvNCDN6DF5Gt9pbA7B1zjNk3+hj5LGzW
7Ls9MAerN+UNzYoXf83irAJT8gyOc8tQ+PD8Sbh4X1BGQj/ded7us0C+mrUj
SRZZwOKHY2X4Xqjsrf660FS/NFw88dyQBhLWbR4DNl4WSNwIpFVxxNB1G482
kWPsPyfDAuVVdbvG4ch71/gCf7r3BM++w+MXY8i551mTq2vKS83G4UTF8sj4
VWhFaruWyqyx0JqXSo0DjPqtkTHIFbBhB64g6+1OT42a8cGpXdyURz4bWhUL
YAt8pKhU9uw1R2fArs4N1cAWFQk++KFKO0FZ4F++DgOWQVsK00NNOlRFUv7i
/8pA+THkWzFw5rqBU/TkiVCxDpyCdeGkD5vWK441nRdzwF6iA/aY/g9YLN9P
fwEDltTRhzVgX7qcQ7UANRuHM2C33MGhWoCoxmEN2CcwVDlgJ/zpATvPr/iu
FLr/A/Ylv7tca8E1HbDpgE0HbDpg0wGbDtjDGbBrckM1sJTGeybnhirtRFUm
kKFaYNXSK1ddaHfJuayp8vlQHj8J6uMYOC9Q0/2Fn5iiyZ80+zlU90/6COzj
H+GA7aL3qsO25A/iw44OMEgxYG/H3/bdlhuwro90sH7e60jogP0BfWW5OGB/
zAF7kh+w7rN2sHKoZg9nwPb2vL4BKwO9/wNW3vz6B+zBAQzYgwMcsEWM+mLA
Fhf48H0J4k4DGrCyh9b0s3CBeiHT63xRaqC5DtjTRuUnHmYlLxLPHDNRxfJz
waAQqTTGwCmd+S25yI0/k9z4M//LlI77sCl98H149dD7YR9+v2m8erBpHYFh
2TqSA3bMcWbfvW83++95u3wWVgb23W8zHVUbuRstQO/I36gezr31nzr/qLJn
ILm9f1dbqT0DCZ1/yD6YZyDsEdhjcUJhOuWZ5a4del4h06PApjkCwZFrBGWs
DG2WvCNdrRr3/2BoRUDcspNpiZ1MS8T9uPmTKVPAyS4TZ80lypXhr0tM9boR
nDjh7+rm78qd6fA8Y4tsCF+5GZNp0x8wmfAaE8xfY5gaiMnkv4vnG1El+662
CjvBJnCCTSwI6cEgnxQTLPIFnZCa5yEHbWfokCPr7bx87QgkV1Su5KSLfF9X
mxWFt9LwqI+N5avyNUrkw+wGSMap3xbteB6GROXduw42czLKpdOSdleiBobT
pwh3vh7GHdSpilZ2t/twYAFsgQ8SV5mDVsHh9U5YaVNL7auRHNKWui3UGPHF
74HSgYGLyUXlnL5LFVwgV2BPex7IGEzp7O9jCs7+Ae0PxfX5Z7P/4f+L6fbI
e2AffY9MTkGeywKAkEzRY03RbceYPXeKC3SHuwJTPOWzpmQ6836f/RrsM19h
9kNrWympTBAuxTMW982viLCIBZLsJcQThTiiaujk8oM5CVb/HisKXtGC3kA1
g3KSbTxExAomLleGFkD0I52gc/9bp2qgObQVy87BhQwYsVmSwXTbw6zcuOk2
1WtHOGDj+6pWX6SyZmsuDigSJ33CfOGXrw9d1zFpr6ezyX9X7rTmep7W3BBY
+jHI4G0eLe3I0XtRDm079Xi85k/9zvHIZ819nywu4LCq28ETsR3qBI9TerVw
spZ4HA1FMyiElvGiaDN4qIM4bO77DjANwfHCOHYYt0hmvV1oGVmYVGjlFFaY
FpmL4TlMTw8EPTHyG7dwZr19WSnJ6pFKAEseFdPWuDvyLNT7i7GgNOzI08rh
/D0Ek4n/vtACm5Rc9Xd/7lP1X2SqcpI+8o+cqv9oGq8ZZNpGcKqO7HuqfsZx
rqha4zNfTpiqq5SNxLqtSwJNpHEyR1lr2f6YXBP5k+jsuekhk3PJGZYLKsfG
V/LcN3BMivtjqj7z5SMxVV8a5d7BHhzQVN1yZ8gpPRJT9QnuVAvg/g96XXNz
Xp+HsK9vbkaTmfl6QHMzxsGRzs10bqZzM52b6dxM52Y6N//y5yZKGLdwblLK
sW4rNeD8rAy0pA+1LH5WBqruXIUDTTcrac83ZS/8jymdw1k554e0P8KZu5+V
/wQ77p84N9u5/WzjCVHRrYHZcweC8jjMhM2a4smf1q1fWAb36S8lzM/VqiAd
Ks9EvkaciJK/IaYCTWZmzgkKqdKWLznTskzn6qF0fn6RKQCZcCLA3JN8nOGk
QEt3K5adjYvz82zOz3NkfurR3ods39u5yZmZOeT8vEb1/Px1LaVeI/OTh639
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
0+brPKQDGxdR/wHJdOk97aN0NtEiNZOSR79KzeqXG4qzKXkAj0emLo/n+Pal
FB03mK4+qDa3X5k6R0K/l2jzobPmc+1Pf5X6J42ie6UBvBKoLaWM9IUUFxNN
0f1jaPbiXfoCfk1/0/XluTRv+hh6KWYk+6uCp89See51GjUkjhKHjaYNmzbT
isWvqod3FM1etknd2zysLtq9Zq66GANoQVo6rUl7nWKi+9GC9XvZU0jS7843
zKIpKcobHkiHLxdaDmvBzbPqkkdRyiTlemxar6Z6ogLhRMqrDOjp/llqLLtP
M0YOBt/XbtxMC16dqtzlaNp08Lx8TQ+7KHP9QuoXFUsLV66ltcvmK8JH0dzV
O6mjhyx3rEv5KmmvTlSgT6TlazbQagXG2P7RNHflLvYJgrTopssnM2lgbBRN
X5DhYn9d0W1a+PpSyitr0uPrS2W5dxRAFlNqairNmDmbMvafoMaWDmuCdrY2
0PHMLTRrBv/zHNqeeZwC7V2WG1/x4DrNe+11dRNU+aw/4Zsj58YFWvL6HLzr
ouXpdK+wIkn/c1NVIW1Zm4Z/mjl7Lh08+bZCbI85YVuATigCzZop49my9zg1
tnYN1f/c3FBJu7el0wz116nqn7fve4v/2XIkeaKc3r+J1m054Xv6lZ7vv/0/
TTEFaQ==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stochastic dynamics", "Subsection",
 CellChangeTimes->{{3.739020597201537*^9, 3.7390206003912067`*^9}, {
  3.740339298331648*^9, 3.740339300609028*^9}, {3.740340967314986*^9, 
  3.740340967960235*^9}}],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",
 CellChangeTimes->{{3.739100323505899*^9, 3.739100325239664*^9}}],

Cell["The state of the stochastic process", "Text",
 CellChangeTimes->{{3.741003661494039*^9, 3.7410036760542097`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "stateDD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateDD", "[", 
   RowBox[{"pars_", ",", "t_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"stateDD", "[", 
    RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "=", 
   RowBox[{"v2m", "[", 
    RowBox[{"pars", ",", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"TMtrxDD", "[", "pars", "]"}], ",", "t"}], "]"}], ".", 
      RowBox[{"vec0", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}]}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.739020606576603*^9, 3.7390206265730553`*^9}, 
   3.739020692334969*^9, {3.739020782642788*^9, 3.739020882248209*^9}, {
   3.739021125600603*^9, 3.739021129587159*^9}, 3.740340062213086*^9, {
   3.741003532580999*^9, 3.741003535656907*^9}, {3.741003578357347*^9, 
   3.741003578557255*^9}, {3.741713099518054*^9, 3.7417131095293083`*^9}}],

Cell["Distribution of the total population size at time t", "Text",
 CellChangeTimes->{{3.741003653079632*^9, 3.741003678850259*^9}, {
  3.741003744399356*^9, 3.741003749470797*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotDynDistDD", "[", 
   RowBox[{"pars_", ",", "t_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "x"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"x", "=", "2"}], ",", 
       RowBox[{"x", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"x", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"stateDD", "[", 
             RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"x", "-", "i"}]}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"x", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "out"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.73902109276735*^9, 3.739021137087207*^9}, {
   3.7390211700289907`*^9, 3.739021237091991*^9}, {3.739021270663652*^9, 
   3.7390212875178947`*^9}, {3.7403400384521637`*^9, 3.740340047240601*^9}, {
   3.7403401219890614`*^9, 3.740340155891305*^9}, {3.7403402013516493`*^9, 
   3.7403402284180317`*^9}, {3.741003624719468*^9, 3.741003624923723*^9}, {
   3.741003698184313*^9, 3.741003699599831*^9}, {3.7413676529228487`*^9, 
   3.741367653091207*^9}, 3.741713140999723*^9}],

Cell["the mean of the distribution of n Total at time t", "Text",
 CellChangeTimes->{{3.741003653079632*^9, 3.741003678850259*^9}, {
  3.741003744399356*^9, 3.741003765926774*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotDynMeanDD", "[", 
   RowBox[{"pars_", ",", "t_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"out", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"out", "+=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "+", "j"}], ")"}], 
            RowBox[{
             RowBox[{"stateDD", "[", 
              RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7390265926990213`*^9, 3.7390266667323923`*^9}, {
  3.739026700258998*^9, 3.739026747288316*^9}, {3.739098812830328*^9, 
  3.739098823150846*^9}, {3.74034003158534*^9, 3.7403400329837027`*^9}, {
  3.7403402513029337`*^9, 3.740340252950741*^9}, {3.741003717933251*^9, 
  3.741003718101544*^9}, {3.741003768664587*^9, 3.7410037777082*^9}, {
  3.7410042058886633`*^9, 3.741004206040056*^9}}],

Cell[TextData[{
 "The allele frequency distribution binned into multiples of ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "bin"], TraditionalForm]]],
 " bins"
}], "Text",
 CellChangeTimes->{{3.7410038196824503`*^9, 3.741003843368396*^9}, {
   3.74100411932761*^9, 3.741004126733697*^9}, 3.7417133809548473`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFDynDistDD", "[", 
   RowBox[{"pars_", ",", "t_", ",", "n0_", ",", "bin_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"bin", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"out", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{
                 FractionBox["i", 
                  RowBox[{"i", "+", "j"}]], ",", 
                 FractionBox["1", "bin"]}], "]"}], "*", 
               RowBox[{"(", "bin", ")"}]}], "+", "1"}], "]"}], "]"}], "+=", 
           RowBox[{
            RowBox[{"stateDD", "[", 
             RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";"}]}], "  ", 
        "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "out"}]}], " ", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/c35Kee8268dn8W9BtORMVflQfSZjfEKIPr0575s
EJ0Wz5gLorfNZysE0R3PTYpBdCjrsXIQPetMWDOIrrpwqQNEfzi6owdEz/w/
bSaIzjm9bBaIlnqpvBRER23/vhxE8yYpfJ0PpKN/uYJp+6Ob/4PoFUw6rAuA
9J8CWV4QbRfRJAyig8KOSoDoE6b3wHThZz9lEP0mtloDRBtI/tQD0Vo7TG1A
dNl9LlcQ3XHigxuIZnp0JRFEl/CIJ4HN4W7jULoHsueRIIg+0XqIKe3+a8eX
K06C6ba5xzhAtGblRB4Q/eJnsBCIdnhuKgqiU/ymqYHojpNN6iD6r72CDoiW
OPraAEQDAM+Zx9c=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFDynMeanDD", "[", 
   RowBox[{"pars_", ",", "t_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"out", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"out", " ", "+=", 
            RowBox[{
             RowBox[{"(", 
              FractionBox["i", 
               RowBox[{"i", "+", "j"}]], ")"}], 
             RowBox[{
              RowBox[{"stateDD", "[", 
               RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739026174387374*^9, 3.739026200053347*^9}, {
  3.739026260417988*^9, 3.7390264206298018`*^9}, {3.739026459127705*^9, 
  3.739026460050232*^9}, {3.7390988525418043`*^9, 3.739098854599061*^9}, {
  3.7403403803705378`*^9, 3.740340410841455*^9}, {3.741004192121726*^9, 
  3.7410042154405107`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Dynamics Plots", "Subsubsection",
 CellChangeTimes->{{3.739100329278948*^9, 3.73910032999163*^9}, {
  3.7410042331450872`*^9, 3.741004235515458*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotDynDistPlotDD", "[", 
    RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"0.5", "-", 
         RowBox[{"Reverse", "[", 
          RowBox[{"nTotDynDistDD", "[", 
           RowBox[{"pars", ",", "t", ",", "n0"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmaxN", ",", "\[CapitalDelta]tN"}], 
         "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.73902123815725*^9, 3.739021362754805*^9}, {
   3.739026882462661*^9, 3.7390268846244698`*^9}, {3.739027204071711*^9, 
   3.7390272091091747`*^9}, {3.73902756257193*^9, 3.739027578172523*^9}, {
   3.739027611624473*^9, 3.739027626330061*^9}, 3.739098840293116*^9, {
   3.7390993907805634`*^9, 3.7390994035672283`*^9}, 3.739100306901404*^9, 
   3.739129329250803*^9, {3.741004346751954*^9, 3.741004367998273*^9}, {
   3.741367808153664*^9, 3.74136780835767*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotDynMeanPlotDD", "[", 
    RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["t", "\[CapitalDelta]tN"], ",", 
         RowBox[{"nTotDynMeanDD", "[", 
          RowBox[{"pars", ",", "t", ",", "n0"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tmaxN", ",", "\[CapitalDelta]tN"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7390267505273438`*^9, 3.739026793768496*^9}, {
   3.739026841259755*^9, 3.7390268453100367`*^9}, {3.7390268759805717`*^9, 
   3.739026931144088*^9}, {3.7390276391627817`*^9, 3.739027642503805*^9}, {
   3.739098826307082*^9, 3.7390988307386827`*^9}, {3.7390993223100452`*^9, 
   3.739099326070757*^9}, 3.7390993936326714`*^9, {3.739099585597157*^9, 
   3.739099595140943*^9}, {3.739100179831476*^9, 3.739100182915339*^9}, 
   3.739100312185252*^9, 3.7391293274877663`*^9, {3.741004230747607*^9, 
   3.7410042685398273`*^9}, {3.741004320706829*^9, 3.7410043363463*^9}, {
   3.7410050088206472`*^9, 3.741005013118924*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotDetDynPlotDD", "[", 
   RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"nDynDetDD", "[", 
       RowBox[{"pars", ",", "n0", ",", "tmaxP"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["i", "\[CapitalDelta]tN"], ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], "+", 
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}], ")"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "tmaxN", ",", "\[CapitalDelta]tN"}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.739028561256895*^9, 3.73902856904879*^9}, {
   3.7390286216942787`*^9, 3.739028623783659*^9}, 3.7390287289573097`*^9, 
   3.739028774470228*^9, 3.7390988384132013`*^9, {3.739099333876894*^9, 
   3.7390993812488413`*^9}, {3.739099431900242*^9, 3.739099493209257*^9}, {
   3.7390995242830667`*^9, 3.739099566566815*^9}, 3.739100309521144*^9, 
   3.739129328380821*^9, {3.741004380424292*^9, 3.741004428963469*^9}, {
   3.741004463269876*^9, 3.7410044778865023`*^9}, 3.7410045716668673`*^9, {
   3.741367811241625*^9, 3.741367811442109*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AFDynDistPlotDD", "[", 
    RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"0.5", "-", 
         RowBox[{"Reverse", "[", 
          RowBox[{"AFDynDistDD", "[", 
           RowBox[{"pars", ",", "t", ",", "n0", ",", "10"}], "]"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmaxP", ",", "\[CapitalDelta]tP"}], 
         "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["tmaxP", "\[CapitalDelta]tP"]}], "}"}]}], "}"}]}], ",", 
     
     RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7390260402304068`*^9, 3.739026154356615*^9}, {
   3.739027665912112*^9, 3.739027667483234*^9}, {3.739027864293002*^9, 
   3.739027939051695*^9}, {3.739027985142706*^9, 3.739027985962234*^9}, {
   3.7390280166579533`*^9, 3.739028064112955*^9}, {3.7390281082314043`*^9, 
   3.739028126889895*^9}, {3.739029060324559*^9, 3.7390291066429157`*^9}, 
   3.739098770132526*^9, {3.739099650947085*^9, 3.739099672831612*^9}, 
   3.739100284125641*^9, 3.7391293337428617`*^9, {3.740340459922958*^9, 
   3.740340465650865*^9}, {3.741004669584037*^9, 3.741004730730626*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AFDynMeanPlotDD", "[", 
    RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["t", "\[CapitalDelta]tP"], ",", 
         RowBox[{"10", " ", 
          RowBox[{"AFDynMeanDD", "[", 
           RowBox[{"pars", ",", "t", ",", "n0"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tmaxP", ",", "\[CapitalDelta]tP"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739026490151*^9, 3.739026544597939*^9}, {
   3.739027681052553*^9, 3.7390277499874983`*^9}, {3.739027804559183*^9, 
   3.739027813219632*^9}, {3.739027959737627*^9, 3.7390280126294193`*^9}, {
   3.739028078274789*^9, 3.7390281314081593`*^9}, {3.739028597896106*^9, 
   3.739028598629673*^9}, {3.739098871412956*^9, 3.73909887319772*^9}, {
   3.739099050154776*^9, 3.739099055018956*^9}, {3.739099684431258*^9, 
   3.739099697237843*^9}, {3.73909982522227*^9, 3.7390998392057056`*^9}, 
   3.739100279690732*^9, 3.739129334826911*^9, {3.7403404764149*^9, 
   3.740340514078746*^9}, {3.741004751657447*^9, 3.741004781723948*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFDetDynPlotDD", "[", 
   RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"temp", "=", 
      RowBox[{"nDynDetDD", "[", 
       RowBox[{"pars", ",", "n0", ",", "tmaxP"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["i", "\[CapitalDelta]tP"], ",", 
           RowBox[{
            FractionBox[
             RowBox[{"temp", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], 
             RowBox[{
              RowBox[{"temp", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], "+", 
              RowBox[{"temp", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}]], 
            "10"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "tmaxP", ",", "\[CapitalDelta]tP"}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.739028561256895*^9, 3.73902856904879*^9}, {
   3.7390286216942787`*^9, 3.739028623783659*^9}, 3.7390287289573097`*^9, 
   3.739028774470228*^9, 3.7390988384132013`*^9, {3.739099333876894*^9, 
   3.7390993812488413`*^9}, {3.739099431900242*^9, 3.739099493209257*^9}, {
   3.7390995242830667`*^9, 3.739099566566815*^9}, 3.739100309521144*^9, 
   3.739129328380821*^9, {3.741004380424292*^9, 3.741004428963469*^9}, {
   3.741004463269876*^9, 3.74100451494611*^9}, {3.7410045810892487`*^9, 
   3.7410046098699007`*^9}, {3.741004863174999*^9, 3.741004863442384*^9}, {
   3.741712060461344*^9, 3.7417120606584578`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Combined Plots", "Subsubsection",
 CellChangeTimes->{{3.739100376940053*^9, 3.739100380392331*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotDynPlotDD", "[", 
   RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nTotDynDistPlotDD", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}], ",", 
      RowBox[{"nTotDynMeanPlotDD", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}], ",", 
      RowBox[{"nTotDetDynPlotDD", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}]}], "}"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["t", "\[CapitalDelta]tN"], "+", "1"}], ",", 
           RowBox[{"ToString", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmaxN", ",", 
           RowBox[{"\[CapitalDelta]tN", "*", "10"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"ToString", "[", "i", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"nMax", "[", "pars", "]"}], ",", "3"}], "}"}]}], "]"}], 
       ",", "False", ",", "False"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73902686981065*^9, 3.7390268905689173`*^9}, {
  3.739026938105813*^9, 3.739026941191844*^9}, {3.739027001127503*^9, 
  3.7390270799158497`*^9}, {3.739027110547812*^9, 3.739027201455389*^9}, {
  3.7390272916698837`*^9, 3.739027330986107*^9}, {3.739027373879216*^9, 
  3.739027558165571*^9}, {3.739028781288493*^9, 3.739028802551396*^9}, {
  3.739028840108899*^9, 3.739028841148714*^9}, {3.739100195673394*^9, 
  3.7391002477597923`*^9}, {3.739129322341218*^9, 3.739129324760798*^9}, {
  3.741004888982462*^9, 3.741004991820899*^9}, {3.7410050418092833`*^9, 
  3.741005044287969*^9}, {3.7413678255235233`*^9, 3.741367837138506*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nTotDynPlotDD", "[", 
  RowBox[{"test", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.741004955611136*^9, 3.741004972821864*^9}, {
  3.741367826473668*^9, 3.741367826672862*^9}}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJx1Vvk/VesX1u0aUiFDXaKQKdJNIZL7cDOElLoHDVzqllLSqIE0uBF1ZRYS
DSK6pWhAFIqQFKkUlb3PPufs4ZwyXA1Kvvv7B/TD+3n3Xp9n77XW+zzrXctg
3bYVG8bKyckp8UuLX/9/jiTaYlP+lMHJy/9a4j4ZjBZf7Gq3k+Lib6trcrQ4
HO0/r6cxj8Nb+YHch/NZ5P/6bU3qfA6ya3/KXgg4lI98UEv1ZaG2/NeyNlMp
LFtedRUskuJjnVaRixmHoSaffVt9pJgbHFgiHyaFw6ftrygvDiU2nq+MQ6SY
kBjO5h6RoqH9SWL/nxyCT/qY5u+TYnO74fjhNCmKYrf9abyNw7ziyd/ME6QI
NnO+EFYgRVZx6rpL0RwWSDIisrOkuLDEN+1+uRRlzWEGVic4nFb9rLC+SArN
ZK+MvfVSvApcPd08i8O5S0HuT29K8dLA8MXjp1LU9o/b8LSAQ9ZAMC3/QIrK
LWSL7K0UB5UK692ucygNXZg9tUMKz73z5N5LpXjwcqPeuRoOd1pb/prWK0XF
qHJY97AUrU21FNvMYXFw5wut91LoLy5JqVGSQXd2RqX5Cw5N6/qCFL5JcSNJ
8jJrsgyT+nQOric5uDl35A+Mk4F22N29zUgGW69lh3Pec5hgesyiZ4oMxpcH
Z7vMleGXNztmtA1z2HCSGr5vLMNsv7qmyU4y9Nu8c5JT5M+jfealknkyFPxh
9TvtLYNGwrsgKw0pniaOy0h2liHece23ijUyKC82fLF2uhQ/4v3xtb9+nTCV
xpQeJtjLkUb1tPfB805L4Cm36YhiBgOmP2BXyw0GMe6nQqPFNHzL1jaUP2Ex
6UTD/UwZi2K2k9k3zEDRvkN2/guL/W7HPrpO4ZC+ZqWh03ReJ1X1bgHGPP+N
H/Kqf+fQGWprk+3K4lPO91OLPXldBennb9/IwbiofPnXDSymha633R3IoXKz
g9yhSA5pdvJxj/awWPlz5LywcA6NH69PDeT53qWsFnIllgXUn/XpH+Twzmg3
9SWHw6k4jYZdaSzcZe1tOokcctNItqeYQ2ZM22+ZZ1lM9b2SUHSag/zWC7v/
qOBwVv6i3KorLB5fbr47yONSKlS6Exo5XF912UJYyeJJ9egibR6nmJTRmt3J
YWRF3CavRt6v1xx7Ux4XMFNxRSrPa/io/Ne8DhYedXaZJjwuYV6a74E+Dh4u
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
Ru7ldn4O+x+kjiPA
    "], {{0, 0}, {21, 8}}, {0, 1}], {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQoEHCD0B/tlSztyzi0WgfIZHB4++jpz5UxxKJ/D
QWeC+W57b0kHmD7zT9Gt9+2loHwRh4VnxJcfOgXjSzgYtpU8LZGShvJlHCJZ
npze6wHjKzhU6Su1/kqG8ZUcZucLtdqWwPgqDpF/LPOk6mB8NYco/UdH9Vtg
fA2HWA45e8YOGF/L4fML7iWFXTC+jsOyry0J7D0wvp6DtmSGv3AvjG/gkO7N
f/cYnG/owL2k9ohDH4xv5MAYdr58Cpxv7HD9dFrNOTjfxGHpka8s34F8AI6W
TNE=
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQoEHCD0B/vkPUHrZtwWgfIZHLwDrJUqJ0lA+RwO
bRfk5zu8lHKA6Zts+GxJhrEMlC/icD93269zt2F8oD5hPh5rPVkoX8ZB/Jfa
8v2hML6Cw86pJV8aM2B8JYf3/uwH4gphfBWHz9ZnjXtKYXw1B3c57+PN5TC+
hsP23jXHCypgfC2HXrPp3g/gfB2Hd9sXHBKphPH1HMrK7Ap14XwDh0XbD/Ja
wvmGDvpC8i12cL6RQ+qfz6KOcL6xQ3BylrcTnG/i4Hzy3x0QHwClo0uP
       
       "]]}}, {}, {}, {{}, {}}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{1, 
      FormBox["\"0\"", TraditionalForm]}, {11, 
      FormBox["\"50\"", TraditionalForm]}, {21, 
      FormBox["\"100\"", TraditionalForm]}}, {{1, 
      FormBox["\"1\"", TraditionalForm]}, {4, 
      FormBox["\"4\"", TraditionalForm]}, {7, 
      FormBox["\"7\"", TraditionalForm]}}, False, False},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.741362412844219*^9, 3.741368561022079*^9, 
  3.7413685981446037`*^9, 3.741711976247981*^9, 3.741712007796791*^9, 
  3.741712825437788*^9, 3.741713174230268*^9, 3.741713405495017*^9, 
  3.741716784519075*^9, 3.7417168207441587`*^9, 3.741716872308196*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFDynPlotDD", "[", 
   RowBox[{"pars_", ",", "n0_"}], "]"}], ":=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AFDynDistPlotDD", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}], ",", 
      RowBox[{"AFDynMeanPlotDD", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}], ",", 
      RowBox[{"AFDetDynPlotDD", "[", 
       RowBox[{"pars", ",", "n0"}], "]"}]}], "}"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["t", "\[CapitalDelta]tP"], "+", "1"}], ",", 
           RowBox[{"ToString", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmaxP", ",", 
           RowBox[{"10", "*", "\[CapitalDelta]tP"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"i", "/", "10"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "10", ",", "2"}], "}"}]}], "]"}], ",", 
       "False", ",", "False"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73902775171004*^9, 3.739027781601762*^9}, {
   3.7390278564536543`*^9, 3.7390278593402576`*^9}, {3.7390281512715282`*^9, 
   3.739028165833247*^9}, {3.7390282074183187`*^9, 3.739028212416668*^9}, {
   3.739028476339081*^9, 3.739028516736415*^9}, {3.739028891736416*^9, 
   3.739028893239809*^9}, {3.739030747921465*^9, 3.739030765507917*^9}, {
   3.7390997439887457`*^9, 3.739099766900242*^9}, {3.739129343191937*^9, 
   3.739129346867207*^9}, 3.739129662662139*^9, 3.739198816018517*^9, 
   3.740340524563833*^9, {3.7410050567689943`*^9, 3.741005069581052*^9}, {
   3.741367827401557*^9, 3.7413678350772867`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AFDynPlotDD", "[", 
  RowBox[{"test", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74100507627297*^9, 3.741005079315309*^9}, {
  3.741367828385243*^9, 3.741367828569717*^9}, {3.74171209754683*^9, 
  3.741712097684717*^9}}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1: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
/43/b/x/4/+/jf8/yh1UPg==
    "], {{0, 0}, {50, 10}}, {0, 1}], {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw9yV1IUwEYxvHTB0MKcdlEoS2rjfxgNXOpa6l7dG5T17ZqlNGwYm2kF6FG
EFHkuSgI8kYZgrBKq2HJtpT0JtC+IGqImRFkMMKLVablYdpK3WZW5z0PvLz8
+G93Nh12r2UYRr16fz+t79824L84nalDIuVupfFmMK+57Oe6xLxTELdEMric
TbzFCLYkevO8ZAn6p4rEnQlyFlz9X3Ov2NJ5S9F439Jd7yFvQ6bDWmscI+9A
27HP7liSrIA30NQTydnMeycm1kjWH6wl52Jk5qRVd4acD9WLkmhHK1mJ9Jvh
UZGHvBsz2mfjGh+5APHS5KvAI/IetA2OHn//hFyIul3B06khshqnrLaxexPk
vcg8sDgfniQX4dvsgpf7RC6GNmJ/uDFCLoHKnN11dJqsQbHsAxudJe+DveGi
YXmOrMWAbOjI9Sh5P+ShaVdggVyKJb9x3aUYuQyiLUOylV/kckwmnY2GRbIO
iphypG6JDFhq7jjLl3mzwNTL72YmTr0CN8Tt9rtktgI/ze0uZYJ6JeYyzvXc
JrOVaBEprjJJ6nrIToR/HyKzegQL/Oc7hV4FtaM5ZVzoVdj69k0zs0LdgNYL
3fI8MmvANbnKYRa6ET/ePc5uELoRH+vP2lihm9ArTfN5hG7CF/eDYZ/QqzFg
0MsGhV6N1Kxw4VOh16Ds+WtHaNV/AF0/124=
       
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJxdzjkKAkEQRuEfIzEyMDCYQEVERAZ13JeZctfUIwjGXsHrOHo4j6CDKNQr
aJqP1zRVPV9Pl5yk6HOy+zePNJuCffVKUmfZ3Tlvvhft6VyCy3AAV+AaXIcb
cBNuwW3sG8IduAv38F+E3kcfoA/RR/AY7yfwFJ7Bc3gBx3ACm/cN1hId1god
1hod1gYd1hYd1g4d1h4d1gEd1vHvN2h+9/8=
       "]]}}, {}, {}, {{}, {}}}},
  AspectRatio->0.5,
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{1, 
      FormBox["\"0\"", TraditionalForm]}, {11, 
      FormBox["\"100\"", TraditionalForm]}, {21, 
      FormBox["\"200\"", TraditionalForm]}, {31, 
      FormBox["\"300\"", TraditionalForm]}, {41, 
      FormBox["\"400\"", TraditionalForm]}, {51, 
      FormBox["\"500\"", TraditionalForm]}}, {{1, 
      FormBox["\"0.1\"", TraditionalForm]}, {3, 
      FormBox["\"0.3\"", TraditionalForm]}, {5, 
      FormBox["\"0.5\"", TraditionalForm]}, {7, 
      FormBox["\"0.7\"", TraditionalForm]}, {9, 
      FormBox["\"0.9\"", TraditionalForm]}}, False, False},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.741005080275339*^9, 3.74136241361549*^9, 3.741368561600699*^9, 
   3.741368598550116*^9, 3.7417120147773933`*^9, {3.741712083738983*^9, 
   3.7417120988335133`*^9}, 3.741713180284111*^9, 3.741713406347995*^9, 
   3.741716785149523*^9, 3.7417168215361843`*^9, 3.7417168730297613`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stationary distribution", "Subsection",
 CellChangeTimes->{{3.738512251335237*^9, 3.7385122636196938`*^9}}],

Cell[CellGroupData[{

Cell["Calculating Stationary Distribution", "Subsubsection",
 CellChangeTimes->{{3.7391004085216837`*^9, 3.7391004135963297`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"equs", ",", "vars"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equs", "[", "pars_", "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"TMtrxDD", "[", "pars", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", ";;"}], ",", 
              RowBox[{"2", ";;"}]}], "]"}], "]"}], ".", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "2", ",", 
               SuperscriptBox[
                RowBox[{"nMax", "[", "pars", "]"}], "2"]}], "}"}]}], "]"}]}], 
          ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"j", "-", "1"}], "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"\[CapitalPi]", "[", "1", "]"}], " ", 
         RowBox[{
          RowBox[{"TMtrxDD", "[", "pars", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"j", "-", "1"}], ",", "1"}], "]"}], "]"}]}]}], "\[Equal]", 
       RowBox[{"\[CapitalPi]", "[", "j", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}]}], 
        "]"}], "]"}], "\[Equal]", 
      RowBox[{"1", "-", 
       RowBox[{"\[CapitalPi]", "[", "1", "]"}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars", "[", "pars_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.738512651267112*^9, 3.7385126815971117`*^9}, {
  3.738512717780148*^9, 3.738512724421364*^9}, {3.738512755324379*^9, 
  3.738512780085231*^9}, {3.738603934508222*^9, 3.738603950646862*^9}, {
  3.738609130465026*^9, 3.738609149000681*^9}, {3.738609264205017*^9, 
  3.738609290017881*^9}, {3.738610223616453*^9, 3.7386102634065657`*^9}, {
  3.7386102952973127`*^9, 3.738610375748473*^9}, {3.7391004180897303`*^9, 
  3.739100422464719*^9}, {3.740340583268977*^9, 3.740340606415195*^9}, {
  3.741005583395855*^9, 3.741005588100114*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "statDistDD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"statDistDD", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"statDistDD", "[", "pars", "]"}], "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[CapitalPi]", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"nMax", "[", "pars", "]"}], ")"}], "2"]}], "}"}]}], "]"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{"NSolve", "[", 
       RowBox[{
        RowBox[{"equs", "[", "pars", "]"}], ",", 
        RowBox[{"vars", "[", "pars", "]"}]}], "]"}], "]"}], 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7385127060302143`*^9, 3.738512711506703*^9}, {
   3.7385128004046793`*^9, 3.738512808662706*^9}, {3.7385128477973433`*^9, 
   3.7385128870206614`*^9}, 3.738513186323915*^9, {3.738517833180649*^9, 
   3.738517849335445*^9}, {3.738520574666086*^9, 3.738520578334515*^9}, {
   3.738603941629662*^9, 3.738603946432425*^9}, {3.738604519554234*^9, 
   3.7386045254119043`*^9}, 3.738609866817274*^9, {3.740340611847266*^9, 
   3.740340632137392*^9}, {3.741005570094952*^9, 3.74100557181406*^9}, {
   3.741712105650971*^9, 3.7417121058271*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v2m", "[", 
   RowBox[{"test", ",", 
    RowBox[{"statDistDD", "[", "test", "]"}]}], "]"}], "//", 
  "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.738610586548079*^9, 3.7386105910505533`*^9}, {
  3.7386106354558697`*^9, 3.738610649230851*^9}, {3.738610825952182*^9, 
  3.73861083827833*^9}, {3.741005576794001*^9, 3.7410055769593067`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzd01lQk1cUB3BUSrAqivtSIaCIIApqRaTgv5KOrBrEgmxaKosGFyJGJMhi
IyqbIAjIFqBqVbQaUAqy6ChbNVowFmUUhASy5/s+FYUiKm06dfrGQ2c605ne
mTP33odzz/zO3GOyPcIrdJyOjs74j/Hn+a/1Ev+3XVzSJFy4hEDJmthOZ4EU
Vu0rfRuoFuRXDJdaTqTgUt/ac4JFIMnbwjRFIYcw4nnFBw8KhXPtA3nbSHjY
1zLLQ1Qg9RLMcmMpWDNffxU4lcL1KHvXBDvNf+Y6f+Re2WVvCm/MT0x1s+nG
kDDrtnBNKJK5fnZnuwg0fmvx4FC1Aulz9pa7hHTAuzxKOmssBU4KPT6OQWBo
aNnipEQ5OHLTTmoNBYv7dYfiZ5LgGBaM+aZMCefY8JIsFgUTrtmiI0ISjcK7
y/lxaryq9i/Jz6CQpZe1apW/9r1lqcqg1/9eH9bNHg4xZLzA4VyTgbO+XfAI
mMGe9tALZgybxB0nNHBq3xVz8IMEpWp6jdHdVGzp/d3lwXwS0ZYca3a7Epfy
p/VPaO6E5f5JonKKhCPtoY3VsAbZ/MKcX5tl2rz2e9JFFALfC86ktRIY1LuQ
50ApUOyy2iLDh8KPPD/GJR4J9pXdVXUNKlifciVmHaMwp/tYr4sthdxKEfdl
zj/35k6yZ7tXklAp3xoq2D1o6bxTUeS0B+LPgibpexEwkI7obpstQa7C7c3L
yINwvmoUO8WYwEg4p40TI0V0u6zUntmMiuPdNoscSdhOdP/NNUAF/Zpt1/JV
z7E4OK5DLSXxBYvW4/hYA+mO4hlNoTKk3Xpsu30+hURe9Bj+JQKWewdONp5U
4KZwQDkliIK5oUdL7nkSYczb31vR1Wi0Svaal09hsH9Cskm8Nq8pxFfkSYzq
+ok3lPBUoAHP0KB0TnYvFr/sX1p1oAwFugvG3flF26fQ3gXimX2IZckmuzRV
omXIs9W/TgNiM1PEaulFaWQoX3ROgFmTSyN8QaArqWluKU2GQFZqzPUf7sFd
xMwqtyZR3UHzv2qqwgXxIP3eUBcu9Hmfui/Sej09Ne/SNNhgZrBJVCbFrbCj
5rtsKCRJ5adT+gkkyo1lz9yV2GoJ9vT9FLzkF1UR2n9Rz57UbNCpHtU17lDY
B0EbgdYiD8nTeAVqKGFKytEnWBkU2ijgEYgnhR3zl8kRmU1bYOwnwlpmNef+
Ow0+6XGqXy3ug3Bfje7rzNu4yVjqP61Ig1kDxnaljr0Iog235JXx0d5Qn5tA
I+C56/OVYdOkOPmsYnP6wgbw12fKNowQ2OZT61flpoTFunCW/4Wn2HoldHtY
J4kb2bPpzhUaDBKHUu30ZTitF+wTw6BgytzXnGFPwqw/KceaphrV9bNf7O4P
cdq5MOGv2OipRuJw9Lt5kRLYNiy32DOFBO0APWIwX4n4bgtdg55nqDe62/gq
nEBmzu4R1xYZTNys9/G+a0Pqp19vyCnQYPjLpoL8VgnYD68FjdONhcAiqptx
g0D+2OyitmtijEl+smKvggNGsAvD560GtxUJW7lsCfTcDVOXXOSizuHggfFV
BNzWvedfMVAgyEy3w+9BOwpreyMChkhs0Zthdt2IQG6f2u7JQvmorpaAN5Y7
G0go5HNVj700oFcGHcucKkXeWpLbu1HrGglO3lisgp1xhanj+h6wzPddFp8i
MFaqTnfnylHES3/bevgRGH3tec3aeq+6bY+7ukswrzbHobAmGg5p/E1yLgWj
ZKdLTOVznDn3aKf+7uC/60tipl91ljz7eNfR4dAPZzjQXyCRnhfVwe9C9GNB
z6CzDwLPF/eTYg3klXXH68L7II1kkhmamlFdfwDTTw+H
   "], {{0, 0}, {9, 9}}, {0, 1}],
  
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{8.5, 
       FormBox["1", TraditionalForm]}, {7.5, 
       FormBox["2", TraditionalForm]}, {6.5, 
       FormBox["3", TraditionalForm]}, {5.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {3.5, 
       FormBox["6", TraditionalForm]}, {2.5, 
       FormBox["7", TraditionalForm]}, {1.5, 
       FormBox["8", TraditionalForm]}, {0.5, 
       FormBox["9", TraditionalForm]}}, {{8.5, 
       FormBox["1", TraditionalForm]}, {7.5, 
       FormBox["2", TraditionalForm]}, {6.5, 
       FormBox["3", TraditionalForm]}, {5.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {3.5, 
       FormBox["6", TraditionalForm]}, {2.5, 
       FormBox["7", TraditionalForm]}, {1.5, 
       FormBox["8", TraditionalForm]}, {0.5, 
       FormBox["9", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}, {8.5, 
       FormBox["9", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}, {8.5, 
       FormBox["9", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.738610630762683*^9, 3.7386106502920628`*^9}, {
   3.738610827112167*^9, 3.738610838853466*^9}, 3.73861130903629*^9, 
   3.738611448633789*^9, 3.739029174758987*^9, 3.739030609943701*^9, 
   3.739030815562965*^9, 3.739031225612769*^9, 3.739100459918448*^9, {
   3.740340615550349*^9, 3.740340644044561*^9}, 3.740497233223884*^9, 
   3.740497507962275*^9, 3.740498612530422*^9, 3.741002606835362*^9, {
   3.741005585406272*^9, 3.741005594468244*^9}, 3.741362414072802*^9, 
   3.741368562049885*^9, 3.741368598658948*^9, 3.741712015263735*^9, 
   3.7417121091158447`*^9, 3.741713186479024*^9, 3.741713406504961*^9, 
   3.741716785602504*^9, 3.7417168218040113`*^9, 3.741716873460045*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",
 CellChangeTimes->{{3.7391004359922657`*^9, 3.739100437154636*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotStatDistDD", "[", "pars_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"statM", ",", "i", ",", "j", ",", "out"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", 
          RowBox[{"2", 
           RowBox[{"nMax", "[", "pars", "]"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"statM", "=", 
      RowBox[{"v2m", "[", 
       RowBox[{"pars", ",", 
        RowBox[{"statDistDD", "[", "pars", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"out", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "j", "-", "1"}], "]"}], "]"}], "+=", 
           RowBox[{"statM", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "\[IndentingNewLine]",
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739029200431332*^9, 3.7390292200199423`*^9}, {
  3.7390292551278963`*^9, 3.739029337695829*^9}, {3.739029467397525*^9, 
  3.739029685597262*^9}, {3.7390297757077503`*^9, 3.739029781373611*^9}, {
  3.740340663956358*^9, 3.740340694393018*^9}, {3.741005598524733*^9, 
  3.7410056167722054`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotStatMeanDD", "[", "pars_", "]"}], ":=", 
   RowBox[{
    RowBox[{"nTotStatDistDD", "[", "pars", "]"}], ".", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", 
        RowBox[{"2", 
         RowBox[{"nMax", "[", "pars", "]"}]}]}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739029759733828*^9, 3.739029796018291*^9}, {
   3.739029836713669*^9, 3.739029839171789*^9}, {3.739100475778883*^9, 
   3.7391004934904203`*^9}, 3.740340708446431*^9, {3.741003188474113*^9, 
   3.7410032017995977`*^9}, {3.741005624086548*^9, 3.741005630968657*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFStatDistDD", "[", 
   RowBox[{"pars_", ",", "bin_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"statM", ",", "i", ",", "j", ",", "out"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"statM", "=", 
      RowBox[{"v2m", "[", 
       RowBox[{"pars", ",", 
        RowBox[{"statDistDD", "[", "pars", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"out", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"Round", "[", 
                RowBox[{
                 FractionBox["i", 
                  RowBox[{"i", "+", "j"}]], ",", 
                 FractionBox["1", "bin"]}], "]"}], "*", 
               RowBox[{"(", "bin", ")"}]}], "+", "1"}], "]"}], "]"}], "+=", 
           RowBox[{"statM", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "\[IndentingNewLine]",
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739029200431332*^9, 3.7390292200199423`*^9}, {
   3.7390292551278963`*^9, 3.739029337695829*^9}, {3.739029467397525*^9, 
   3.739029685597262*^9}, {3.7390297757077503`*^9, 3.739029781373611*^9}, {
   3.739030072195467*^9, 3.739030112658246*^9}, {3.740340795689466*^9, 
   3.740340815486328*^9}, 3.740340938766375*^9, {3.7410056599857693`*^9, 
   3.7410056690837507`*^9}, {3.741006426980296*^9, 3.741006450329356*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFStatMeanDD", "[", "pars_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"statM", ",", "i", ",", "j", ",", "out"}], "}"}], ",", 
    RowBox[{
     RowBox[{"out", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"statM", "=", 
      RowBox[{"v2m", "[", 
       RowBox[{"pars", ",", 
        RowBox[{"statDistDD", "[", "pars", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"nMax", "[", "pars", "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"out", "+=", 
           RowBox[{
            FractionBox["i", 
             RowBox[{"i", "+", "j"}]], 
            RowBox[{"statM", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739029200431332*^9, 3.7390292200199423`*^9}, {
  3.7390292551278963`*^9, 3.739029337695829*^9}, {3.739029467397525*^9, 
  3.739029685597262*^9}, {3.7390297757077503`*^9, 3.739029781373611*^9}, {
  3.739030072195467*^9, 3.739030112658246*^9}, {3.739030190520699*^9, 
  3.7390302506526737`*^9}, {3.740340829610972*^9, 3.740340848626472*^9}, {
  3.741005674453623*^9, 3.7410056805329037`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots", "Subsubsection",
 CellChangeTimes->{{3.739100450186627*^9, 3.7391004509055347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotStatDistPlotDD", "[", "pars_", "]"}], ":=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"0.5", "-", 
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"nTotStatDistDD", "[", "pars", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{"nMax", "[", "pars", "]"}]}], "]"}], "]"}], "]"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739029554482748*^9, 3.739029558225601*^9}, {
   3.7390296997965517`*^9, 3.739029745751244*^9}, {3.7390298141602087`*^9, 
   3.7390298269471903`*^9}, {3.7390299061570053`*^9, 3.739029908357936*^9}, 
   3.739100452731143*^9, {3.739100842267119*^9, 3.739100842914118*^9}, {
   3.7404973726944847`*^9, 3.740497450665503*^9}, {3.740497533799975*^9, 
   3.740497534423641*^9}, {3.741006162840917*^9, 3.741006202070208*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotStatMeanPlotDD", "[", "pars_", "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"nTotStatMeanDD", "[", "pars", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"nTotStatMeanDD", "[", "pars", "]"}]}], "}"}]}], "}"}], ",", 
     
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"nMax", "[", "pars", "]"}], "+", "1"}]}], "}"}]}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.739029841652543*^9, 3.739029894037711*^9}, {
  3.739100491026184*^9, 3.739100510114785*^9}, {3.741006206745748*^9, 
  3.74100623439222*^9}, {3.7410063291514997`*^9, 3.741006329496398*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nTotEquPlotDD", "[", "pars_", "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", "[", "1", "]"}], "+", 
            RowBox[{"n", "[", "2", "]"}]}], ")"}], "/.", 
          RowBox[{"EquSubDetDD", "[", "pars", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", "[", "1", "]"}], "+", 
            RowBox[{"n", "[", "2", "]"}]}], ")"}], "/.", 
          RowBox[{"EquSubDetDD", "[", "pars", "]"}]}]}], "}"}]}], "}"}], ",", 
     
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"nMax", "[", "pars", "]"}], "+", "1"}]}], "}"}]}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.739029841652543*^9, 3.739029894037711*^9}, {
  3.73903002618708*^9, 3.739030031684023*^9}, {3.739100544486391*^9, 
  3.739100547936286*^9}, {3.741006240077407*^9, 3.741006258820424*^9}, {
  3.7410062913707657`*^9, 3.741006318816029*^9}, {3.741369179118153*^9, 
  3.7413691794404917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nTotStatDistPlotDD", "[", "test", "]"}], ",", 
     RowBox[{"nTotStatMeanPlotDD", "[", "test", "]"}], ",", 
     RowBox[{"nTotEquPlotDD", "[", "test", "]"}]}], "}"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"ToString", "[", "i", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{"nMax", "[", "test", "]"}]}], "}"}]}], "]"}], ",", "False", 
      ",", "False"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739029898112917*^9, 3.739029912854027*^9}, {
  3.73903003598691*^9, 3.739030038381789*^9}, {3.7391007703363237`*^9, 
  3.739100906054872*^9}, {3.741006334844514*^9, 3.741006347481675*^9}}],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{{0.917794, 0.920966, 0.881936}}, {{0.8644881395630363, 
    0.867977734028509, 0.8351843410933393}}, {{0.828882423637145, 
    0.8325841557217193, 0.8039565122495819}}, {{0.7836419987777017, 
    0.7876132717426448, 0.7642786063967675}}, {{0.68668003847008, 
    0.69680150862544, 0.6844429590673597}}, {{0.5824344895342619, 
    0.6018519925120114, 0.601116772983058}}, {{0.6155603986191517, 
    0.6320239189926729, 0.6275951760688206}}, {{0.7410975717103881, 
    0.7463663917499449, 0.7279403126457111}}, {{0.892916454384331, 
    0.8962366739372528, 0.8601172634197319}}}, {{0, 0}, {1, 9}}, {0, 
    1}], {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[{{0., 6.917126929264373}, {1., 
       6.917126929264373}}]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[{{0., 7.368421052631575}, {1., 
       7.368421052631575}}]}}, {}, {}, {{}, {}}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{False, {{0, 
      FormBox["\"0\"", TraditionalForm]}, {1, 
      FormBox["\"1\"", TraditionalForm]}, {2, 
      FormBox["\"2\"", TraditionalForm]}, {3, 
      FormBox["\"3\"", TraditionalForm]}, {4, 
      FormBox["\"4\"", TraditionalForm]}, {5, 
      FormBox["\"5\"", TraditionalForm]}, {6, 
      FormBox["\"6\"", TraditionalForm]}, {7, 
      FormBox["\"7\"", TraditionalForm]}, {8, 
      FormBox["\"8\"", TraditionalForm]}, {9, 
      FormBox["\"9\"", TraditionalForm]}}, False, False},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.7390299132069187`*^9, 3.73903003874794*^9, 3.739030610298293*^9, 
   3.7390308159642057`*^9, 3.739031226510015*^9, 3.73910055146803*^9, 
   3.7391006180304403`*^9, {3.7391008016117783`*^9, 3.739100906463917*^9}, 
   3.74034089722511*^9, 3.740497403252446*^9, {3.740497528301495*^9, 
   3.740497537155334*^9}, 3.740498612897011*^9, 3.7410026071791143`*^9, 
   3.741006349252304*^9, 3.741362414314002*^9, 3.741368562262945*^9, 
   3.7413685989624968`*^9, 3.741712015458791*^9, 3.7417131866951647`*^9, 
   3.741713406636838*^9, 3.741716785848604*^9, 3.7417168219796543`*^9, 
   3.741716873677825*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AFStatDistPlotDD", "[", "pars_", "]"}], ":=", 
   RowBox[{"MatrixPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"Reverse", "[", 
        RowBox[{"0.5", "-", 
         RowBox[{"AFStatDistDD", "[", 
          RowBox[{"pars", ",", "10"}], "]"}]}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739030114949901*^9, 3.739030164470937*^9}, {
   3.739030301034588*^9, 3.739030302325942*^9}, 3.73910066499358*^9, {
   3.74100301150769*^9, 3.7410030224702253`*^9}, {3.74100636522381*^9, 
   3.741006367997739*^9}, {3.741006480541057*^9, 3.74100648353131*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AFStatMeanPlotDD", "[", "pars_", "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"10", 
          RowBox[{"AFStatMeanDD", "[", "pars", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", 
          RowBox[{"AFStatMeanDD", "[", "pars", "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739029841652543*^9, 3.739029894037711*^9}, {
   3.739030324247993*^9, 3.73903034373488*^9}, 3.739100657572178*^9, {
   3.7410030253588753`*^9, 3.741003043723613*^9}, {3.741006371336646*^9, 
   3.741006373838023*^9}, {3.741006499970316*^9, 3.741006504481934*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AFEquPlotDD", "[", "pars_", "]"}], ":=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"n", "[", "1", "]"}], 
             RowBox[{
              RowBox[{"n", "[", "1", "]"}], "+", 
              RowBox[{"n", "[", "2", "]"}]}]], "10"}], ")"}], "/.", 
          RowBox[{"EquSubDetDD", "[", "pars", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"n", "[", "1", "]"}], 
             RowBox[{
              RowBox[{"n", "[", "1", "]"}], "+", 
              RowBox[{"n", "[", "2", "]"}]}]], "10"}], ")"}], "/.", 
          RowBox[{"EquSubDetDD", "[", "pars", "]"}]}]}], "}"}]}], "}"}], ",", 
     
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"nMax", "[", "pars", "]"}], "+", "1"}]}], "}"}]}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.741006391699844*^9, 3.741006407987488*^9}, {
  3.741006543454503*^9, 3.741006570152759*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AFStatDistPlotDD", "[", "test", "]"}], ",", 
     RowBox[{"AFStatMeanPlotDD", "[", "test", "]"}], ",", 
     RowBox[{"AFEquPlotDD", "[", "test", "]"}]}], "}"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"N", "[", 
            FractionBox["i", "10"], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", "False", 
      ",", "False"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739030385405455*^9, 3.739030393555503*^9}, {
  3.739100674927045*^9, 3.7391007463543787`*^9}, {3.741006574439518*^9, 
  3.741006585890626*^9}}],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{{0.917794, 0.920966, 0.881936}}, {{0.6694407239534572, 
    0.6810994993963617, 0.6706631253570271}}, {{0.6316321975926615, 
    0.6466625251603721, 0.6404417841556627}}, {{0.7759373586464352, 
    0.7799545355897418, 0.757521287324102}}, {{0.7972373738645206, 
    0.8011276460567868, 0.7762023673783335}}, {{0.8690767500313034, 
    0.8725390057149426, 0.8392087607295562}}, {{0.8191108840184932, 
    0.8228708345968052, 0.7953864285195883}}, {{0.8413509080714218, 
    0.8449783533586965, 0.8148919389845775}}, {{0.7004883235443989, 
    0.709378448356172, 0.6954802814600519}}, {{0.7366177076076846, 
    0.7422860167780839, 0.7243594404294394}}}, {{0, 0}, {1, 10}}, {0, 
    1}], {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[{{0., 4.88565371735379}, {1., 
       4.88565371735379}}]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], LineBox[{{0., 10.}, {1., 10.}}]}}, {}, {}, {{}, {}}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{False, {{1, 
      FormBox["\"0.1\"", TraditionalForm]}, {2, 
      FormBox["\"0.2\"", TraditionalForm]}, {3, 
      FormBox["\"0.3\"", TraditionalForm]}, {4, 
      FormBox["\"0.4\"", TraditionalForm]}, {5, 
      FormBox["\"0.5\"", TraditionalForm]}, {6, 
      FormBox["\"0.6\"", TraditionalForm]}, {7, 
      FormBox["\"0.7\"", TraditionalForm]}, {8, 
      FormBox["\"0.8\"", TraditionalForm]}, {9, 
      FormBox["\"0.9\"", TraditionalForm]}, {10, 
      FormBox["\"1.\"", TraditionalForm]}}, False, False},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.739030394010318*^9, 3.739030610748578*^9, 3.7390308164476433`*^9, 
   3.7390312274598427`*^9, 3.739100628270659*^9, {3.739100705144236*^9, 
   3.739100746795244*^9}, 3.7403409520017223`*^9, {3.740497552747656*^9, 
   3.740497555917448*^9}, 3.740498613072825*^9, 3.7410026072799187`*^9, 
   3.741006586841567*^9, 3.741362414538485*^9, 3.741368562452086*^9, 
   3.741368599158874*^9, 3.741712015562583*^9, 3.741713186867165*^9, 
   3.741713406733326*^9, 3.741716785978179*^9, 3.741716822124282*^9, 
   3.741716873809411*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finite vs. Infinite population", "Chapter",
 CellChangeTimes->{{3.7410022627154427`*^9, 3.741002267433608*^9}, 
   3.741002581484736*^9}],

Cell[CellGroupData[{

Cell["N-Total ", "Subsection",
 CellChangeTimes->{{3.741368497151391*^9, 3.741368500134899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nTotComp", "[", 
   RowBox[{"\[Gamma]0in_", ",", "\[Beta]in_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "PARS"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PARS", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r0", "\[Rule]", "0.2"}], ",", 
        RowBox[{"\[Gamma]0", "\[Rule]", "\[Gamma]0in"}], ",", 
        RowBox[{"s", "\[Rule]", "0.9"}], ",", 
        RowBox[{"\[Sigma]", "\[Rule]", "0.0"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", "\[Beta]in"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]0in", ",", "\[Beta]in", ",", 
        RowBox[{"nTotEquDetDD", "[", "PARS", "]"}], ",", 
        RowBox[{"nTotStatMeanDD", "[", "PARS", "]"}]}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.741007022767549*^9, 3.741007147336404*^9}, {
   3.741013784836713*^9, 3.7410137858115396`*^9}, 3.7413630149022827`*^9, {
   3.74136307482302*^9, 3.741363096828137*^9}, 3.7413689831075478`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nTotComp", "[", 
      RowBox[{"\[Gamma]", ",", "0.05"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.741362688768346*^9, 3.7413627012341633`*^9}, {
  3.741362903256435*^9, 3.7413629351659727`*^9}, {3.7413630678773403`*^9, 
  3.7413630688401833`*^9}, {3.7413631206188173`*^9, 3.741363124988085*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nTotComp", "[", 
      RowBox[{"\[Gamma]", ",", "0.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7410071502900467`*^9, 3.741007216057193*^9}, {
   3.7410073051430273`*^9, 3.7410073092303057`*^9}, {3.741008574109131*^9, 
   3.741008609660977*^9}, 3.741010685866577*^9, {3.741010918641375*^9, 
   3.741010923360004*^9}, 3.74101381046441*^9, {3.741362624757495*^9, 
   3.741362625064357*^9}, 3.741362693277239*^9, {3.7413628816664057`*^9, 
   3.741362882972231*^9}, {3.741362937090085*^9, 3.7413629378588333`*^9}, {
   3.7413630701205473`*^9, 3.7413630702321653`*^9}, {3.741363126289187*^9, 
   3.741363127236106*^9}, 3.7413631917346973`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nTotComp", "[", 
      RowBox[{"\[Gamma]", ",", "5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7410071502900467`*^9, 3.741007216057193*^9}, {
   3.7410073051430273`*^9, 3.7410073092303057`*^9}, {3.741008574109131*^9, 
   3.741008609660977*^9}, 3.741010685866577*^9, {3.741010918641375*^9, 
   3.741010923360004*^9}, {3.7410109534685583`*^9, 3.7410109637254057`*^9}, {
   3.7413624896171827`*^9, 3.741362489724896*^9}, 3.741362626338485*^9, {
   3.741362888562646*^9, 3.741362889910142*^9}, {3.741362939085125*^9, 
   3.7413629426607533`*^9}, {3.741363071635322*^9, 3.74136307198392*^9}, {
   3.741363128756012*^9, 3.741363129756914*^9}, 3.741363193116847*^9, 
   3.741363228835424*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"temp0", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"temp0", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "4"}], "]"}], "]"}], "-", 
          RowBox[{"temp0", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "3"}], "]"}], "]"}]}], 
         RowBox[{"temp0", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "3"}], "]"}], "]"}]]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"temp1", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"temp1", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "4"}], "]"}], "]"}], "-", 
          RowBox[{"temp1", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "3"}], "]"}], "]"}]}], 
         RowBox[{"temp1", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "3"}], "]"}], "]"}]]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"temp2", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"temp2", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "4"}], "]"}], "]"}], "-", 
          RowBox[{"temp2", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "3"}], "]"}], "]"}]}], 
         RowBox[{"temp2", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "3"}], "]"}], "]"}]]}], "}"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7410107968006144`*^9, 3.741010894231995*^9}, {
   3.7413625572817297`*^9, 3.7413625913447733`*^9}, {3.7413626947090673`*^9, 
   3.741362726018415*^9}, {3.741362765531601*^9, 3.741362773292499*^9}, 
   3.741362869821067*^9, 3.741362917017488*^9, {3.741362959015592*^9, 
   3.741362988199677*^9}, {3.741363030733807*^9, 3.7413630394311028`*^9}, {
   3.741712200372405*^9, 3.741712203252426*^9}, {3.7417122548975554`*^9, 
   3.7417122673978148`*^9}, 3.7417132387172823`*^9, 3.741713308282517*^9, {
   3.741713499879524*^9, 3.741713542520051*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., 0.6445220261294238}, {6., 0.24139100549903242`}, {8., 
      0.0625237158815376}, {10., -0.03677089875949648}, {
      12., -0.0971156949984583}, {14., -0.13531903059206823`}, {
      16., -0.15981872808622485`}, {18., -0.17536065285141703`}, {
      20., -0.1848339375053536}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., 0.6445220261294238}, {6., 0.24139100549903242`}, {8., 
      0.0625237158815376}, {10., -0.03677089875949648}, {
      12., -0.0971156949984583}, {14., -0.13531903059206823`}, {
      16., -0.15981872808622485`}, {18., -0.17536065285141703`}, {
      20., -0.1848339375053536}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., 0.6445220261294238}, {6., 0.24139100549903242`}, {8., 
      0.0625237158815376}, {10., -0.03677089875949648}, {
      12., -0.0971156949984583}, {14., -0.13531903059206823`}, {
      16., -0.15981872808622485`}, {18., -0.17536065285141703`}, {
      20., -0.1848339375053536}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.7500000000000004`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{4., 20.}, {-0.1848339375053536, 0.6445220261294238}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.741363085030623*^9, 3.741363107031221*^9}, 
   3.741363178398204*^9, 3.741363214316081*^9, 3.74136324488803*^9, 
   3.741368647139634*^9, 3.741368989781249*^9, 3.741712069169829*^9, 
   3.741712174736969*^9, 3.741712268183935*^9, {3.7417132191417437`*^9, 
   3.7417132465526447`*^9}, 3.74171330964734*^9, 3.741713428249063*^9, {
   3.741713523447378*^9, 3.741713552830439*^9}, 3.741716806549904*^9, 
   3.7417169241398973`*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"Observed", "-", "Expected"}], "Expected"], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.741712273403635*^9, 3.7417122846908503`*^9}}],

Cell[TextData[{
 StyleBox["Why do I observe this pattern?  My guess: I think this might have \
to do with the boundaries on population size 0 and \
nMax=1.2*deterministic-expectation.  When population size is small the \
smallest population size in the stochastic model is 2 (1 individual of each \
type) whereas the maximum population size is nMax^2 which is much larger than \
the the deterministic population size ",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "x"], "nMax"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 StyleBox[" where x is the approximation factor.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.741712550109729*^9, 3.7417127008540373`*^9}, {
  3.741713771132745*^9, 3.741713875935419*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Allele Frequency", "Subsection",
 CellChangeTimes->{{3.741368497151391*^9, 3.741368526106021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFComp", "[", 
   RowBox[{"\[Gamma]0in_", ",", "\[Beta]in_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", ",", "PARS"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PARS", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r0", "\[Rule]", "0.2"}], ",", 
        RowBox[{"\[Gamma]0", "\[Rule]", "\[Gamma]0in"}], ",", 
        RowBox[{"s", "\[Rule]", "0.9"}], ",", 
        RowBox[{"\[Sigma]", "\[Rule]", "0.0"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", "\[Beta]in"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]0in", ",", "\[Beta]in", ",", 
        RowBox[{"AFEquDetDD", "[", "PARS", "]"}], ",", 
        RowBox[{"AFStatMeanDD", "[", "PARS", "]"}]}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.741007022767549*^9, 3.741007147336404*^9}, {
   3.741013784836713*^9, 3.7410137858115396`*^9}, 3.7413630149022827`*^9, {
   3.74136307482302*^9, 3.741363096828137*^9}, {3.741368622311874*^9, 
   3.741368626374864*^9}, 3.741369001369437*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AFComp", "[", 
      RowBox[{"\[Gamma]", ",", "0.05"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.741362688768346*^9, 3.7413627012341633`*^9}, {
  3.741362903256435*^9, 3.7413629351659727`*^9}, {3.7413630678773403`*^9, 
  3.7413630688401833`*^9}, {3.7413631206188173`*^9, 3.741363124988085*^9}, {
  3.741368629215872*^9, 3.741368629334692*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AFComp", "[", 
      RowBox[{"\[Gamma]", ",", "0.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7410071502900467`*^9, 3.741007216057193*^9}, {
   3.7410073051430273`*^9, 3.7410073092303057`*^9}, {3.741008574109131*^9, 
   3.741008609660977*^9}, 3.741010685866577*^9, {3.741010918641375*^9, 
   3.741010923360004*^9}, 3.74101381046441*^9, {3.741362624757495*^9, 
   3.741362625064357*^9}, 3.741362693277239*^9, {3.7413628816664057`*^9, 
   3.741362882972231*^9}, {3.741362937090085*^9, 3.7413629378588333`*^9}, {
   3.7413630701205473`*^9, 3.7413630702321653`*^9}, {3.741363126289187*^9, 
   3.741363127236106*^9}, 3.7413631917346973`*^9, {3.741368633404771*^9, 
   3.741368633550921*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AFComp", "[", 
      RowBox[{"\[Gamma]", ",", "5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7410071502900467`*^9, 3.741007216057193*^9}, {
   3.7410073051430273`*^9, 3.7410073092303057`*^9}, {3.741008574109131*^9, 
   3.741008609660977*^9}, 3.741010685866577*^9, {3.741010918641375*^9, 
   3.741010923360004*^9}, {3.7410109534685583`*^9, 3.7410109637254057`*^9}, {
   3.7413624896171827`*^9, 3.741362489724896*^9}, 3.741362626338485*^9, {
   3.741362888562646*^9, 3.741362889910142*^9}, {3.741362939085125*^9, 
   3.7413629426607533`*^9}, {3.741363071635322*^9, 3.74136307198392*^9}, {
   3.741363128756012*^9, 3.741363129756914*^9}, 3.741363193116847*^9, 
   3.741363228835424*^9, {3.7413686356798887`*^9, 3.741368635742847*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp0", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"temp0", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp1", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"temp1", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"temp2", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"temp2", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7410107968006144`*^9, 3.741010894231995*^9}, {
   3.7413625572817297`*^9, 3.7413625913447733`*^9}, {3.7413626947090673`*^9, 
   3.741362726018415*^9}, {3.741362765531601*^9, 3.741362773292499*^9}, 
   3.741362869821067*^9, 3.741362917017488*^9, {3.741362959015592*^9, 
   3.741362988199677*^9}, {3.741363030733807*^9, 3.7413630394311028`*^9}, {
   3.741368717871257*^9, 3.741368736727285*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., 0.36882070428797936`}, {6., 0.40107252023761547`}, {8., 
      0.4221640583587488}, {10., 0.4369341735465542}, {12., 
      0.4481515781099222}, {14., 0.4570572160060267}, {16., 
      0.464308580449287}, {18., 0.47030213309522256`}, {20., 
      0.4752996774923663}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., 0.36882070428797936`}, {6., 0.40107252023761547`}, {8., 
      0.4221640583587488}, {10., 0.4369341735465542}, {12., 
      0.4481515781099222}, {14., 0.4570572160060267}, {16., 
      0.464308580449287}, {18., 0.47030213309522256`}, {20., 
      0.4752996774923663}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., 0.36882070428797936`}, {6., 0.40107252023761547`}, {8., 
      0.4221640583587488}, {10., 0.4369341735465542}, {12., 
      0.4481515781099222}, {14., 0.4570572160060267}, {16., 
      0.464308580449287}, {18., 0.47030213309522256`}, {20., 
      0.4752996774923663}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.7500000000000004`, 0.36349675562775996`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{4., 20.}, {0.36882070428797936`, 0.4752996774923663}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.741363085030623*^9, 3.741363107031221*^9}, 
   3.741363178398204*^9, 3.741363214316081*^9, 3.74136324488803*^9, 
   3.741368654938891*^9, 3.7413687378272467`*^9, 3.7417120698095703`*^9, 
   3.7417123254157133`*^9, 3.741713428368186*^9, 3.741716806848428*^9, 
   3.7417169243021708`*^9}]
}, Open  ]],

Cell["\<\
Observed allele frequency as a function of gamma (population size). \
\>", "Text",
 CellChangeTimes->{{3.741712332127242*^9, 3.7417123777712717`*^9}}],

Cell[TextData[StyleBox["Why do I have a non-0.5 allele frequency when gamma \
is small?  I would expect there to be more variation when populations are \
smaller but expectation should still be 0.5.  Maybe I am screwing something \
up when calculating the stationary distribution or perhaps something about \
the reflecting boundary and/or the birth approximation are harming this?",
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.741712380820882*^9, 3.741712491780501*^9}, 
   3.741713901124151*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 96, 1, 137, "Title"],
Cell[679, 25, 1693, 32, 71, "Input"],
Cell[2375, 59, 542, 13, 48, "Input"],
Cell[2920, 74, 3403, 51, 48, "Input"],
Cell[CellGroupData[{
Cell[6348, 129, 215, 6, 71, "Input"],
Cell[6566, 137, 1225, 18, 70, "Output"]
}, Open  ]],
Cell[7806, 158, 505, 10, 80, "Input"],
Cell[CellGroupData[{
Cell[8336, 172, 102, 1, 65, "Subsection"],
Cell[8441, 175, 1721, 43, 598, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[10199, 223, 106, 1, 51, "Subsection"],
Cell[10308, 226, 1916, 46, 807, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[12273, 278, 105, 1, 96, "Title"],
Cell[CellGroupData[{
Cell[12403, 283, 169, 2, 216, "Chapter"],
Cell[12575, 287, 674, 16, 157, "Input"],
Cell[13252, 305, 329, 7, 108, "Input"],
Cell[CellGroupData[{
Cell[13606, 316, 156, 2, 213, "Section"],
Cell[CellGroupData[{
Cell[13787, 322, 42, 0, 108, "Input"],
Cell[13832, 324, 1105, 21, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14974, 350, 312, 8, 108, "Input"],
Cell[15289, 360, 1225, 25, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16551, 390, 106, 1, 145, "Subsection"],
Cell[CellGroupData[{
Cell[16682, 395, 568, 15, 108, "Input"],
Cell[17253, 412, 886, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18176, 429, 599, 16, 108, "Input"],
Cell[18778, 447, 1059, 20, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19886, 473, 96, 1, 145, "Subsection"],
Cell[CellGroupData[{
Cell[20007, 478, 489, 11, 108, "Input"],
Cell[20499, 491, 893, 15, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21429, 511, 545, 12, 108, "Input"],
Cell[21977, 525, 952, 18, 70, "Output"]
}, Open  ]],
Cell[22944, 546, 148, 2, 103, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23141, 554, 103, 1, 213, "Section"],
Cell[23247, 557, 1272, 34, 528, "Input"],
Cell[CellGroupData[{
Cell[24544, 595, 591, 11, 108, "Input"],
Cell[25138, 608, 1432, 34, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26631, 649, 153, 2, 216, "Chapter"],
Cell[CellGroupData[{
Cell[26809, 655, 102, 1, 145, "Subsection"],
Cell[26914, 658, 492, 13, 108, "Input"],
Cell[CellGroupData[{
Cell[27431, 675, 226, 4, 108, "Input"],
Cell[27660, 681, 1222, 20, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28931, 707, 107, 1, 145, "Subsection"],
Cell[29041, 710, 128, 2, 108, "Input"],
Cell[29172, 714, 3865, 92, 1206, "Input"],
Cell[33040, 808, 2853, 69, 1017, "Input"],
Cell[35896, 879, 636, 13, 180, "Input"],
Cell[CellGroupData[{
Cell[36557, 896, 162, 3, 108, "Input"],
Cell[36722, 901, 5425, 101, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42196, 1008, 98, 1, 145, "Subsection"],
Cell[42297, 1011, 500, 12, 108, "Input"],
Cell[CellGroupData[{
Cell[42822, 1027, 433, 11, 108, "Input"],
Cell[43258, 1040, 358, 7, 70, "Message"],
Cell[43619, 1049, 357, 7, 70, "Message"],
Cell[43979, 1058, 682, 12, 70, "Message"],
Cell[44664, 1072, 487, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45188, 1089, 2420, 56, 256, "Input"],
Cell[47611, 1147, 358, 7, 70, "Message"],
Cell[47972, 1156, 358, 7, 70, "Message"],
Cell[48333, 1165, 420, 9, 70, "Message"],
Cell[48756, 1176, 337, 7, 70, "Message"],
Cell[49096, 1185, 755, 13, 70, "Message"],
Cell[49854, 1200, 757, 13, 70, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50648, 1218, 1373, 34, 249, "Input"],
Cell[52024, 1254, 359, 7, 70, "Message"],
Cell[52386, 1263, 361, 7, 70, "Message"],
Cell[52750, 1272, 359, 7, 70, "Message"],
Cell[53112, 1281, 338, 7, 70, "Message"],
Cell[53453, 1290, 1115, 17, 70, "Message"],
Cell[54571, 1309, 1174, 18, 70, "Message"],
Cell[55748, 1329, 1147, 18, 70, "Message"],
Cell[56898, 1349, 342, 7, 70, "Message"],
Cell[57243, 1358, 1196, 18, 70, "Message"],
Cell[58442, 1378, 1196, 18, 70, "Message"],
Cell[59641, 1398, 1196, 18, 70, "Message"],
Cell[60840, 1418, 344, 7, 70, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61221, 1430, 1078, 28, 249, "Input"],
Cell[62302, 1460, 361, 7, 70, "Message"],
Cell[62666, 1469, 359, 7, 70, "Message"],
Cell[63028, 1478, 359, 7, 70, "Message"],
Cell[63390, 1487, 338, 7, 70, "Message"],
Cell[63731, 1496, 1012, 17, 70, "Message"],
Cell[64746, 1515, 1013, 17, 70, "Message"],
Cell[65762, 1534, 1028, 17, 70, "Message"],
Cell[66793, 1553, 342, 7, 70, "Message"],
Cell[67138, 1562, 1077, 17, 70, "Message"],
Cell[68218, 1581, 1077, 17, 70, "Message"],
Cell[69298, 1600, 1077, 17, 70, "Message"],
Cell[70378, 1619, 344, 7, 70, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70759, 1631, 610, 12, 108, "Input"],
Cell[71372, 1645, 359, 7, 70, "Message"],
Cell[71734, 1654, 420, 9, 70, "Message"],
Cell[72157, 1665, 756, 13, 70, "Message"],
Cell[72916, 1680, 2529, 39, 70, "Message"],
Cell[75448, 1721, 369, 8, 70, "Message"],
Cell[75820, 1731, 341, 7, 70, "Message"],
Cell[76164, 1740, 1145, 18, 70, "Message"],
Cell[77312, 1760, 1196, 18, 70, "Message"],
Cell[78511, 1780, 1145, 18, 70, "Message"],
Cell[79659, 1800, 1196, 18, 70, "Message"],
Cell[80858, 1820, 1145, 18, 70, "Message"],
Cell[82006, 1840, 342, 7, 70, "Message"],
Cell[82351, 1849, 1196, 18, 70, "Message"],
Cell[83550, 1869, 344, 7, 70, "Message"],
Cell[83897, 1878, 2529, 39, 70, "Message"],
Cell[86429, 1919, 7812, 191, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94290, 2116, 113, 1, 145, "Subsection"],
Cell[94406, 2119, 152, 3, 108, "Input"],
Cell[94561, 2124, 1966, 54, 180, "Input"],
Cell[96530, 2180, 493, 11, 108, "Input"],
Cell[97026, 2193, 1091, 25, 180, "Input"],
Cell[98120, 2220, 426, 11, 108, "Input"],
Cell[CellGroupData[{
Cell[98571, 2235, 297, 9, 108, "Input"],
Cell[98871, 2246, 1204, 31, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100112, 2282, 2748, 75, 388, "Input"],
Cell[102863, 2359, 1886, 34, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[104822, 2401, 112, 1, 96, "Title"],
Cell[CellGroupData[{
Cell[104959, 2406, 220, 3, 144, "Chapter"],
Cell[105182, 2411, 1284, 28, 109, "Input"],
Cell[106469, 2441, 518, 10, 120, "Input"],
Cell[CellGroupData[{
Cell[107012, 2455, 95, 1, 142, "Section"],
Cell[CellGroupData[{
Cell[107132, 2460, 1086, 28, 108, "Input"],
Cell[108221, 2490, 1937, 50, 70, "Output"]
}, Open  ]],
Cell[110173, 2543, 791, 22, 159, "Input"],
Cell[110967, 2567, 389, 10, 108, "Input"],
Cell[111359, 2579, 446, 12, 166, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[111842, 2596, 103, 1, 108, "Section"],
Cell[111948, 2599, 2429, 58, 352, "Input"],
Cell[CellGroupData[{
Cell[114402, 2661, 2412, 62, 400, "Input"],
Cell[116817, 2725, 6299, 126, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[123177, 2858, 166, 2, 117, "Chapter"],
Cell[CellGroupData[{
Cell[123368, 2864, 107, 1, 97, "Subsection"],
Cell[123478, 2867, 7801, 172, 1096, "Input"],
Cell[131282, 3041, 4439, 97, 691, "Input"],
Cell[135724, 3140, 561, 12, 120, "Input"],
Cell[CellGroupData[{
Cell[136310, 3156, 268, 5, 72, "Input"],
Cell[136581, 3163, 70359, 1160, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206989, 4329, 207, 3, 97, "Subsection"],
Cell[CellGroupData[{
Cell[207221, 4336, 100, 1, 78, "Subsubsection"],
Cell[207324, 4339, 119, 1, 103, "Text"],
Cell[207446, 4342, 847, 19, 108, "Input"],
Cell[208296, 4363, 182, 2, 103, "Text"],
Cell[208481, 4367, 1605, 38, 459, "Input"],
Cell[210089, 4407, 180, 2, 103, "Text"],
Cell[210272, 4411, 1820, 41, 667, "Input"],
Cell[212095, 4454, 289, 8, 130, "Text"],
Cell[212387, 4464, 2192, 55, 787, "Input"],
Cell[214582, 4521, 1755, 41, 882, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[216374, 4567, 155, 2, 61, "Subsubsection"],
Cell[216532, 4571, 1132, 25, 108, "Input"],
Cell[217667, 4598, 1358, 28, 159, "Input"],
Cell[219028, 4628, 1818, 43, 427, "Input"],
Cell[220849, 4673, 1636, 38, 256, "Input"],
Cell[222488, 4713, 1392, 29, 159, "Input"],
Cell[223883, 4744, 2075, 49, 441, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[225995, 4798, 105, 1, 61, "Subsubsection"],
Cell[226103, 4801, 1933, 44, 285, "Input"],
Cell[CellGroupData[{
Cell[228061, 4849, 255, 6, 72, "Input"],
Cell[228319, 4857, 6848, 121, 70, "Output"]
}, Open  ]],
Cell[235182, 4981, 1943, 45, 285, "Input"],
Cell[CellGroupData[{
Cell[237150, 5030, 278, 6, 72, "Input"],
Cell[237431, 5038, 15965, 272, 444, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253457, 5317, 113, 1, 97, "Subsection"],
Cell[CellGroupData[{
Cell[253595, 5322, 130, 1, 78, "Subsubsection"],
Cell[253728, 5325, 2907, 78, 379, "Input"],
Cell[256638, 5405, 1306, 29, 217, "Input"],
Cell[257947, 5436, 461, 9, 72, "Input"],
Cell[CellGroupData[{
Cell[258433, 5449, 128, 2, 72, "Input"],
Cell[258564, 5453, 3990, 79, 868, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262591, 5537, 170, 4, 72, "Input"],
Cell[262764, 5543, 113, 1, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262914, 5549, 172, 4, 72, "Input"],
Cell[263089, 5555, 90, 1, 72, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263228, 5562, 102, 1, 78, "Subsubsection"],
Cell[263333, 5565, 1941, 48, 667, "Input"],
Cell[265277, 5615, 717, 17, 108, "Input"],
Cell[265997, 5634, 2288, 56, 882, "Input"],
Cell[268288, 5692, 1816, 43, 882, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[270141, 5740, 98, 1, 61, "Subsubsection"],
Cell[270242, 5743, 1073, 24, 166, "Input"],
Cell[271318, 5769, 939, 25, 166, "Input"],
Cell[272260, 5796, 1364, 36, 166, "Input"],
Cell[CellGroupData[{
Cell[273649, 5836, 980, 23, 120, "Input"],
Cell[274632, 5861, 2378, 44, 1005, "Output"]
}, Open  ]],
Cell[277025, 5908, 795, 18, 120, "Input"],
Cell[277823, 5928, 985, 24, 120, "Input"],
Cell[278811, 5954, 1405, 40, 252, "Input"],
Cell[CellGroupData[{
Cell[280241, 5998, 442, 10, 72, "Input"],
Cell[280686, 6010, 137, 2, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280860, 6017, 927, 23, 174, "Input"],
Cell[281790, 6042, 2368, 43, 1005, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[284231, 6093, 143, 2, 144, "Chapter"],
Cell[CellGroupData[{
Cell[284399, 6099, 95, 1, 97, "Subsection"],
Cell[284497, 6102, 1161, 27, 319, "Input"],
Cell[285661, 6131, 508, 12, 108, "Input"],
Cell[286172, 6145, 852, 17, 108, "Input"],
Cell[287027, 6164, 898, 18, 108, "Input"],
Cell[CellGroupData[{
Cell[287950, 6186, 2496, 67, 348, "Input"],
Cell[290449, 6255, 1894, 41, 757, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[292392, 6302, 103, 1, 76, "Subsection"],
Cell[292498, 6305, 1208, 28, 213, "Input"],
Cell[293709, 6335, 554, 13, 72, "Input"],
Cell[294266, 6350, 899, 18, 72, "Input"],
Cell[295168, 6370, 944, 18, 72, "Input"],
Cell[CellGroupData[{
Cell[296137, 6392, 1558, 41, 213, "Input"],
Cell[297698, 6435, 2681, 55, 543, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[300452, 6498, 182, 2, 96, "Title"],
Cell[CellGroupData[{
Cell[300659, 6504, 106, 1, 96, "Chapter"],
Cell[300768, 6507, 1100, 27, 166, "Input"],
Cell[301871, 6536, 392, 8, 108, "Input"],
Cell[302266, 6546, 646, 17, 177, "Text"],
Cell[CellGroupData[{
Cell[302937, 6567, 581, 17, 148, "Input"],
Cell[303521, 6586, 1060, 19, 70, "Message"],
Cell[304584, 6607, 1326, 26, 70, "Output"]
}, Open  ]],
Cell[305925, 6636, 130, 2, 108, "Input"],
Cell[306058, 6640, 1117, 30, 166, "Input"],
Cell[CellGroupData[{
Cell[307200, 6674, 2323, 68, 409, "Input"],
Cell[309526, 6744, 7803, 143, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317366, 6892, 1756, 48, 460, "Input"],
Cell[319125, 6942, 8446, 154, 70, "Output"]
}, Open  ]],
Cell[327586, 7099, 341, 8, 180, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[327964, 7112, 220, 3, 78, "Chapter"],
Cell[328187, 7117, 1441, 31, 74, "Input"],
Cell[329631, 7150, 441, 9, 48, "Input"],
Cell[CellGroupData[{
Cell[330097, 7163, 95, 1, 95, "Section"],
Cell[CellGroupData[{
Cell[330217, 7168, 718, 19, 48, "Input"],
Cell[330938, 7189, 2005, 52, 70, "Output"]
}, Open  ]],
Cell[332958, 7244, 689, 20, 71, "Input"],
Cell[333650, 7266, 338, 9, 48, "Input"],
Cell[333991, 7277, 395, 11, 74, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334423, 7293, 103, 1, 95, "Section"],
Cell[334529, 7296, 2363, 58, 235, "Input"],
Cell[CellGroupData[{
Cell[336917, 7358, 2366, 62, 267, "Input"],
Cell[339286, 7422, 6138, 123, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[345485, 7552, 166, 2, 78, "Chapter"],
Cell[CellGroupData[{
Cell[345676, 7558, 107, 1, 65, "Subsection"],
Cell[345786, 7561, 9199, 198, 795, "Input"],
Cell[CellGroupData[{
Cell[355010, 7763, 164, 3, 48, "Input"],
Cell[355177, 7768, 65172, 1078, 561, 16103, 273, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[420364, 8849, 4437, 97, 461, "Input"],
Cell[424804, 8948, 561, 12, 80, "Input"],
Cell[CellGroupData[{
Cell[425390, 8964, 270, 5, 48, "Input"],
Cell[425663, 8971, 196646, 3230, 561, 69852, 1154, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[622358, 12207, 207, 3, 65, "Subsection"],
Cell[CellGroupData[{
Cell[622590, 12214, 100, 1, 52, "Subsubsection"],
Cell[622693, 12217, 119, 1, 46, "Text"],
Cell[622815, 12220, 914, 20, 111, "Input"],
Cell[623732, 12242, 182, 2, 46, "Text"],
Cell[623917, 12246, 1636, 38, 204, "Input"],
Cell[625556, 12286, 180, 2, 46, "Text"],
Cell[625739, 12290, 1721, 40, 297, "Input"],
Cell[627463, 12332, 315, 8, 58, "Text"],
Cell[627781, 12342, 2172, 55, 350, "Input"],
Cell[629956, 12399, 1709, 41, 392, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[631702, 12445, 155, 2, 41, "Subsubsection"],
Cell[631860, 12449, 1131, 25, 166, "Input"],
Cell[632994, 12476, 1306, 27, 220, "Input"],
Cell[634303, 12505, 1816, 43, 348, "Input"],
Cell[636122, 12550, 1586, 37, 219, "Input"],
Cell[637711, 12589, 1342, 28, 220, "Input"],
Cell[639056, 12619, 2077, 49, 357, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[641170, 12673, 105, 1, 41, "Subsubsection"],
Cell[641278, 12676, 1936, 44, 190, "Input"],
Cell[CellGroupData[{
Cell[643239, 12724, 256, 6, 48, "Input"],
Cell[643498, 12732, 6959, 122, 257, "Output"]
}, Open  ]],
Cell[650472, 12857, 1943, 45, 190, "Input"],
Cell[CellGroupData[{
Cell[652440, 12906, 301, 7, 48, "Input"],
Cell[652744, 12915, 16072, 273, 296, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[668877, 13195, 113, 1, 65, "Subsection"],
Cell[CellGroupData[{
Cell[669015, 13200, 130, 1, 52, "Subsubsection"],
Cell[669148, 13203, 2858, 77, 379, "Input"],
Cell[672009, 13282, 1300, 29, 217, "Input"],
Cell[CellGroupData[{
Cell[673334, 13315, 376, 8, 72, "Input"],
Cell[673713, 13325, 4660, 89, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[678422, 13420, 102, 1, 41, "Subsubsection"],
Cell[678527, 13423, 1897, 48, 297, "Input"],
Cell[680427, 13473, 665, 16, 48, "Input"],
Cell[681095, 13491, 2236, 55, 392, "Input"],
Cell[683334, 13548, 1765, 42, 392, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[685136, 13595, 98, 1, 41, "Subsubsection"],
Cell[685237, 13598, 1023, 23, 166, "Input"],
Cell[686263, 13623, 889, 24, 166, "Input"],
Cell[687155, 13649, 1321, 36, 166, "Input"],
Cell[CellGroupData[{
Cell[688501, 13689, 904, 22, 120, "Input"],
Cell[689408, 13713, 2477, 46, 70, "Output"]
}, Open  ]],
Cell[691900, 13762, 741, 17, 120, "Input"],
Cell[692644, 13781, 933, 23, 120, "Input"],
Cell[693580, 13806, 1331, 39, 252, "Input"],
Cell[CellGroupData[{
Cell[694936, 13849, 881, 23, 174, "Input"],
Cell[695820, 13874, 2460, 45, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[698353, 13927, 143, 2, 96, "Chapter"],
Cell[CellGroupData[{
Cell[698521, 13933, 96, 1, 65, "Subsection"],
Cell[698620, 13936, 1114, 26, 142, "Input"],
Cell[699737, 13964, 508, 12, 48, "Input"],
Cell[700248, 13978, 852, 17, 48, "Input"],
Cell[701103, 13997, 898, 18, 48, "Input"],
Cell[CellGroupData[{
Cell[702026, 14019, 2451, 65, 201, "Input"],
Cell[704480, 14086, 2910, 58, 337, "Output"]
}, Open  ]],
Cell[707405, 14147, 236, 5, 61, "Text"],
Cell[707644, 14154, 836, 19, 146, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[708517, 14178, 104, 1, 65, "Subsection"],
Cell[708624, 14181, 1156, 27, 142, "Input"],
Cell[709783, 14210, 555, 13, 48, "Input"],
Cell[710341, 14225, 900, 18, 48, "Input"],
Cell[711244, 14245, 944, 18, 48, "Input"],
Cell[CellGroupData[{
Cell[712213, 14267, 1556, 41, 142, "Input"],
Cell[713772, 14310, 2759, 56, 362, "Output"]
}, Open  ]],
Cell[716546, 14369, 160, 3, 46, "Text"],
Cell[716709, 14374, 537, 8, 135, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

